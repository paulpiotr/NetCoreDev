@using Kendo.Mvc.UI;
@using WebApplicationNetCoreDev.Helpers;

@model IEnumerable<ApiWykazuPodatnikowVatData.Models.EntityCheck>

@{ string gridName = string.Format("{0}{1}", @System.Reflection.Assembly.GetEntryAssembly().GetName().Name, @System.Reflection.Assembly.GetAssembly(typeof(ApiWykazuPodatnikowVatData.Models.Entity)).GetName().Name); }
@{ string gridActions = string.Format("{0}Actions", gridName); }
@{ string gridDataSource = string.Format("{0}DataSource", gridName); }
@{ string gridToolbarTemplate = string.Format("{0}GridToolbarTemplate", gridName); }
@{ string gridActionApiUrl = string.Format("{0}", "/api/SerwisRzeczypospolitejPolskiej/MinisterstwoFinansow/KrajowaAdministracjaSkarbowa/WykazPodatnikowVatApi/EntityCheckKendoGrid"); }
@{ ViewData["Title"] = "Ministerstwo Finansów - Wykaz podatników VAT"; }
@{ Layout = "~/Views/Shared/_LayoutAdmin.cshtml"; }

<div class="container-fluid k-content m-0">

    <div class="row">

        @(Html.Kendo().Breadcrumb()
            .Name("breadcrumb")
            .Items(items =>
            {
                items.Add()
                .Type(BreadcrumbItemType.RootItem)
                .Href("javascript:void(0)")
                .Text("Ministerstwo Finansów - Wykaz podatników VAT")
                .ShowText(true)
                .Icon("home")
                .ShowIcon(true);
            }))

    </div>

    <div class="row overflow-auto">

        @(Html.Kendo().DataSource<ApiWykazuPodatnikowVatData.Models.EntityCheck>()
            .Name(gridDataSource)
            .Ajax(
                dataSource => dataSource
                .Batch(true)
                .PageSize(100)
                .AutoSync(true)
                .ServerOperation(true)
                .Read(read => read.Url(gridActionApiUrl).Type(HttpVerbs.Get)
            )))
        @(Html.Kendo().Grid<ApiWykazuPodatnikowVatData.Models.EntityCheck>()
            .Name(gridName)
            .Columns(
            columns =>
            {
                columns.Bound(c => c.Id).Filterable(false);
                columns.Bound(c => c.RequestId).Filterable(false);
                columns.Bound(c => c.DateOfCreate).Format("{0:MM-dd-yyyy HH:mm:ss}").Filterable(false);
                columns.Bound(c => c.DateOfModification).Format("{0:MM-dd-yyyy HH:mm:ss}").Filterable(false);
                columns.Bound(c => c.UniqueIdentifierOfTheLoggedInUser).Filterable(false);
                columns.Bound(c => c.Nip).Filterable(false);
                columns.Bound(c => c.Regon).Filterable(false);
                columns.Bound(c => c.AccountNumber).Filterable(false);
                columns.Bound(c => c.AccountAssigned).Filterable(false);
                columns.Bound(c => c.RequestDateTime).Filterable(false);
                columns.Bound(c => c.RequestDateTimeAsDate).Filterable(false);
            })
            .ToolBar(toolbar =>
            {
                toolbar.ClientTemplateId(gridToolbarTemplate);
            })
            .Sortable()
            .Scrollable()
            .Filterable(filterable => filterable.Extra(false).Operators(operators => operators.ForString(str => str.Clear().IsEqualTo("Jest równy").Contains("Zawiera"))))
            .DataSource(gridDataSource))

        @Html.Script(
        @<script id="@gridToolbarTemplate" type="text/x-kendo-template">
            <div class="toolbar">
                <div class="row h-100 w-100 align-items-center align-self-center">
                    <div class="col-sm-12 p-t-10">
                        <i class="ti-check p-t-5"></i> Sprawdzanie podmiotów według numeru NIP i Numeru rachunku bankowego NRB (26 cyfr):
                    </div>
                </div>
                <div class="row h-100 w-100 p-t-20 align-items-center align-self-center">
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-2 mt-n4">
                        @(Html.Kendo().MaskedTextBox().Name("checkBankAccountByNipNip").Mask("0000000000").Label(l => l.Content("NIP (10 cyfr)").Floating(true)).ToClientTemplate())
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-2 mt-n4">
                        @(Html.Kendo().MaskedTextBox().Name("checkBankAccountByNipAccountNumber").Mask("00000000000000000000000000").Label(l => l.Content("Numer rachunku bankowego NRB (26 cyfr)").Floating(true)).ToClientTemplate())
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-6 p-sm-15 p-md-15">
                        <a href="javascript:void(0)" class="k-search k-link k-button k-button-search check-bank-account-by-nip" title="Sprawdź"><span class="k-icon k-i-check"></span>Sprawdź</a>
                        <a href="javascript:void(0)" class="k-pager-refresh k-link k-button k-button-icon" title="Odśwież widok"><span class="k-icon k-i-reload"></span></a>
                    </div>
                </div>
                <div class="row h-100 w-100 align-items-center align-self-center">
                    <div class="col-sm-12 p-t-10">
                        <i class="ti-check p-t-5"></i> Sprawdzanie podmiotów według numeru REGON i Numeru rachunku bankowego NRB (26 cyfr):
                    </div>
                </div>
                <div class="row h-100 w-100 p-t-20 align-items-center align-self-center">
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-2 mt-n4">
                        @(Html.Kendo().MaskedTextBox().Name("checkBankAccountByRegonRegon").Mask("00000000000000").Label(l => l.Content("REGON (9 lub 14 cyfr)").Floating(true)).ToClientTemplate())
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-2 mt-n4">
                        @(Html.Kendo().MaskedTextBox().Name("checkBankAccountByRegonAccountNumber").Mask("00000000000000000000000000").Label(l => l.Content("Numer rachunku bankowego NRB (26 cyfr)").Floating(true)).ToClientTemplate())
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3 col-xl-6 p-sm-15 p-md-15">
                        <a href="javascript:void(0)" class="k-search k-link k-button k-button-search check-bank-account-by-regon" title="Sprawdź"><span class="k-icon k-i-check"></span>Sprawdź</a>
                        <a href="javascript:void(0)" class="k-pager-refresh k-link k-button k-button-icon" title="Odśwież widok"><span class="k-icon k-i-reload"></span></a>
                    </div>
                </div>
            </div>
        </script>)

        @Html.Script(
        @<script type="text/javascript">
        $(function () {
            try {
                var grid = $("#@gridName");
                var gridDataSource = @gridDataSource;
                var gridWidget = grid.data("kendoGrid");
                gridWidget.wrapper.height($(".page-wrapper").first().height() * 0.9);
                gridWidget.resize();
                gridWidget.resize(true);
                grid.find(".k-grid-toolbar").on("click", ".k-pager-refresh", function (e) {
                    e.preventDefault();
                    gridDataSource.read();
                }).on("click", ".check-bank-account-by-nip", function (e) {
                    if (parseInt($("#checkBankAccountByNipNip").val(), 10) > 0 && $("#checkBankAccountByNipAccountNumber").val().length == 26) {
                        e.preventDefault($("#checkBankAccountByNipNip").val(), $("#checkBankAccountByNipAccountNumber").val());
                        var url = gridDataSource.transport.options.read.url;
                        gridDataSource.transport.options.read.url = "/api/SerwisRzeczypospolitejPolskiej/MinisterstwoFinansow/KrajowaAdministracjaSkarbowa/WykazPodatnikowVatApi/CheckBankAccountByNipKendoGird/" + $("#checkBankAccountByNipNip").val() + "/" + $("#checkBankAccountByNipAccountNumber").val();
                        gridDataSource.read();
                        gridDataSource.transport.options.read.url = url;
                    }
                    else {
                        $(function () {
                            $.toast({
                                heading: 'Popraw dane!',
                                text: 'Wpisz poprawny numer NIP i poprawny numer rachunku bankowego NRB!',
                                position: 'top-center',
                                loaderBg: '#ff6849',
                                icon: 'error',
                                hideAfter: 7000,
                                stack: 7
                            });
                        });
                    }
                }).on("click", ".check-bank-account-by-regon", function (e) {
                    if (parseInt($("#checkBankAccountByRegonRegon").val(), 10) > 0 && $("#checkBankAccountByRegonAccountNumber").val().length == 26) {
                        e.preventDefault($("#checkBankAccountByRegonRegon").val(), $("#checkBankAccountByRegonAccountNumber").val());
                        var url = gridDataSource.transport.options.read.url;
                        gridDataSource.transport.options.read.url = "/api/SerwisRzeczypospolitejPolskiej/MinisterstwoFinansow/KrajowaAdministracjaSkarbowa/WykazPodatnikowVatApi/CheckBankAccountByRegonKendoGird/" + $("#checkBankAccountByRegonRegon").val() + "/" + $("#checkBankAccountByRegonAccountNumber").val();
                        gridDataSource.read();
                        gridDataSource.transport.options.read.url = url;
                    }
                    else {
                        $(function () {
                            $.toast({
                                heading: 'Popraw dane!',
                                text: 'Wpisz poprawny numer REGON i poprawny numer rachunku bankowego NRB!',
                                position: 'top-center',
                                loaderBg: '#ff6849',
                                icon: 'error',
                                hideAfter: 7000,
                                stack: 7
                            });
                        });
                    }
                });
            }
            catch (e) {
                console.log(e);
            }
        });
        </script>)

    </div>
</div>

