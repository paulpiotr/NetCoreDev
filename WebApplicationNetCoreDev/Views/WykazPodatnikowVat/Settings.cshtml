@using WebApplicationNetCoreDev.Helpers;

@model ApiWykazuPodatnikowVatData.Models.AppSettings

@{ ViewData["Title"] = "Ustawienia aplikacja " + Model.GetType().FullName; }
@{ Layout = "~/Views/Shared/_LayoutAdmin.cshtml"; }

<div class="card bg-info text-white m-0 p-0 align-middle shadow">
    <div class="card-header text-left">
        <i class="ti-settings"></i> @ViewData["Title"]
    </div>
    <div class="card-body bg-white">
        <form class="form-horizontal form-material" asp-controller="WykazPodatnikowVat" asp-action="Settings" asp-route-ReturnUrl="@Context.Request.Query["ReturnUrl"]">
            <div class="form-group has-danger">
                <div class="col-sm-12">
                    @if (null != Model && Model.CheckForUpdateEveryDays >= 0)
                    {
                        @Html.LabelFor(m => m.CheckForUpdateEveryDays, new { Class = "control-label text-success" })
                    }
                    @Html.TextBoxFor(m => m.CheckForUpdateEveryDays, new { Class = "form-control", Readonly = "readonly" })
                    <div class="form-control-feedback mt-2">
                        @Html.ValidationMessageFor(m => m.CheckForUpdateEveryDays)
                    </div>
                </div>
                <div class="col-sm-12 mt-2">
                    @if (null != Model && null != Model.LastMigrateDateTime)
                    {
                        @Html.LabelFor(m => m.LastMigrateDateTime, new { Class = "control-label text-success" })
                    }
                    @Html.TextBoxFor(m => m.LastMigrateDateTime, new { Class = "form-control", Readonly = "readonly" })
                    <div class="form-control-feedback mt-2">
                        @Html.ValidationMessageFor(m => m.LastMigrateDateTime)
                    </div>
                </div>
                <div class="col-sm-12 mt-2">
                    @if (null != Model && null != Model.RestClientUrl && !string.IsNullOrWhiteSpace(Model.RestClientUrl))
                    {
                        @Html.LabelFor(m => m.RestClientUrl, new { Class = "control-label text-success" })
                    }
                    @Html.TextBoxFor(m => m.RestClientUrl, new { Class = "form-control" })
                    <div class="form-control-feedback mt-2">
                        @Html.ValidationMessageFor(m => m.RestClientUrl)
                    </div>
                </div>
                <div class="col-sm-12 mt-2">
                    @if (null != Model && Model.CacheLifeTime >= 0)
                    {
                        @Html.LabelFor(m => m.CacheLifeTime, new { Class = "control-label text-success" })
                    }
                    @Html.TextBoxFor(m => m.CacheLifeTime, new { Class = "form-control" })
                    <div class="form-control-feedback mt-2">
                        @Html.ValidationMessageFor(m => m.CacheLifeTime)
                    </div>
                </div>
                <div class="col-sm-12 mt-2">
                    @if (null != Model && null != Model.ConnectionString && !string.IsNullOrWhiteSpace(Model.ConnectionString))
                    {
                        @Html.LabelFor(m => m.ConnectionString, new { Class = "control-label text-success" })
                    }
                    @Html.TextAreaFor(m => m.ConnectionString, new { Class = "form-control", Style = "height: 3rem" })
                    @if (null != Model && null != Model.ConnectionString && !string.IsNullOrWhiteSpace(Model.ConnectionString))
                    {
                        <div class="text-black-50 font-italic m-t-10 m-b-10">
                            <small>Wartość połączenia po tłumaczeniu zmiennych: @NetAppCommon.DatabaseMssql.ParseConnectionString(Model.ConnectionString)</small>
                        </div>
                    }
                    <div class="form-control-feedback mt-2">
                        @Html.ValidationMessageFor(m => m.ConnectionString)
                    </div>
                    <div class="checkbox text-success mt-2">
                        <label>@Html.CheckBoxFor(m => m.CheskForConnection, new { Class = "checkbox checkbox-success" }) @Html.DisplayNameFor(m => m.CheskForConnection)</label>
                    </div>
                    <div class="checkbox text-success mt-2">
                        <label>@Html.CheckBoxFor(m => m.CheckForUpdateAndMigrate, new { Class = "checkbox checkbox-success" }) @Html.DisplayNameFor(m => m.CheckForUpdateAndMigrate)</label>
                    </div>
                </div>
            </div>
            <div class="row justify-content-center mt-5">
                <div class="form-group align-self text-center">
                    <div class="col-sm-12 align-self-center align-items-center">
                        <button class="btn btn-block btn-lg btn-info btn-rounded" type="submit" title="Zapisz ustawienia"><i class="ti-save"></i> Zapisz<span class="d-none d-md-inline"> ustawienia</span></button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@*@Html.Script(
    @<script type="text/javascript">
         $(function () {
             try {
                 $('#CopyButton').click(function () {
                     $('#JwtStringToken').select();
                     document.execCommand("copy");
                 });
             }
             catch (e) {
                 console.log(e);
             }
         });
    </script>
    )*@