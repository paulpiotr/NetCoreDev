(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"./node_modules/@progress/kendo-ui/js/kendo.chat.js":
/*!**********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.chat.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1047);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1048), __webpack_require__(1049), __webpack_require__(1050) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "chat",\n\t    name: "Chat",\n\t    category: "web",\n\t    description: "The Chat component.",\n\t    depends: [ "core", "draganddrop" ]\n\t};\n\n\t(function($, undefined) {\n\n\t    var kendo = window.kendo;\n\t    var Widget = kendo.ui.Widget;\n\t    var extend = $.extend;\n\t    var DOT = ".";\n\n\t    var chatStyles = {\n\t        wrapper: "k-widget k-chat",\n\t        canvas: "k-chat-canvas",\n\t        viewWrapper: "k-message-list",\n\t        messageBoxWrapper: "k-message-box",\n\t        toolbarBoxWrapper: "k-toolbar-box"\n\t    };\n\n\t    var Chat = Widget.extend({\n\t        init: function(element, options, events) {\n\t            Widget.fn.init.call(this, element, options);\n\n\t            if (events) {\n\t                this._events = events;\n\t            }\n\n\t            this._user();\n\n\t            this._wrapper();\n\n\t            this._view();\n\n\t            this._messageBox();\n\n\t            if(options && options.toolbar && options.toolbar.buttons) {\n\t                this._toolbar();\n\t            }\n\n\t            kendo.notify(this);\n\t        },\n\n\t        events: [\n\t            "typingStart",\n\t            "typingEnd",\n\t            "post",\n\t            "sendMessage",\n\t            "actionClick",\n\t            "toolClick"\n\t        ],\n\n\t        options: {\n\t            user: {\n\t                name: "User",\n\t                iconUrl: ""\n\t            },\n\t            name: "Chat",\n\t            messages: {\n\t                placeholder: "Type a message...",\n\t                toggleButton: "Toggle toolbar",\n\t                sendButton: "Send message"\n\t            },\n\t            toolbar: false\n\t        },\n\n\t        setOptions: function(options) {\n\t            this._setEvents(options);\n\t            $.extend(true, this.options, options);\n\n\t            if (this.toolbar && "toolbar" in options) {\n\t                this.toolbar.destroy();\n\t                this.toolbar = null;\n\t            }\n\n\t            if (this.messageBox) {\n\t                this.messageBox.unbind();\n\t                this.messageBox.destroy();\n\t                this.messageBox = null;\n\t            }\n\n\t            this._messageBox();\n\n\t            if ("toolbar" in options) {\n\t                this._resetToolbarButtons(options);\n\t                this._toolbar();\n\t            }\n\t        },\n\n\t        _resetToolbarButtons: function (options) {\n\t            var toolbarBoxWrapper = this.wrapper.find(DOT + chatStyles.toolbarBoxWrapper);\n\n\t            if(!toolbarBoxWrapper.is(":visible")){\n\t                toolbarBoxWrapper.show();\n\t            }\n\n\t            if("buttons" in options.toolbar) {\n\t                this.options.toolbar.buttons = options.toolbar.buttons;\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            if (this.view) {\n\t                this.view.unbind();\n\t                this.view.destroy();\n\t                this.view = null;\n\t            }\n\n\t            if (this.messageBox) {\n\t                this.messageBox.unbind();\n\t                this.messageBox.destroy();\n\t                this.messageBox = null;\n\t            }\n\n\t            if(this.toolbar) {\n\t                this.toolbar.destroy();\n\t                this.toolbar = null;\n\t            }\n\n\t            Widget.fn.destroy.call(this);\n\t        },\n\n\t        _user: function() {\n\t            this.options.user.id = kendo.guid();\n\t        },\n\n\t        getUser: function() {\n\t            return extend(true, {}, this.options.user);\n\t        },\n\n\t        _wrapper: function() {\n\t            var chatStyles = Chat.styles;\n\t            var options = this.options;\n\t            var height = options.height;\n\t            var width = options.width;\n\t            var uiElements = "<div class=\'" + chatStyles.viewWrapper + "\'></div>" +\n\t                             "<div class=\'" + chatStyles.messageBoxWrapper + "\'></div>" +\n\t                             "<div class=\'" + chatStyles.toolbarBoxWrapper + "\' role=\'toolbar\' style=\'display:none;\'></div>";\n\n\t            this.wrapper = this.element\n\t                .addClass(chatStyles.wrapper)\n\t                .append(uiElements);\n\n\t            if (options.toolbar && options.toolbar.buttons && options.toolbar.buttons.length) {\n\t                this.wrapper.find(DOT + chatStyles.toolbarBoxWrapper).show();\n\t            }\n\n\t            if (height) {\n\t                this.wrapper.height(height);\n\t            }\n\n\t            if (width) {\n\t                this.wrapper.css("max-width", width);\n\t            }\n\t        },\n\n\t        _view: function() {\n\t            var that = this;\n\t            var chatStyles = Chat.styles;\n\t            var options = extend(true, {}, this.options);\n\n\t            var element = this.wrapper.find(DOT + chatStyles.viewWrapper + "");\n\n\t            this.view = new kendo.chat.ChatView(element, options);\n\n\t            this.view\n\t                .bind("actionClick", function(args) {\n\t                    that.trigger("actionClick", args);\n\n\t                    that.postMessage(args.text);\n\t                });\n\t        },\n\n\t        _messageBox: function() {\n\t            var that = this;\n\t            var chatStyles = Chat.styles;\n\t            var options = extend(true, {}, this.options);\n\t            var element = this.wrapper.find(DOT + chatStyles.messageBoxWrapper + "");\n\n\t            this.messageBox = new kendo.chat.ChatMessageBox(element, options);\n\n\t            this.messageBox\n\t                .bind("typingStart", function(args) {\n\t                    that.trigger("typingStart", args);\n\t                })\n\t                .bind("typingEnd", function(args) {\n\t                    that.trigger("typingEnd", args);\n\t                })\n\t                .bind("sendMessage", function(args) {\n\t                    that.trigger("sendMessage", args);\n\n\t                    that.postMessage(args.text);\n\t                })\n\t                .bind("toggleToolbar", function() {\n\t                    that.toggleToolbar();\n\t                });\n\t        },\n\n\t        _toolbar: function() {\n\t            var that = this;\n\t            var chatStyles = Chat.styles;\n\t            var options = extend(true, {}, that.options);\n\t            var element = that.wrapper.find(DOT + chatStyles.toolbarBoxWrapper + "");\n\n\t            if(options.toolbar.scrollable === undefined) {\n\t                this.options.toolbar.scrollable = options.toolbar.scrollable = true;\n\t            }\n\n\t            if(options.toolbar.toggleable === undefined) {\n\t                this.options.toolbar.toggleable = options.toolbar.toggleable = false;\n\t            }\n\n\t            that.toolbar = new kendo.chat.ChatToolBar(element, options);\n\n\t            that.toolbar.bind("click", function(ev){\n\t                that.trigger("toolClick", {\n\t                    sender: that,\n\t                    name: ev.name,\n\t                    button: ev.button,\n\t                    messageBox: that.messageBox.input[0],\n\t                    originalEvent: ev.originalEvent\n\t                });\n\t            });\n\t        },\n\n\t        postMessage: function(message) {\n\t            var postArgs = extend(true, {}, { text: message, type: "message", timestamp: new Date(), from: this.getUser() });\n\n\t            this.trigger("post", postArgs);\n\n\t            this.renderMessage(postArgs, postArgs.from);\n\t        },\n\n\t        // TEST calling View renderMessage\n\t        renderMessage: function(message, sender) {\n\t            this.view.renderMessage(message, sender);\n\t        },\n\n\t        // TEST calling View renderSuggestedActions\n\t        renderSuggestedActions: function(suggestedActions) {\n\t            this.view.renderSuggestedActions(suggestedActions);\n\t        },\n\n\t        // TEST calling View renderCard\n\t        renderAttachments: function(options, sender) {\n\t            this.view.renderAttachments(options, sender);\n\t        },\n\n\t        toggleToolbar: function (skipAnimation) {\n\t            this.toolbar.toggle(skipAnimation);\n\t        },\n\n\t        renderUserTypingIndicator: function(sender) {\n\t            this.view._renderTypingIndicator(sender);\n\t        },\n\n\t        clearUserTypingIndicator: function(sender) {\n\t            this.view._removeTypingParticipant(sender);\n\t        },\n\n\t        removeTypingIndicator: function() {\n\t            this.view._removeTypingIndicator();\n\t        }\n\t    });\n\n\t    kendo.ui.plugin(Chat);\n\n\t    extend(true, Chat, { styles: chatStyles });\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./chat/messageBox */ "./node_modules/@progress/kendo-ui/js/chat/messageBox.js");\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./chat/toolbar */ "./node_modules/@progress/kendo-ui/js/chat/toolbar.js");\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./chat/view */ "./node_modules/@progress/kendo-ui/js/chat/view.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.chat.js?')},"./node_modules/@progress/kendo-ui/js/kendo.color.js":
/*!***********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.color.js ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1051);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/***********************************************************************\n\t * WARNING: this file is auto-generated.  If you change it directly,\n\t * your modifications will eventually be lost.  The source code is in\n\t * `kendo-drawing` repository, you should make your changes there and\n\t * run `src-modules/sync.sh` in this repository.\n\t */\n\t(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t    var __meta__ = { // jshint ignore:line\n\t        id: "color",\n\t        name: "Color utils",\n\t        category: "framework",\n\t        advanced: true,\n\t        description: "Color utilities used across components",\n\t        depends: [ "core" ]\n\t    };\n\n\t/*jshint eqnull:true  */\n\n\twindow.kendo = window.kendo || {};\n\n\tvar Class = kendo.Class;\n\tvar support = kendo.support;\n\n\tvar namedColors = {\n\t    aliceblue: "f0f8ff", antiquewhite: "faebd7", aqua: "00ffff",\n\t    aquamarine: "7fffd4", azure: "f0ffff", beige: "f5f5dc",\n\t    bisque: "ffe4c4", black: "000000", blanchedalmond: "ffebcd",\n\t    blue: "0000ff", blueviolet: "8a2be2", brown: "a52a2a",\n\t    burlywood: "deb887", cadetblue: "5f9ea0", chartreuse: "7fff00",\n\t    chocolate: "d2691e", coral: "ff7f50", cornflowerblue: "6495ed",\n\t    cornsilk: "fff8dc", crimson: "dc143c", cyan: "00ffff",\n\t    darkblue: "00008b", darkcyan: "008b8b", darkgoldenrod: "b8860b",\n\t    darkgray: "a9a9a9", darkgrey: "a9a9a9", darkgreen: "006400",\n\t    darkkhaki: "bdb76b", darkmagenta: "8b008b", darkolivegreen: "556b2f",\n\t    darkorange: "ff8c00", darkorchid: "9932cc", darkred: "8b0000",\n\t    darksalmon: "e9967a", darkseagreen: "8fbc8f", darkslateblue: "483d8b",\n\t    darkslategray: "2f4f4f", darkslategrey: "2f4f4f", darkturquoise: "00ced1",\n\t    darkviolet: "9400d3", deeppink: "ff1493", deepskyblue: "00bfff",\n\t    dimgray: "696969", dimgrey: "696969", dodgerblue: "1e90ff",\n\t    firebrick: "b22222", floralwhite: "fffaf0", forestgreen: "228b22",\n\t    fuchsia: "ff00ff", gainsboro: "dcdcdc", ghostwhite: "f8f8ff",\n\t    gold: "ffd700", goldenrod: "daa520", gray: "808080",\n\t    grey: "808080", green: "008000", greenyellow: "adff2f",\n\t    honeydew: "f0fff0", hotpink: "ff69b4", indianred: "cd5c5c",\n\t    indigo: "4b0082", ivory: "fffff0", khaki: "f0e68c",\n\t    lavender: "e6e6fa", lavenderblush: "fff0f5", lawngreen: "7cfc00",\n\t    lemonchiffon: "fffacd", lightblue: "add8e6", lightcoral: "f08080",\n\t    lightcyan: "e0ffff", lightgoldenrodyellow: "fafad2", lightgray: "d3d3d3",\n\t    lightgrey: "d3d3d3", lightgreen: "90ee90", lightpink: "ffb6c1",\n\t    lightsalmon: "ffa07a", lightseagreen: "20b2aa", lightskyblue: "87cefa",\n\t    lightslategray: "778899", lightslategrey: "778899", lightsteelblue: "b0c4de",\n\t    lightyellow: "ffffe0", lime: "00ff00", limegreen: "32cd32",\n\t    linen: "faf0e6", magenta: "ff00ff", maroon: "800000",\n\t    mediumaquamarine: "66cdaa", mediumblue: "0000cd", mediumorchid: "ba55d3",\n\t    mediumpurple: "9370d8", mediumseagreen: "3cb371", mediumslateblue: "7b68ee",\n\t    mediumspringgreen: "00fa9a", mediumturquoise: "48d1cc", mediumvioletred: "c71585",\n\t    midnightblue: "191970", mintcream: "f5fffa", mistyrose: "ffe4e1",\n\t    moccasin: "ffe4b5", navajowhite: "ffdead", navy: "000080",\n\t    oldlace: "fdf5e6", olive: "808000", olivedrab: "6b8e23",\n\t    orange: "ffa500", orangered: "ff4500", orchid: "da70d6",\n\t    palegoldenrod: "eee8aa", palegreen: "98fb98", paleturquoise: "afeeee",\n\t    palevioletred: "d87093", papayawhip: "ffefd5", peachpuff: "ffdab9",\n\t    peru: "cd853f", pink: "ffc0cb", plum: "dda0dd",\n\t    powderblue: "b0e0e6", purple: "800080", red: "ff0000",\n\t    rosybrown: "bc8f8f", royalblue: "4169e1", saddlebrown: "8b4513",\n\t    salmon: "fa8072", sandybrown: "f4a460", seagreen: "2e8b57",\n\t    seashell: "fff5ee", sienna: "a0522d", silver: "c0c0c0",\n\t    skyblue: "87ceeb", slateblue: "6a5acd", slategray: "708090",\n\t    slategrey: "708090", snow: "fffafa", springgreen: "00ff7f",\n\t    steelblue: "4682b4", tan: "d2b48c", teal: "008080",\n\t    thistle: "d8bfd8", tomato: "ff6347", turquoise: "40e0d0",\n\t    violet: "ee82ee", wheat: "f5deb3", white: "ffffff",\n\t    whitesmoke: "f5f5f5", yellow: "ffff00", yellowgreen: "9acd32"\n\t};\n\n\tvar browser = support.browser;\n\n\tvar matchNamedColor = function (color) {\n\t    var colorNames = Object.keys(namedColors);\n\t    colorNames.push("transparent");\n\n\t    var regexp = new RegExp("^(" + colorNames.join("|") + ")(\\\\W|$)", "i");\n\t    matchNamedColor = function (color) { return regexp.exec(color); };\n\n\t    return regexp.exec(color);\n\t};\n\n\tvar BaseColor = Class.extend({\n\t    init: function() {  },\n\n\t    toHSV: function() { return this; },\n\n\t    toRGB: function() { return this; },\n\n\t    toHex: function() { return this.toBytes().toHex(); },\n\n\t    toBytes: function() { return this; },\n\n\t    toCss: function() { return "#" + this.toHex(); },\n\n\t    toCssRgba: function() {\n\t        var rgb = this.toBytes();\n\t        return ("rgba(" + (rgb.r) + ", " + (rgb.g) + ", " + (rgb.b) + ", " + (parseFloat((Number(this.a)).toFixed(3))) + ")");\n\t    },\n\n\t    toDisplay: function() {\n\t        if (browser.msie && browser.version < 9) {\n\t            return this.toCss(); // no RGBA support; does it support any opacity in colors?\n\t        }\n\t        return this.toCssRgba();\n\t    },\n\n\t    equals: function(c) {\n\t        return c === this || c !== null && this.toCssRgba() === parseColor(c).toCssRgba();\n\t    },\n\n\t    diff: function(other) {\n\t        if (other === null) {\n\t            return NaN;\n\t        }\n\n\t        var c1 = this.toBytes();\n\t        var c2 = other.toBytes();\n\n\t        return Math.sqrt(Math.pow((c1.r - c2.r) * 0.30, 2) +\n\t                         Math.pow((c1.g - c2.g) * 0.59, 2) +\n\t                         Math.pow((c1.b - c2.b) * 0.11, 2));\n\t    },\n\n\t    clone: function() {\n\t        var c = this.toBytes();\n\t        if (c === this) {\n\t            c = new Bytes(c.r, c.g, c.b, c.a);\n\t        }\n\n\t        return c;\n\t    }\n\t});\n\n\tvar RGB = BaseColor.extend({\n\t    init: function(r, g, b, a) {\n\t        BaseColor.fn.init.call(this);\n\n\t        this.r = r;\n\t        this.g = g;\n\t        this.b = b;\n\t        this.a = a;\n\t    },\n\n\t    toHSV: function() {\n\t        var ref = this;\n\t        var r = ref.r;\n\t        var g = ref.g;\n\t        var b = ref.b;\n\t        var min = Math.min(r, g, b);\n\t        var max = Math.max(r, g, b);\n\t        var delta = max - min;\n\t        var v = max;\n\t        var h, s;\n\n\t        if (delta === 0) {\n\t            return new HSV(0, 0, v, this.a);\n\t        }\n\n\t        if (max !== 0) {\n\t            s = delta / max;\n\t            if (r === max) {\n\t                h = (g - b) / delta;\n\t            } else if (g === max) {\n\t                h = 2 + (b - r) / delta;\n\t            } else {\n\t                h = 4 + (r - g) / delta;\n\t            }\n\n\t            h *= 60;\n\t            if (h < 0) {\n\t                h += 360;\n\t            }\n\t        } else {\n\t            s = 0;\n\t            h = -1;\n\t        }\n\n\t        return new HSV(h, s, v, this.a);\n\t    },\n\n\t    toHSL: function() {\n\t        var ref = this;\n\t        var r = ref.r;\n\t        var g = ref.g;\n\t        var b = ref.b;\n\t        var max = Math.max(r, g, b);\n\t        var min = Math.min(r, g, b);\n\t        var h, s, l = (max + min) / 2;\n\n\t        if (max === min) {\n\t            h = s = 0;\n\t        } else {\n\t            var d = max - min;\n\t            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t            switch (max) {\n\t                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t                case g: h = (b - r) / d + 2; break;\n\t                case b: h = (r - g) / d + 4; break;\n\t                default: break;\n\t            }\n\t        }\n\n\t        return new HSL(h * 60, s * 100, l * 100, this.a);\n\t    },\n\n\t    toBytes: function() {\n\t        return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);\n\t    }\n\t});\n\n\tvar Bytes = RGB.extend({\n\t    init: function(r, g, b, a) {\n\t        RGB.fn.init.call(this, Math.round(r), Math.round(g), Math.round(b), a);\n\t    },\n\n\t    toRGB: function() {\n\t        return new RGB(this.r / 255, this.g / 255, this.b / 255, this.a);\n\t    },\n\n\t    toHSV: function() {\n\t        return this.toRGB().toHSV();\n\t    },\n\n\t    toHSL: function() {\n\t        return this.toRGB().toHSL();\n\t    },\n\n\t    toHex: function() {\n\t        return hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);\n\t    },\n\n\t    toBytes: function() {\n\t        return this;\n\t    }\n\t});\n\n\tfunction hex(n, width, pad) {\n\t    if (pad === void 0) { pad = "0"; }\n\n\t    var result = n.toString(16);\n\t    while (width > result.length) {\n\t        result = pad + result;\n\t    }\n\n\t    return result;\n\t}\n\n\tvar HSV = BaseColor.extend({\n\t    init: function(h, s, v, a) {\n\t        BaseColor.fn.init.call(this);\n\n\t        this.h = h;\n\t        this.s = s;\n\t        this.v = v;\n\t        this.a = a;\n\t    },\n\n\t    toRGB: function() {\n\t        var ref = this;\n\t        var h = ref.h;\n\t        var s = ref.s;\n\t        var v = ref.v;\n\t        var r, g, b;\n\n\t        if (s === 0) {\n\t            r = g = b = v;\n\t        } else {\n\t            h /= 60;\n\n\t            var i = Math.floor(h);\n\t            var f = h - i;\n\t            var p = v * (1 - s);\n\t            var q = v * (1 - s * f);\n\t            var t = v * (1 - s * (1 - f));\n\n\t            switch (i) {\n\t                case 0: r = v; g = t; b = p; break;\n\t                case 1: r = q; g = v; b = p; break;\n\t                case 2: r = p; g = v; b = t; break;\n\t                case 3: r = p; g = q; b = v; break;\n\t                case 4: r = t; g = p; b = v; break;\n\t                default: r = v; g = p; b = q; break;\n\t            }\n\t        }\n\n\t        return new RGB(r, g, b, this.a);\n\t    },\n\n\t    toHSL: function() {\n\t        return this.toRGB().toHSL();\n\t    },\n\n\t    toBytes: function() {\n\t        return this.toRGB().toBytes();\n\t    }\n\t});\n\n\tvar HSL = BaseColor.extend({\n\t    init: function(h, s, l, a) {\n\t        BaseColor.fn.init.call(this);\n\n\t        this.h = h;\n\t        this.s = s;\n\t        this.l = l;\n\t        this.a = a;\n\t    },\n\n\t    toRGB: function() {\n\t        var h = this.h / 360;\n\t        var s = this.s / 100;\n\t        var l = this.l / 100;\n\t        var r, g, b;\n\n\t        if (s === 0) {\n\t            r = g = b = l; // achromatic\n\t        } else {\n\t            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t            var p = 2 * l - q;\n\t            r = hue2rgb(p, q, h + 1 / 3);\n\t            g = hue2rgb(p, q, h);\n\t            b = hue2rgb(p, q, h - 1 / 3);\n\t        }\n\n\t        return new RGB(r, g, b, this.a);\n\t    },\n\n\t    toHSV: function() {\n\t        return this.toRGB().toHSV();\n\t    },\n\n\t    toBytes: function() {\n\t        return this.toRGB().toBytes();\n\t    }\n\t});\n\n\tfunction hue2rgb(p, q, s) {\n\t    var t = s;\n\n\t    if (t < 0) {\n\t        t += 1;\n\t    }\n\n\t    if (t > 1) {\n\t        t -= 1;\n\t    }\n\n\t    if (t < 1 / 6) {\n\t        return p + (q - p) * 6 * t;\n\t    }\n\n\t    if (t < 1 / 2) {\n\t        return q;\n\t    }\n\n\t    if (t < 2 / 3) {\n\t        return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\n\t    return p;\n\t}\n\n\tfunction parseColor(value, safe) {\n\t    var m, ret;\n\n\t    if (value == null || value === "none") {\n\t        return null;\n\t    }\n\n\t    if (value instanceof BaseColor) {\n\t        return value;\n\t    }\n\n\t    var color = value.toLowerCase();\n\t    if ((m = matchNamedColor(color))) {\n\t        if (m[1] === "transparent") {\n\t            color = new RGB(1, 1, 1, 0);\n\t        } else {\n\t            color = parseColor(namedColors[m[1]], safe);\n\t        }\n\t        color.match = [ m[1] ];\n\t        return color;\n\t    }\n\t    if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) {\n\t        ret = new Bytes(parseInt(m[1], 16),\n\t                        parseInt(m[2], 16),\n\t                        parseInt(m[3], 16), 1);\n\t    } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) {\n\t        ret = new Bytes(parseInt(m[1] + m[1], 16),\n\t                        parseInt(m[2] + m[2], 16),\n\t                        parseInt(m[3] + m[3], 16), 1);\n\t    } else if ((m = /^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/.exec(color))) {\n\t        ret = new Bytes(parseInt(m[1], 10),\n\t                        parseInt(m[2], 10),\n\t                        parseInt(m[3], 10), 1);\n\t    } else if ((m = /^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n\t        ret = new Bytes(parseInt(m[1], 10),\n\t                        parseInt(m[2], 10),\n\t                        parseInt(m[3], 10), parseFloat(m[4]));\n\t    } else if ((m = /^rgb\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*\\)/.exec(color))) {\n\t        ret = new RGB(parseFloat(m[1]) / 100,\n\t                      parseFloat(m[2]) / 100,\n\t                      parseFloat(m[3]) / 100, 1);\n\t    } else if ((m = /^rgba\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n\t        ret = new RGB(parseFloat(m[1]) / 100,\n\t                      parseFloat(m[2]) / 100,\n\t                      parseFloat(m[3]) / 100, parseFloat(m[4]));\n\t    }\n\n\t    if (ret) {\n\t        ret.match = m;\n\t    } else if (!safe) {\n\t        throw new Error("Cannot parse color: " + color);\n\t    }\n\n\t    return ret;\n\t}\n\n\tvar Color = Class.extend({\n\t    init: function(value) {\n\t        var this$1 = this;\n\n\t        if (arguments.length === 1) {\n\t            var formats = Color.formats;\n\t            var resolvedColor = this.resolveColor(value);\n\n\t            for (var idx = 0; idx < formats.length; idx++) {\n\t                var formatRegex = formats[idx].re;\n\t                var processor = formats[idx].process;\n\t                var parts = formatRegex.exec(resolvedColor);\n\n\t                if (parts) {\n\t                    var channels = processor(parts);\n\t                    this$1.r = channels[0];\n\t                    this$1.g = channels[1];\n\t                    this$1.b = channels[2];\n\t                }\n\t            }\n\t        } else {\n\t            this.r = arguments[0];\n\t            this.g = arguments[1];\n\t            this.b = arguments[2];\n\t        }\n\n\t        this.r = this.normalizeByte(this.r);\n\t        this.g = this.normalizeByte(this.g);\n\t        this.b = this.normalizeByte(this.b);\n\t    },\n\n\t    toHex: function() {\n\t        var pad = this.padDigit;\n\t        var r = this.r.toString(16);\n\t        var g = this.g.toString(16);\n\t        var b = this.b.toString(16);\n\n\t        return "#" + pad(r) + pad(g) + pad(b);\n\t    },\n\n\t    resolveColor: function(value) {\n\t        var color = value || "black";\n\n\t        if (color.charAt(0) === "#") {\n\t            color = color.substr(1, 6);\n\t        }\n\n\t        color = color.replace(/ /g, "");\n\t        color = color.toLowerCase();\n\t        color = Color.namedColors[color] || color;\n\n\t        return color;\n\t    },\n\n\t    normalizeByte: function(value) {\n\t        if (value < 0 || isNaN(value)) {\n\t            return 0;\n\t        }\n\n\t        return value > 255 ? 255 : value;\n\t    },\n\n\t    padDigit: function(value) {\n\t        return (value.length === 1) ? "0" + value : value;\n\t    },\n\n\t    brightness: function(value) {\n\t        var round = Math.round;\n\n\t        this.r = round(this.normalizeByte(this.r * value));\n\t        this.g = round(this.normalizeByte(this.g * value));\n\t        this.b = round(this.normalizeByte(this.b * value));\n\n\t        return this;\n\t    },\n\n\t    percBrightness: function() {\n\t        return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n\t    }\n\t});\n\n\tColor.fromBytes = function(r, g, b, a) {\n\t    return new Bytes(r, g, b, a != null ? a : 1);\n\t};\n\n\tColor.fromRGB = function(r, g, b, a) {\n\t    return new RGB(r, g, b, a != null ? a : 1);\n\t};\n\n\tColor.fromHSV = function(h, s, v, a) {\n\t    return new HSV(h, s, v, a != null ? a : 1);\n\t};\n\n\tColor.fromHSL = function(h, s, l, a) {\n\t    return new HSL(h, s, l, a != null ? a : 1);\n\t};\n\n\tColor.formats = [ {\n\t    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n\t    process: function(parts) {\n\t        return [\n\t            parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n\t        ];\n\t    }\n\t}, {\n\t    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n\t    process: function(parts) {\n\t        return [\n\t            parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n\t        ];\n\t    }\n\t}, {\n\t    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n\t    process: function(parts) {\n\t        return [\n\t            parseInt(parts[1] + parts[1], 16),\n\t            parseInt(parts[2] + parts[2], 16),\n\t            parseInt(parts[3] + parts[3], 16)\n\t        ];\n\t    }\n\t} ];\n\n\tColor.namedColors = namedColors;\n\n\tkendo.deepExtend(kendo, {\n\t    parseColor: parseColor,\n\t    Color: Color\n\t});\n\n\t}, __webpack_require__(3));\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.color.js?')},"./node_modules/@progress/kendo-ui/js/kendo.colorpicker.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.colorpicker.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1052);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery) {(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018), __webpack_require__(1053), __webpack_require__(1054), __webpack_require__(1055), __webpack_require__(1056), __webpack_require__(1057) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "colorpicker",\n\t    name: "Color tools",\n\t    category: "web",\n\t    description: "Color selection widgets",\n\t    depends: [ "core", "color", "popup", "slider", "userevents", "button" ]\n\t};\n\n\t(function($, parseInt, undefined){\n\t    // WARNING: removing the following jshint declaration and turning\n\t    // == into === to make JSHint happy will break functionality.\n\t    /*jshint eqnull:true  */\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        parseColor = kendo.parseColor,\n\t        Color = kendo.Color,\n\t        KEYS = kendo.keys,\n\t        BACKGROUNDCOLOR = "background-color",\n\t        ITEMSELECTEDCLASS = "k-state-selected",\n\t        SIMPLEPALETTE = "000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7",\n\t        WEBPALETTE = "FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000",\n\t        WHITE = "#ffffff",\n\t        MESSAGES = {\n\t            apply  : "Apply",\n\t            cancel : "Cancel",\n\t            noColor: "no color",\n\t            clearColor: "Clear color",\n\t            previewInput: "Color Hexadecimal Code"\n\t        },\n\t        NS = ".kendoColorTools",\n\t        CLICK_NS = "click" + NS,\n\t        KEYDOWN_NS = "keydown" + NS,\n\t        DISABLED = "k-state-disabled",\n\n\t        browser = kendo.support.browser,\n\t        isIE8 = browser.msie && browser.version < 9;\n\n\t    var ColorSelector = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this, ariaId;\n\n\t            Widget.fn.init.call(that, element, options);\n\t            element = that.element;\n\t            options = that.options;\n\t            that._value = options.value = parseColor(options.value);\n\t            that._tabIndex = element.attr("tabIndex") || 0;\n\n\t            ariaId = that._ariaId = options.ariaId;\n\t            if (ariaId) {\n\t                element.attr("aria-labelledby", ariaId);\n\t            }\n\n\t            if (options._standalone) {\n\t                that._triggerSelect = that._triggerChange;\n\t            }\n\t        },\n\t        options: {\n\t            name: "ColorSelector",\n\t            value: null,\n\t            _standalone: true\n\t        },\n\t        events: [\n\t            "change",\n\t            "select",\n\t            "cancel"\n\t        ],\n\t        color: function(value) {\n\t            if (value !== undefined) {\n\t                this._value = parseColor(value);\n\t                this._updateUI(this._value);\n\t            }\n\n\t            return this._value;\n\t        },\n\t        value: function(color) {\n\t            color = this.color(color);\n\n\t            if (color) {\n\t                if (this.options.opacity) {\n\t                    color = color.toCssRgba();\n\t                } else {\n\t                    color = color.toCss();\n\t                }\n\t            }\n\n\t            return color || null;\n\t        },\n\t        enable: function(enable) {\n\t            if (arguments.length === 0) {\n\t                enable = true;\n\t            }\n\n\t            this.wrapper.toggleClass(DISABLED, !enable);\n\n\t            this._onEnable(enable);\n\t        },\n\t        _select: function(color, nohooks) {\n\t            var prev = this._value;\n\t            color = this.color(color);\n\t            if (!nohooks) {\n\t                this.element.trigger("change");\n\t                if (!color.equals(prev)) {\n\t                    this.trigger("change", { value: this.value() });\n\t                } else if (!this._standalone) {\n\t                    this.trigger("cancel");\n\t                }\n\t            }\n\t        },\n\t        _triggerSelect: function(color) {\n\t            triggerEvent(this, "select", color);\n\t        },\n\t        _triggerChange: function(color) {\n\t            triggerEvent(this, "change", color);\n\t        },\n\t        destroy: function() {\n\t            if (this.element) {\n\t                this.element.off(NS);\n\t            }\n\t            if (this.wrapper) {\n\t                this.wrapper.off(NS).find("*").off(NS);\n\t            }\n\t            this.wrapper = null;\n\t            Widget.fn.destroy.call(this);\n\t        },\n\t        _updateUI: $.noop,\n\t        _selectOnHide: function() {\n\t            return null;\n\t        },\n\t        _cancel: function() {\n\t            this.trigger("cancel");\n\t        }\n\t    });\n\n\t    function triggerEvent(self, type, color) {\n\t        color = parseColor(color);\n\t        if (color && !color.equals(self.color())) {\n\t            if (type == "change") {\n\t                // UI is already updated.  setting _value directly\n\t                // rather than calling self.color(color) to avoid an\n\t                // endless loop.\n\t                self._value = color;\n\t            }\n\t            if (color.a != 1) {\n\t                color = color.toCssRgba();\n\t            } else {\n\t                color = color.toCss();\n\t            }\n\t            self.trigger(type, { value: color });\n\t        }\n\t    }\n\n\t    var ColorPalette = ColorSelector.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\t            ColorSelector.fn.init.call(that, element, options);\n\t            element = that.wrapper = that.element;\n\t            options = that.options;\n\t            var colors = options.palette;\n\n\t            if (colors == "websafe") {\n\t                colors = WEBPALETTE;\n\t                options.columns = 18;\n\t            } else if (colors == "basic") {\n\t                colors = SIMPLEPALETTE;\n\t            }\n\n\t            if (typeof colors == "string") {\n\t                colors = colors.split(",");\n\t            }\n\n\t            if ($.isArray(colors)) {\n\t                colors = $.map(colors, function(x) { return parseColor(x); });\n\t            }\n\n\t            that._selectedID = (options.ariaId || kendo.guid()) + "_selected";\n\n\t            element.addClass("k-widget k-colorpalette")\n\t                .attr("role", "grid")\n\t                .attr("aria-readonly", "true")\n\t                .append($(that._template({\n\t                    colors   : colors,\n\t                    columns  : options.columns,\n\t                    tileSize : options.tileSize,\n\t                    value    : that._value,\n\t                    id       : options.ariaId\n\t                })))\n\t                .on(CLICK_NS, ".k-item", function(ev){\n\t                    that._select($(ev.currentTarget).css(BACKGROUNDCOLOR));\n\t                })\n\t                .attr("tabIndex", that._tabIndex)\n\t                .on(KEYDOWN_NS, bind(that._keydown, that));\n\n\t            var tileSize = options.tileSize, width, height;\n\t            if (tileSize) {\n\t                if (/number|string/.test(typeof tileSize)) {\n\t                    width = height = parseFloat(tileSize);\n\t                } else if (typeof tileSize == "object") {\n\t                    width = parseFloat(tileSize.width);\n\t                    height = parseFloat(tileSize.height);\n\t                } else {\n\t                    throw new Error("Unsupported value for the \'tileSize\' argument");\n\t                }\n\t                element.find(".k-item").css({ width: width, height: height });\n\t            }\n\t        },\n\t        focus: function(){\n\t            if (this.wrapper && !this.wrapper.is("[unselectable=\'on\']")) {\n\t                this.wrapper.focus();\n\t            }\n\t        },\n\t        options: {\n\t            name: "ColorPalette",\n\t            columns: 10,\n\t            tileSize: null,\n\t            palette: "basic"\n\t        },\n\t        _onEnable: function(enable) {\n\t            if (enable) {\n\t                this.wrapper.attr("tabIndex", this._tabIndex);\n\t            } else {\n\t                this.wrapper.removeAttr("tabIndex");\n\t            }\n\t        },\n\t        _keydown: function(e) {\n\t            var selected,\n\t                wrapper = this.wrapper,\n\t                items = wrapper.find(".k-item"),\n\t                current = items.filter("." + ITEMSELECTEDCLASS).get(0),\n\t                keyCode = e.keyCode;\n\n\t            if (keyCode == KEYS.LEFT) {\n\t                selected = relative(items, current, -1);\n\t            } else if (keyCode == KEYS.RIGHT) {\n\t                selected = relative(items, current, 1);\n\t            } else if (keyCode == KEYS.DOWN) {\n\t                selected = relative(items, current, this.options.columns);\n\t            } else if (keyCode == KEYS.UP) {\n\t                selected = relative(items, current, -this.options.columns);\n\t            } else if (keyCode == KEYS.ENTER) {\n\t                preventDefault(e);\n\t                if (current) {\n\t                    this._select($(current).css(BACKGROUNDCOLOR));\n\t                }\n\t            } else if (keyCode == KEYS.ESC) {\n\t                this._cancel();\n\t            }\n\n\t            if (selected) {\n\t                preventDefault(e);\n\n\t                this._current(selected);\n\n\t                try {\n\t                    var color = parseColor(selected.css(BACKGROUNDCOLOR));\n\t                    this._triggerSelect(color);\n\t                } catch(ex) {}\n\t            }\n\t        },\n\t        _current: function(item) {\n\t            this.wrapper.find("." + ITEMSELECTEDCLASS)\n\t                .removeClass(ITEMSELECTEDCLASS)\n\t                .attr("aria-selected", false)\n\t                .removeAttr("id");\n\n\t            $(item)\n\t                .addClass(ITEMSELECTEDCLASS)\n\t                .attr("aria-selected", true)\n\t                .attr("id", this._selectedID);\n\n\t            this.element\n\t                .removeAttr("aria-activedescendant")\n\t                .attr("aria-activedescendant", this._selectedID);\n\t        },\n\t        _updateUI: function(color) {\n\t            var item = null;\n\n\t            this.wrapper.find(".k-item").each(function(){\n\t                var c = parseColor($(this).css(BACKGROUNDCOLOR));\n\n\t                if (c && c.equals(color)) {\n\t                    item = this;\n\n\t                    return false;\n\t                }\n\t            });\n\n\t            this._current(item);\n\t        },\n\t        _template: kendo.template(\n\t            \'<table class="k-palette k-reset" role="presentation"><tr role="row">\' +\n\t              \'# for (var i = 0; i < colors.length; ++i) { #\' +\n\t                \'# var selected = colors[i].equals(value); #\' +\n\t                \'# if (i && i % columns == 0) { # </tr><tr role="row"> # } #\' +\n\t                \'<td role="gridcell" unselectable="on" style="background-color:#= colors[i].toCss() #"\' +\n\t                    \'#= selected ? " aria-selected=true" : "" # \' +\n\t                    \'#=(id && i === 0) ? "id=\\\\""+id+"\\\\" " : "" # \' +\n\t                    \'class="k-item#= selected ? " \' + ITEMSELECTEDCLASS + \'" : "" #" \' +\n\t                    \'aria-label="#= colors[i].toCss() #"></td>\' +\n\t              \'# } #\' +\n\t            \'</tr></table>\'\n\t        )\n\t    });\n\n\t    var FlatColorPicker = ColorSelector.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\t            ColorSelector.fn.init.call(that, element, options);\n\n\t            options = that.options;\n\t            options.messages = options.options ? $.extend(that.options.messages, options.options.messages) : that.options.messages;\n\t            element = that.element;\n\n\t            that.wrapper = element.addClass("k-widget k-flatcolorpicker")\n\t                .append(that._template(options));\n\n\t            that._hueElements = $(".k-hsv-rectangle, .k-alpha-slider .k-slider-track", element);\n\n\t            that._selectedColor = $(".k-selected-color-display", element);\n\n\t            that._colorAsText = $("input.k-color-value", element);\n\n\t            that._sliders();\n\n\t            that._hsvArea();\n\n\t            that._updateUI(that._value || parseColor("#f00"));\n\n\t            element\n\t                .find("input.k-color-value").on(KEYDOWN_NS, function(ev){\n\t                    var input = this;\n\t                    if (ev.keyCode == KEYS.ENTER) {\n\t                        try {\n\t                            var color = parseColor(input.value);\n\t                            var val = that.color();\n\t                            that._select(color, color.equals(val));\n\t                        } catch(ex) {\n\t                            $(input).addClass("k-state-error");\n\t                        }\n\t                    } else if (that.options.autoupdate) {\n\t                        setTimeout(function(){\n\t                            var color = parseColor(input.value, true);\n\t                            if (color) {\n\t                                that._updateUI(color, true);\n\t                            }\n\t                        }, 10);\n\t                    }\n\t                }).end()\n\n\t                .on(CLICK_NS, ".k-controls button.apply", function(){\n\t                    // calling select for the currently displayed\n\t                    // color will trigger the "change" event.\n\t                    if (that.options._clearedColor) {\n\t                        that.trigger("change");\n\t                    } else {\n\t                        that._select(that._getHSV());\n\t                    }\n\t                })\n\t                .on(CLICK_NS, ".k-controls button.cancel", function(){\n\t                    // but on cancel, we simply select the previous\n\t                    // value (again, triggers "change" event).\n\t                    that._updateUI(that.color());\n\t                    that._cancel();\n\t                });\n\n\t            if (isIE8) {\n\t                // IE filters require absolute URLs\n\t                that._applyIEFilter();\n\t            }\n\t        },\n\t        destroy: function() {\n\t            this._hsvEvents.destroy();\n\n\t            this._hueSlider.destroy();\n\t            if (this._opacitySlider) {\n\t                this._opacitySlider.destroy();\n\t            }\n\t            this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle =\n\t                this._hueElements = this._selectedColor = this._colorAsText = null;\n\t            ColorSelector.fn.destroy.call(this);\n\t        },\n\t        options: {\n\t            name       : "FlatColorPicker",\n\t            opacity    : false,\n\t            buttons    : false,\n\t            input      : true,\n\t            preview    : true,\n\t            clearButton: false,\n\t            autoupdate : true,\n\t            messages   : MESSAGES\n\t        },\n\t        _applyIEFilter: function() {\n\t            var track = this.element.find(".k-hue-slider .k-slider-track")[0],\n\t                url = track.currentStyle.backgroundImage;\n\n\t            url = url.replace(/^url\\([\\\'\\"]?|[\\\'\\"]?\\)$/g, "");\n\t            track.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\'" + url + "\', sizingMethod=\'scale\')";\n\t        },\n\t        _sliders: function() {\n\t            var that = this,\n\t                element = that.element,\n\t                hueSlider = element.find(".k-hue-slider"),\n\t                opacitySlider = element.find(".k-alpha-slider");\n\n\t            function hueChange(e) {\n\t                that._updateUI(that._getHSV(e.value, null, null, null));\n\t            }\n\n\t            hueSlider.attr("aria-label", "hue saturation");\n\t            that._hueSlider = hueSlider.kendoSlider({\n\t                min: 0,\n\t                max: 360,\n\t                tickPlacement: "none",\n\t                showButtons: false,\n\t                slide: hueChange,\n\t                change: hueChange\n\t            }).data("kendoSlider");\n\n\t            function opacityChange(e) {\n\t                that._updateUI(that._getHSV(null, null, null, e.value / 100));\n\t            }\n\n\t            opacitySlider.attr("aria-label", "opacity");\n\t            that._opacitySlider = opacitySlider.kendoSlider({\n\t                min: 0,\n\t                max: 100,\n\t                tickPlacement: "none",\n\t                showButtons: false,\n\t                slide: opacityChange,\n\t                change: opacityChange\n\t            }).data("kendoSlider");\n\t        },\n\t        _hsvArea: function() {\n\t            var that = this,\n\t                element = that.element,\n\t                hsvRect = element.find(".k-hsv-rectangle"),\n\t                hsvHandle = hsvRect.find(".k-draghandle").attr("tabIndex", 0).on(KEYDOWN_NS, bind(that._keydown, that));\n\n\t            function update(x, y) {\n\t                var offset = this.offset,\n\t                    dx = x - offset.left, dy = y - offset.top,\n\t                    rw = this.width, rh = this.height;\n\n\t                dx = dx < 0 ? 0 : dx > rw ? rw : dx;\n\t                dy = dy < 0 ? 0 : dy > rh ? rh : dy;\n\t                that._svChange(dx / rw, 1 - dy / rh);\n\t            }\n\n\t            that._hsvEvents = new kendo.UserEvents(hsvRect, {\n\t                global: true,\n\t                press: function(e) {\n\t                    this.offset = kendo.getOffset(hsvRect);\n\t                    this.width = hsvRect.width();\n\t                    this.height = hsvRect.height();\n\t                    hsvHandle.focus();\n\t                    update.call(this, e.x.location, e.y.location);\n\t                },\n\t                start: function() {\n\t                    hsvRect.addClass("k-dragging");\n\t                    hsvHandle.focus();\n\t                },\n\t                move: function(e) {\n\t                    e.preventDefault();\n\t                    update.call(this, e.x.location, e.y.location);\n\t                },\n\t                end: function() {\n\t                    hsvRect.removeClass("k-dragging");\n\t                }\n\t            });\n\n\t            that._hsvRect = hsvRect;\n\t            that._hsvHandle = hsvHandle;\n\t        },\n\t        _onEnable: function(enable) {\n\t            this._hueSlider.enable(enable);\n\n\t            if (this._opacitySlider) {\n\t                this._opacitySlider.enable(enable);\n\t            }\n\n\t            this.wrapper.find("input").attr("disabled", !enable);\n\n\t            var handle = this._hsvRect.find(".k-draghandle");\n\n\t            if (enable) {\n\t                handle.attr("tabIndex", this._tabIndex);\n\t            } else {\n\t                handle.removeAttr("tabIndex");\n\t            }\n\t        },\n\t        _keydown: function(ev) {\n\t            var that = this;\n\t            function move(prop, d) {\n\t                var c = that._getHSV();\n\t                c[prop] += d * (ev.shiftKey ? 0.01 : 0.05);\n\t                if (c[prop] < 0) { c[prop] = 0; }\n\t                if (c[prop] > 1) { c[prop] = 1; }\n\t                that._updateUI(c);\n\t                preventDefault(ev);\n\t            }\n\t            function hue(d) {\n\t                var c = that._getHSV();\n\t                c.h += d * (ev.shiftKey ? 1 : 5);\n\t                if (c.h < 0) { c.h = 0; }\n\t                if (c.h > 359) { c.h = 359; }\n\t                that._updateUI(c);\n\t                preventDefault(ev);\n\t            }\n\t            switch (ev.keyCode) {\n\t              case KEYS.LEFT:\n\t                if (ev.ctrlKey) {\n\t                    hue(-1);\n\t                } else {\n\t                    move("s", -1);\n\t                }\n\t                break;\n\t              case KEYS.RIGHT:\n\t                if (ev.ctrlKey) {\n\t                    hue(1);\n\t                } else {\n\t                    move("s", 1);\n\t                }\n\t                break;\n\t              case KEYS.UP:\n\t                move(ev.ctrlKey && that._opacitySlider ? "a" : "v", 1);\n\t                break;\n\t              case KEYS.DOWN:\n\t                move(ev.ctrlKey && that._opacitySlider ? "a" : "v", -1);\n\t                break;\n\t              case KEYS.ENTER:\n\t                that._select(that._getHSV());\n\t                break;\n\t              case KEYS.F2:\n\t                that.wrapper.find("input.k-color-value").focus().select();\n\t                break;\n\t              case KEYS.ESC:\n\t                that._cancel();\n\t                break;\n\t            }\n\t        },\n\t        focus: function() {\n\t            this._hsvHandle.focus();\n\t        },\n\t        _getHSV: function(h, s, v, a) {\n\t            var rect = this._hsvRect,\n\t                width = rect.width(),\n\t                height = rect.height(),\n\t                handlePosition = this._hsvHandle.position();\n\n\t            if (h == null) {\n\t                h = this._hueSlider.value();\n\t            }\n\t            if (s == null) {\n\t                s = handlePosition.left / width;\n\t            }\n\t            if (v == null) {\n\t                v = 1 - handlePosition.top / height;\n\t            }\n\t            if (a == null) {\n\t                a = this._opacitySlider ? this._opacitySlider.value() / 100 : 1;\n\t            }\n\t            return Color.fromHSV(h, s, v, a);\n\t        },\n\t        _svChange: function(s, v) {\n\t            var color = this._getHSV(null, s, v, null);\n\t            this._updateUI(color);\n\t        },\n\t        _updateUI: function(color, dontChangeInput) {\n\t            var that = this,\n\t                rect = that._hsvRect;\n\n\t            if (!color) {\n\t                return;\n\t            }\n\n\t            this._colorAsText.attr("title", that.options.messages.previewInput);\n\t            this._colorAsText.removeClass("k-state-error");\n\n\t            that._selectedColor.css(BACKGROUNDCOLOR, color.toDisplay());\n\t            if (!dontChangeInput) {\n\t                that._colorAsText.val(that._opacitySlider ? color.toCssRgba() : color.toCss());\n\t            }\n\t            that._triggerSelect(color);\n\n\t            color = color.toHSV();\n\t            that._hsvHandle.css({\n\t                // saturation is 0 on the left side, full (1) on the right\n\t                left: color.s * rect.width() + "px",\n\t                // value is 0 on the bottom, full on the top.\n\t                top: (1 - color.v) * rect.height() + "px"\n\t            });\n\n\t            that._hueElements.css(BACKGROUNDCOLOR, Color.fromHSV(color.h, 1, 1, 1).toCss());\n\t            that._hueSlider.value(color.h);\n\n\t            if (that._opacitySlider) {\n\t                that._opacitySlider.value(100 * color.a);\n\t            }\n\t        },\n\t        _selectOnHide: function() {\n\t            return this.options.buttons ? null : this._getHSV();\n\t        },\n\t        _template: kendo.template(\n\t            \'# if (preview) { #\' +\n\t                \'<div class="k-selected-color"><div class="k-selected-color-display"><div class="k-color-input"><input class="k-color-value" \' +\n\t                    \'# if (clearButton && !_standalone) { #\' +\n\t                        \'placeholder="#: messages.noColor #" \' +\n\t                    \'# } #\' +\n\t                    \'#= !data.input ? \\\'style=\\"visibility: hidden;\\"\\\' : \\"\\" #>\' +\n\t                \'# if (clearButton && !_standalone) { #\' +\n\t                    \'<span class="k-clear-color k-button k-flat" title="#: messages.clearColor #"></span>\' +\n\t                \'# } #\' +\n\t                \'</div></div></div>\' +\n\t            \'# } #\' +\n\t             \'# if (clearButton && !_standalone && !preview) { #\' +\n\t                    \'<div class="k-clear-color-container"><span class="k-clear-color k-button k-flat">#: messages.clearColor #</span></div>\' +\n\t             \'# } #\' +\n\t            \'<div class="k-hsv-rectangle"><div class="k-hsv-gradient"></div><div class="k-draghandle"></div></div>\' +\n\t            \'<div class="k-sliders-wrap k-vbox">\' +\n\t                \'<input class="k-hue-slider" />\' +\n\t                \'# if (opacity) { #\' +\n\t                    \'<input class="k-alpha-slider k-transparency-slider" />\' +\n\t                \'# } #\' +\n\t            \'</div>\' +\n\t            \'# if (buttons) { #\' +\n\t                \'<div unselectable="on" class="k-controls"><button class="k-button k-primary apply">#: messages.apply #</button> <button class="k-button cancel">#: messages.cancel #</button></div>\' +\n\t            \'# } #\'\n\t        )\n\t    });\n\n\t    function relative(array, element, delta) {\n\t        array = Array.prototype.slice.call(array);\n\t        var n = array.length;\n\t        var pos = array.indexOf(element);\n\t        if (pos < 0) {\n\t            return delta < 0 ? array[n - 1] : array[0];\n\t        }\n\t        pos += delta;\n\t        if (pos < 0) {\n\t            pos += n;\n\t        } else {\n\t            pos %= n;\n\t        }\n\t        return array[pos];\n\t    }\n\n\t    /* -----[ The ColorPicker widget ]----- */\n\n\t    var ColorPicker = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\t            Widget.fn.init.call(that, element, options);\n\t            options = that.options;\n\t            element = that.element;\n\n\t            var value = element.attr("value") || element.val();\n\t            if (value) {\n\t                value = parseColor(value, true);\n\t            } else {\n\t                value = parseColor(options.value, true);\n\t            }\n\t            that._value = options.value = value;\n\n\t            var content = that.wrapper = $(that._template(options));\n\t            element.hide().after(content);\n\n\t            that._inputWrapper = $(that.wrapper[0].firstChild);\n\n\t            if (element.is("input")) {\n\t                element.appendTo(content);\n\n\t                // if there exists a <label> associated with this\n\t                // input field, we must catch clicks on it to prevent\n\t                // the built-in color picker from showing up.\n\t                // https://github.com/telerik/kendo-ui-core/issues/292\n\n\t                var label = element.closest("label");\n\t                var id = element.attr("id");\n\t                if (id) {\n\t                    label = label.add(\'label[for="\' + id + \'"]\');\n\t                }\n\t                label.click(function(ev){\n\t                    that.open();\n\t                    ev.preventDefault();\n\t                });\n\t            }\n\n\t            that._tabIndex = element.attr("tabIndex") || 0;\n\n\t            that.enable(!element.attr("disabled"));\n\n\t            var accesskey = element.attr("accesskey");\n\t            if (accesskey) {\n\t                element.attr("accesskey", null);\n\t                content.attr("accesskey", accesskey);\n\t            }\n\n\t            that.bind("activate", function(ev){\n\t                if (!ev.isDefaultPrevented()) {\n\t                    that.toggle();\n\t                }\n\t            });\n\n\t            that._updateUI(value);\n\t        },\n\t        destroy: function() {\n\t            this.wrapper.off(NS).find("*").off(NS);\n\t            if (this._popup) {\n\t                this._selector.destroy();\n\t                this._popup.destroy();\n\t            }\n\t            this._selector = this._popup = this.wrapper = null;\n\t            Widget.fn.destroy.call(this);\n\t        },\n\t        enable: function(enable) {\n\t            var that = this,\n\t                wrapper = that.wrapper,\n\t                innerWrapper = wrapper.children(".k-picker-wrap"),\n\t                arrow = innerWrapper.find(".k-select");\n\n\t            if (arguments.length === 0) {\n\t                enable = true;\n\t            }\n\n\t            that.element.attr("disabled", !enable);\n\t            wrapper.attr("aria-disabled", !enable);\n\n\t            arrow.off(NS).on("mousedown" + NS, preventDefault);\n\n\t            wrapper.addClass("k-state-disabled")\n\t                .removeAttr("tabIndex")\n\t                .add("*", wrapper).off(NS);\n\n\t            if (enable) {\n\t                wrapper.removeClass("k-state-disabled")\n\t                    .attr("tabIndex", that._tabIndex)\n\t                    .on("mouseenter" + NS, function () { innerWrapper.addClass("k-state-hover"); })\n\t                    .on("mouseleave" + NS, function () { innerWrapper.removeClass("k-state-hover"); })\n\t                    .on("focus" + NS, function () { innerWrapper.addClass("k-state-focused"); })\n\t                    .on("blur" + NS, function () { innerWrapper.removeClass("k-state-focused"); })\n\t                    .on(KEYDOWN_NS, bind(that._keydown, that))\n\t                    .on(CLICK_NS, ".k-select", bind(that.toggle, that))\n\t                    .on(CLICK_NS, that.options.toolIcon ? ".k-tool-icon" : ".k-selected-color", function () {\n\t                        that.trigger("activate");\n\t                    });\n\t            } else {\n\t                that.close();\n\t            }\n\t        },\n\n\t        _template: kendo.template(\n\t            \'<span role="textbox" aria-haspopup="true" class="k-widget k-colorpicker">\' +\n\t                \'<span class="k-picker-wrap k-state-default">\' +\n\t                    \'# if (toolIcon) { #\' +\n\t                        \'<span class="k-icon k-tool-icon #= toolIcon #">\' +\n\t                            \'<span class="k-selected-color"></span>\' +\n\t                        \'</span>\' +\n\t                    \'# } else { #\' +\n\t                        \'<span class="k-selected-color"><span class="k-icon k-i-line" style="display: none;"></span></span>\' +\n\t                    \'# } #\' +\n\t                    \'<span class="k-select" unselectable="on" aria-label="select">\' +\n\t                        \'<span class="k-icon k-i-arrow-60-down"></span>\' +\n\t                    \'</span>\' +\n\t                \'</span>\' +\n\t            \'</span>\'\n\t        ),\n\n\t        options: {\n\t            name: "ColorPicker",\n\t            palette: null,\n\t            columns: 10,\n\t            toolIcon: null,\n\t            value: null,\n\t            messages: MESSAGES,\n\t            opacity: false,\n\t            buttons: true,\n\t            preview: true,\n\t            clearButton: false,\n\t            ARIATemplate: \'Current selected color is #=data || ""#\'\n\t        },\n\n\t        events: [ "activate", "change", "select", "open", "close" ],\n\n\t        open: function () {\n\t            if (!this.element.prop("disabled")) {\n\t                this._getPopup().open();\n\t            }\n\t        },\n\t        close: function () {\n\t            var selOptions = (this._selector && this._selector.options) || {};\n\t            selOptions._closing = true;\n\n\t            this._getPopup().close();\n\n\t            delete selOptions._closing;\n\t        },\n\t        toggle: function () {\n\t            if (!this.element.prop("disabled")) {\n\t                this._getPopup().toggle();\n\t            }\n\t        },\n\t        _noColorIcon: function(){\n\t            return this.wrapper.find(".k-picker-wrap > .k-selected-color > .k-icon.k-i-line");\n\t        },\n\t        color: ColorSelector.fn.color,\n\t        value: ColorSelector.fn.value,\n\t        _select: ColorSelector.fn._select,\n\t        _triggerSelect: ColorSelector.fn._triggerSelect,\n\t        _isInputTypeColor: function() {\n\t            var el = this.element[0];\n\t            return (/^input$/i).test(el.tagName) && (/^color$/i).test(el.type);\n\t        },\n\n\t        _updateUI: function(value) {\n\t            var formattedValue = "";\n\n\t            if (value) {\n\t                if (this._isInputTypeColor() || value.a == 1) {\n\t                    // seems that input type="color" doesn\'t support opacity\n\t                    // in colors; the only accepted format is hex #RRGGBB\n\t                    formattedValue = value.toCss();\n\t                } else {\n\t                    formattedValue = value.toCssRgba();\n\t                }\n\n\t                this.element.val(formattedValue);\n\t            }\n\n\t            if (!this._ariaTemplate) {\n\t                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n\t            }\n\n\t            this.wrapper.attr("aria-label", this._ariaTemplate(formattedValue));\n\n\t            this._triggerSelect(value);\n\t            this.wrapper.find(".k-selected-color").css(\n\t                BACKGROUNDCOLOR,\n\t                value ? value.toDisplay() : WHITE\n\t            );\n\n\t            this._noColorIcon()[formattedValue ? "hide": "show"]();\n\t        },\n\t        _keydown: function(ev) {\n\t            var key = ev.keyCode;\n\t            if (this._getPopup().visible()) {\n\t                if (key == KEYS.ESC) {\n\t                    this._selector._cancel();\n\t                } else {\n\t                    this._selector._keydown(ev);\n\t                }\n\t                preventDefault(ev);\n\t            }\n\t            else if (key == KEYS.ENTER || key == KEYS.DOWN) {\n\t                this.open();\n\t                preventDefault(ev);\n\t            }\n\t        },\n\t        _getPopup: function() {\n\t            var that = this, popup = that._popup;\n\n\t            if (!popup) {\n\t                var options = that.options;\n\t                var selectorType;\n\n\t                if (options.palette) {\n\t                    selectorType = ColorPalette;\n\t                } else {\n\t                    selectorType = FlatColorPicker;\n\t                }\n\n\t                options._standalone = false;\n\t                delete options.select;\n\t                delete options.change;\n\t                delete options.cancel;\n\n\t                var id = kendo.guid();\n\t                var selector = that._selector = new selectorType($(\'<div id="\' + id +\'"></div>\').appendTo(document.body), options);\n\n\t                that.wrapper.attr("aria-owns", id);\n\n\t                that._popup = popup = selector.wrapper.kendoPopup({\n\t                    anchor: that.wrapper,\n\t                    adjustSize: { width: 5, height: 0 }\n\t                }).data("kendoPopup");\n\n\t                selector.element.find(".k-clear-color").kendoButton({\n\t                    icon: "reset-color",\n\t                    click: function(e) {\n\t                        selector.options._clearedColor = true;\n\t                        that.value(null);\n\t                        that.element.val(null);\n\t                        that._updateUI(null);\n\t                        selector._colorAsText.val("");\n\t                        selector._hsvHandle.css({\n\t                            top: "0px",\n\t                            left: "0px"\n\t                        });\n\t                        selector._selectedColor.css(BACKGROUNDCOLOR, WHITE);\n\n\t                        that.trigger("change", { value: that.value() });\n\t                        e.preventDefault();\n\t                    }\n\t                });\n\n\t                selector.bind({\n\t                    select: function(ev){\n\t                        that._updateUI(parseColor(ev.value));\n\t                        delete selector.options._clearedColor;\n\t                    },\n\t                    change: function(){\n\t                        if (!selector.options._clearedColor) {\n\t                            that._select(selector.color());\n\t                        }\n\t                        that.close();\n\t                    },\n\t                    cancel: function() {\n\t                        if (selector.options._clearedColor && !that.value() && selector.value()) {\n\t                            that._select(selector.color(), true);\n\t                        }\n\t                        that.close();\n\t                    }\n\t                });\n\t                popup.bind({\n\t                    close: function(ev){\n\t                        if (that.trigger("close")) {\n\t                            ev.preventDefault();\n\t                            return;\n\t                        }\n\t                        that.wrapper.children(".k-picker-wrap").removeClass("k-state-focused");\n\t                        var color = selector._selectOnHide();\n\t                        var selectorColor = selector.value();\n\t                        var value = that.value();\n\t                        var options = selector.options;\n\t                        if (!color) {\n\t                            setTimeout(function(){\n\t                                if (that.wrapper && !that.wrapper.is("[unselectable=\'on\']")) {\n\t                                    that.wrapper.focus();\n\t                                }\n\t                            });\n\n\t                            if (!options._closing && options._clearedColor && !value && selectorColor) {\n\t                                that._select(selectorColor, true);\n\t                            } else {\n\t                                that._updateUI(that.color());\n\t                            }\n\t                        } else if (!(options._clearedColor && !value)) {\n\t                            that._select(color);\n\t                        }\n\t                    },\n\t                    open: function(ev) {\n\t                        if (that.trigger("open")) {\n\t                            ev.preventDefault();\n\t                        } else {\n\t                            that.wrapper.children(".k-picker-wrap").addClass("k-state-focused");\n\t                        }\n\t                    },\n\t                    activate: function(){\n\t                        selector._select(that.color(), true);\n\t                        selector.focus();\n\t                        that.wrapper.children(".k-picker-wrap").addClass("k-state-focused");\n\t                    }\n\t                });\n\t            }\n\t            return popup;\n\t        }\n\t    });\n\n\t    function preventDefault(ev) { ev.preventDefault(); }\n\n\t    function bind(callback, obj) {\n\t        return function() {\n\t            return callback.apply(obj, arguments);\n\t        };\n\t    }\n\n\t    ui.plugin(ColorPalette);\n\t    ui.plugin(FlatColorPicker);\n\t    ui.plugin(ColorPicker);\n\n\t})(jQuery, parseInt);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1017)))\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.color */ "./node_modules/@progress/kendo-ui/js/kendo.color.js");\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.popup */ "./node_modules/@progress/kendo-ui/js/kendo.popup.js");\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.slider */ "./node_modules/@progress/kendo-ui/js/kendo.slider.js");\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.userevents */ "./node_modules/@progress/kendo-ui/js/kendo.userevents.js");\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.button */ "./node_modules/@progress/kendo-ui/js/kendo.button.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.colorpicker.js?')},"./node_modules/@progress/kendo-ui/js/kendo.columnmenu.js":
/*!****************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.columnmenu.js ***!
  \****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1058);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.popup */ "./node_modules/@progress/kendo-ui/js/kendo.popup.js");\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1054), __webpack_require__(1059), __webpack_require__(1060) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "columnmenu",\n\t    name: "Column Menu",\n\t    category: "framework",\n\t    depends: [ "popup", "filtermenu", "menu" ],\n\t    advanced: true\n\t};\n\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        proxy = $.proxy,\n\t        extend = $.extend,\n\t        grep = $.grep,\n\t        map = $.map,\n\t        inArray = $.inArray,\n\t        ACTIVE = "k-state-selected",\n\t        ASC = "asc",\n\t        DESC = "desc",\n\t        CHANGE = "change",\n\t        INIT = "init",\n\t        OPEN = "open",\n\t        SELECT = "select",\n\t        POPUP = "kendoPopup",\n\t        FILTERMENU = "kendoFilterMenu",\n\t        MENU = "kendoMenu",\n\t        NS = ".kendoColumnMenu",\n\t        Widget = ui.Widget;\n\n\t    function trim(text) {\n\t        return kendo.trim(text).replace(/&nbsp;/gi, "");\n\t    }\n\n\t    function toHash(arr, key) {\n\t        var result = {};\n\t        var idx, len, current;\n\t        for (idx = 0, len = arr.length; idx < len; idx ++) {\n\t            current = arr[idx];\n\t            result[current[key]] = current;\n\t        }\n\t        return result;\n\t    }\n\n\t    function leafColumns(columns) {\n\t        var result = [];\n\n\t        for (var idx = 0; idx < columns.length; idx++) {\n\t            if (!columns[idx].columns) {\n\t                result.push(columns[idx]);\n\t                continue;\n\t            }\n\t            result = result.concat(leafColumns(columns[idx].columns));\n\t        }\n\n\t        return result;\n\t    }\n\n\t    function attrEquals(attrName, attrValue) {\n\t        return "[" + kendo.attr(attrName) + "=\'" + (attrValue || "").replace(/\'/g, "\\"") + "\']";\n\t    }\n\n\t    function insertElementAt(index, element, container) {\n\t        if (index > 0) {\n\t            element.insertAfter(container.children().eq(index - 1));\n\t        } else {\n\t            container.prepend(element);\n\t        }\n\t    }\n\n\t    function columnOccurrences(columns) {\n\t        var columnDict = {};\n\t        var signature;\n\n\t        for (var i = 0; i < columns.length; i++) {\n\t            signature = JSON.stringify(columns[i]);\n\n\t            if (columnDict[signature]) {\n\t                columnDict[signature].push(i);\n\t            } else {\n\t                columnDict[signature] = [i];\n\t            }\n\t        }\n\n\t        return columnDict;\n\t    }\n\n\t    function oldColumnOccurrences(renderedListElements, checkBoxes) {\n\t        var indexAttr = kendo.attr("index");\n\t        var fieldAttr = kendo.attr("field");\n\t        var columnDict = {};\n\t        var signature;\n\t        var columCheckbox;\n\t        var index;\n\t        var field;\n\t        var title;\n\n\t        for (var j = 0; j < renderedListElements.length; j++) {\n\t            columCheckbox = checkBoxes.eq(j);\n\t            index = parseInt(columCheckbox.attr(indexAttr), 10);\n\t            field = columCheckbox.attr(fieldAttr);\n\t            title = columCheckbox.attr("title");\n\t            signature = field ? field : title;\n\n\t            if (columnDict[signature]) {\n\t                columnDict[signature].push(index);\n\t            } else {\n\t                columnDict[signature] = [index];\n\t            }\n\t        }\n\n\t        return columnDict;\n\t    }\n\n\t    var ColumnMenu = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this,\n\t                link;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            element = that.element;\n\t            options = that.options;\n\t            that.owner = options.owner;\n\t            that.dataSource = options.dataSource;\n\n\t            that.field = element.attr(kendo.attr("field"));\n\t            that.title = element.attr(kendo.attr("title"));\n\n\t            link = element.find(".k-header-column-menu");\n\n\t            if (!link[0]) {\n\t                link = element.addClass("k-with-icon").prepend(\'<a class="k-header-column-menu" href="#" title="\' +\n\t                    options.messages.settings + \'" aria-label="\' +\n\t                    options.messages.settings + \'"><span class="k-icon k-i-more-vertical"></span></a>\').find(".k-header-column-menu");\n\t            }\n\n\t            that.link = link\n\t                .attr("tabindex", -1)\n\t                .on("click" + NS, proxy(that._click, that));\n\n\t            that.wrapper = $(\'<div class="k-column-menu"/>\');\n\n\t            that._refreshHandler = proxy(that.refresh, that);\n\n\t            that.dataSource.bind(CHANGE, that._refreshHandler);\n\t        },\n\n\t        _init: function() {\n\t            var that = this;\n\n\t            that.pane = that.options.pane;\n\t            if (that.pane) {\n\t                that._isMobile = true;\n\t            }\n\n\t            if (that._isMobile) {\n\t                that._createMobileMenu();\n\t            } else {\n\t                that._createMenu();\n\t            }\n\n\t            that.owner._muteAngularRebind(function() {\n\t                that._angularItems("compile");\n\t            });\n\n\t            that._sort();\n\n\t            that._columns();\n\n\t            that._filter();\n\n\t            that._lockColumns();\n\n\t            that.trigger(INIT, { field: that.field, container: that.wrapper });\n\t        },\n\n\t        events: [ INIT, OPEN, "sort", "filtering" ],\n\n\t        options: {\n\t            name: "ColumnMenu",\n\t            messages: {\n\t                sortAscending: "Sort Ascending",\n\t                sortDescending: "Sort Descending",\n\t                filter: "Filter",\n\t                column: "Column",\n\t                columns: "Columns",\n\t                columnVisibility: "Column Visibility",\n\t                clear: "Clear",\n\t                cancel: "Cancel",\n\t                done: "Done",\n\t                settings: "Edit Column Settings",\n\t                lock: "Lock",\n\t                unlock: "Unlock"\n\t            },\n\t            filter: "",\n\t            columns: true,\n\t            sortable: true,\n\t            filterable: true,\n\t            animations: {\n\t                left: "slide"\n\t            }\n\t        },\n\n\t        _createMenu: function() {\n\t            var that = this,\n\t                options = that.options;\n\n\t            that.wrapper.html(kendo.template(template)({\n\t                uid: kendo.guid(),\n\t                ns: kendo.ns,\n\t                messages: options.messages,\n\t                sortable: options.sortable,\n\t                filterable: options.filterable,\n\t                columns: that._ownerColumns(),\n\t                showColumns: options.columns,\n\t                lockedColumns: options.lockedColumns\n\t            }));\n\n\t            that.popup = that.wrapper[POPUP]({\n\t                anchor: that.link,\n\t                open: proxy(that._open, that),\n\t                activate: proxy(that._activate, that),\n\t                deactivate: proxy(that._deactivate, that),\n\t                close: function() {\n\t                    that.menu._closing = true;\n\t                    if (that.options.closeCallback) {\n\t                        that.options.closeCallback(that.element);\n\t                    }\n\t                }\n\t            }).data(POPUP);\n\n\t            that.menu = that.wrapper.children()[MENU]({\n\t                orientation: "vertical",\n\t                closeOnClick: false,\n\t                open: function() {\n\t                    that._updateMenuItems();\n\t                }\n\t            }).data(MENU);\n\t        },\n\n\t        _deactivate: function() {\n\t            this.menu._closing = false;\n\t        },\n\n\t        _createMobileMenu: function() {\n\t            var that = this,\n\t                options = that.options;\n\n\t            var html = kendo.template(mobileTemplate)({\n\t                ns: kendo.ns,\n\t                field: that.field,\n\t                title: that.title || that.field,\n\t                messages: options.messages,\n\t                sortable: options.sortable,\n\t                filterable: options.filterable,\n\t                columns: that._ownerColumns(),\n\t                showColumns: options.columns,\n\t                lockedColumns: options.lockedColumns\n\t            });\n\n\t            that.view = that.pane.append(html);\n\t            that.view.state = { columns: {} };\n\n\t            that.wrapper = that.view.element.find(".k-column-menu");\n\n\t            that.menu = new MobileMenu(that.wrapper.children(), {\n\t                pane: that.pane,\n\t                columnMenu: that\n\t            });\n\n\t            // The toggle animation of the switches should not propagate to the view\n\t            that.menu.element.on("transitionend" + NS, function(e) {\n\t                e.stopPropagation();\n\t            });\n\n\t            var viewElement = that.view.wrapper && that.view.wrapper[0] ? that.view.wrapper : that.view.element;\n\n\t            viewElement.on("click", ".k-header-done", function(e) {\n\t                e.preventDefault();\n\n\t                that.menu._applyChanges();\n\t                that.menu._cancelChanges(false);\n\t                that.close();\n\t            });\n\n\t            viewElement.on("click", ".k-header-cancel", function(e) {\n\t                e.preventDefault();\n\n\t                that.menu._cancelChanges(true);\n\t                that.close();\n\t            });\n\n\t            that.view.bind("showStart", function() {\n\t                var view = that.view || { columns: {} };\n\n\t                if (that.options.lockedColumns) {\n\t                    that._updateLockedColumns();\n\t                }\n\n\t                if (view.element.find(".k-sort-asc.k-state-selected").length) {\n\t                    view.state.initialSort = "asc";\n\t                } else if (view.element.find(".k-sort-desc.k-state-selected").length) {\n\t                    view.state.initialSort = "desc";\n\t                }\n\t            });\n\t        },\n\n\t        _angularItems: function(action) {\n\t            var that = this;\n\t            that.angular(action, function(){\n\t                var items = that.wrapper.find(".k-columns-item input[" + kendo.attr("field") + "]").map(function(){\n\t                    return $(this).closest("li");\n\t                });\n\t                var data = map(that._ownerColumns(), function(col){\n\t                    return { column: col._originalObject };\n\t                });\n\t                return {\n\t                    elements: items,\n\t                    data: data\n\t                };\n\t            });\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            that._angularItems("cleanup");\n\n\t            Widget.fn.destroy.call(that);\n\n\t            if (that.filterMenu) {\n\t                that.filterMenu.destroy();\n\t            }\n\n\t            if (that._refreshHandler) {\n\t                that.dataSource.unbind(CHANGE, that._refreshHandler);\n\t            }\n\n\t            if (that.options.columns && that.owner) {\n\t                if (that._updateColumnsMenuHandler) {\n\t                    that.owner.unbind("columnShow", that._updateColumnsMenuHandler);\n\t                    that.owner.unbind("columnHide", that._updateColumnsMenuHandler);\n\t                }\n\n\t                if (that._updateColumnsLockedStateHandler) {\n\t                    that.owner.unbind("columnLock", that._updateColumnsLockedStateHandler);\n\t                    that.owner.unbind("columnUnlock", that._updateColumnsLockedStateHandler);\n\t                }\n\t            }\n\n\t            if (that.menu) {\n\t                that.menu.element.off(NS);\n\t                that.menu.destroy();\n\t            }\n\n\t            that.wrapper.off(NS);\n\n\t            if (that.popup) {\n\t                that.popup.destroy();\n\t            }\n\n\t            if (that.view) {\n\t                that.view.purge();\n\t            }\n\n\t            that.link.off(NS);\n\t            that.owner = null;\n\t            that.wrapper = null;\n\t            that.element = null;\n\t        },\n\n\t        close: function() {\n\t            this.menu.close();\n\t            if (this.popup) {\n\t                this.popup.close();\n\t                this.popup.element.off("keydown" + NS);\n\t            }\n\t        },\n\n\t        _click: function(e) {\n\t            var that = this;\n\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\n\t            var options = this.options;\n\n\t            if (options.filter && this.element.is(!options.filter)) {\n\t                return;\n\t            }\n\n\t            if (!this.popup && !this.pane) {\n\t                this._init();\n\t            } else {\n\t                that._updateMenuItems();\n\t            }\n\n\t            if (this._isMobile) {\n\t                this.pane.navigate(this.view, this.options.animations.left);\n\t            } else {\n\t                this.popup.toggle();\n\t            }\n\t        },\n\n\t        _updateMenuItems: function() {\n\t            var that = this;\n\t            if (that.options.columns) {\n\t                that._setMenuItemsVisibility();\n\t                that._reorderMenuItems();\n\t            }\n\t        },\n\n\t        _setMenuItemsVisibility: function() {\n\t            var that = this;\n\n\t            that._eachRenderedMenuItem(function(index, column, renderedListElement) {\n\t                if (column.matchesMedia === false) {\n\t                    renderedListElement.hide();\n\t                } else {\n\t                    renderedListElement.show();\n\t                }\n\t            });\n\t        },\n\n\t        _reorderMenuItems: function() {\n\t            var that = this;\n\n\t            that._eachRenderedMenuItem(function(index, column, renderedListElement, renderedList) {\n\t                if (renderedListElement[0] && renderedListElement.index() !== index) {\n\t                    insertElementAt(index, renderedListElement, renderedList);\n\t                }\n\t            });\n\t            that._updateDataIndexes();\n\t        },\n\n\t        _updateDataIndexes: function () {\n\t            var that = this;\n\t            var renderedList = that._isMobile && that.view ?\n\t                $(that.view.element).find(".k-columns-item").children("ul") :\n\t                $(that.wrapper).find(".k-menu-group").first();\n\n\t            renderedList.find("span." + (this._isMobile ? "k-listgroup-form-field-wrapper" : "k-menu-link") +\n\t                " input").each(function (i) {\n\t                $(this).attr(kendo.attr("index"), i);\n\t            });\n\t        },\n\n\t        _eachRenderedMenuItem: function(callback) {\n\t            var that = this;\n\t            var renderedListElement;\n\t            var duplicateColumnIndex;\n\t            var fieldValue;\n\t            var currentColumn;\n\t            var columns = grep(leafColumns(that.owner.columns), function(col) {\n\t                var result = true,\n\t                    title = trim(col.title || "");\n\n\t                if (col.menu === false || (!col.field && !title.length)) {\n\t                    result = false;\n\t                }\n\n\t                return result;\n\t            }).map(function(col) {\n\t                return  {\n\t                     field: col.field,\n\t                     title: col.title,\n\t                     matchesMedia: col.matchesMedia\n\t                   };\n\t            });\n\t            var renderedList = that._isMobile && that.view ?\n\t                $(that.view.element).find(".k-columns-item").children("ul") :\n\t                $(that.wrapper).find(".k-menu-group").first();\n\n\t            var renderedListElements = renderedList.find("span." + (this._isMobile ? "k-listgroup-form-field-wrapper" : "k-menu-link"));\n\t            var oldOccurances = oldColumnOccurrences(renderedListElements, renderedList.find("input[type=checkbox]"));\n\t            var columnOccurrence = columnOccurrences(columns);\n\t            var columnElements;\n\n\t            for (var i = 0; i < columns.length; i++) {\n\t                currentColumn = columns[i];\n\t                fieldValue = currentColumn.field ? currentColumn.field : currentColumn.title;\n\t                duplicateColumnIndex = $.inArray(i, columnOccurrence[JSON.stringify(currentColumn)]);\n\t                columnElements = $();\n\n\t                for (var idx = 0; idx < oldOccurances[fieldValue].length; idx++) {\n\t                    columnElements = columnElements.add(renderedListElements.eq(oldOccurances[fieldValue][idx]));\n\t                }\n\t                renderedListElement = columnElements.find(attrEquals("field", fieldValue)).closest("li").eq(duplicateColumnIndex);\n\t                callback(i, currentColumn, renderedListElement, renderedList);\n\t            }\n\t        },\n\n\t        _open: function() {\n\t            var that = this;\n\t            $(".k-column-menu").not(that.wrapper).each(function() {\n\t                $(this).data(POPUP).close();\n\t            });\n\t            that.popup.element.on("keydown" + NS, function(e) {\n\t                if (e.keyCode == kendo.keys.ESC) {\n\t                    that.close();\n\t                }\n\t            });\n\n\t            if (that.options.lockedColumns) {\n\t                that._updateLockedColumns();\n\t            }\n\t        },\n\n\t        _activate: function() {\n\t            this.menu.element.focus();\n\n\t            this.trigger(OPEN, { field: this.field, container: this.wrapper });\n\t        },\n\n\t        _ownerColumns: function() {\n\t            var columns = leafColumns(this.owner.columns),\n\t                menuColumns = grep(columns, function(col) {\n\t                    var result = true,\n\t                        title = trim(col.title || "");\n\n\t                    if (col.menu === false || (!col.field && !title.length)) {\n\t                        result = false;\n\t                    }\n\n\t                    return result;\n\t                });\n\n\t            return map(menuColumns, function(col) {\n\t                return {\n\t                    originalField: col.field,\n\t                    field: col.field || col.title,\n\t                    title: col.title || col.field,\n\t                    hidden: col.hidden,\n\t                    matchesMedia: col.matchesMedia,\n\t                    index: inArray(col, columns),\n\t                    locked: !!col.locked,\n\t                    _originalObject: col,\n\t                    uid: col.headerAttributes.id\n\t                };\n\t            });\n\t        },\n\n\t        _sort: function() {\n\t            var that = this;\n\n\t            if (that.options.sortable) {\n\t                that.refresh();\n\n\t                that.menu.bind(SELECT, function(e) {\n\t                    var item = $(e.item),\n\t                        dir;\n\n\t                    if (item.hasClass("k-sort-asc")) {\n\t                        dir = ASC;\n\t                    } else if (item.hasClass("k-sort-desc")) {\n\t                        dir = DESC;\n\t                    }\n\n\t                    if (!dir) {\n\t                        return;\n\t                    }\n\n\t                    item.parent().find(".k-sort-" + (dir == ASC ? DESC : ASC)).removeClass(ACTIVE);\n\n\t                    that._sortDataSource(item, dir);\n\n\t                    if (!that._isMobile) {\n\t                        that.close();\n\t                    }\n\t                });\n\t            }\n\t        },\n\n\t        _sortDataSource: function(item, dir) {\n\t            var that = this,\n\t                sortable = that.options.sortable,\n\t                compare = sortable.compare === null ? undefined : sortable.compare,\n\t                dataSource = that.dataSource,\n\t                idx,\n\t                length,\n\t                sort = dataSource.sort() || [];\n\n\t            var removeClass = item.hasClass(ACTIVE) && sortable && sortable.allowUnsort !== false;\n\n\t            dir = !removeClass ? dir : undefined;\n\n\t            if (that.trigger("sort", { sort: { field: that.field, dir: dir, compare: compare } })) {\n\t                return;\n\t            }\n\n\t            if (removeClass) {\n\t                item.removeClass(ACTIVE);\n\t            } else {\n\t                item.addClass(ACTIVE);\n\t            }\n\n\t            if (sortable.mode === "multiple") {\n\t                for (idx = 0, length = sort.length; idx < length; idx++) {\n\t                    if (sort[idx].field === that.field) {\n\t                        sort.splice(idx, 1);\n\t                        break;\n\t                    }\n\t                }\n\t                sort.push({ field: that.field, dir: dir, compare: compare });\n\t            } else {\n\t                sort = [ { field: that.field, dir: dir, compare: compare} ];\n\t            }\n\n\t            dataSource.sort(sort);\n\t        },\n\n\t        _columns: function() {\n\t            var that = this;\n\n\t            if (that.options.columns) {\n\n\t                that._updateColumnsMenu();\n\n\t                that._updateColumnsMenuHandler = proxy(that._updateColumnsMenu, that);\n\n\t                that.owner.bind(["columnHide", "columnShow"], that._updateColumnsMenuHandler);\n\n\t                that._updateColumnsLockedStateHandler = proxy(that._updateColumnsLockedState, that);\n\n\t                that.owner.bind(["columnUnlock", "columnLock" ], that._updateColumnsLockedStateHandler);\n\n\t                that.menu.bind(SELECT, function(e) {\n\t                    var item = $(e.item),\n\t                        input,\n\t                        column,\n\t                        indexAttr = kendo.attr("index"),\n\t                        columnIndexMap = {},\n\t                        columnsCount = 0,\n\t                        columns = grep(leafColumns(that.owner.columns), function(col, idx) {\n\t                            var result = true,\n\t                                title = trim(col.title || "");\n\n\t                            if (col.menu === false || (!col.field && !title.length)) {\n\t                                result = false;\n\t                            }\n\n\t                            if (result) {\n\t                                columnIndexMap[idx] = columnsCount;\n\t                                columnsCount++;\n\t                            }\n\n\t                            return result;\n\t                        });\n\n\t                    if (that._isMobile) {\n\t                        e.preventDefault();\n\t                    }\n\n\t                    if (!item.parent().closest("li.k-columns-item")[0]) {\n\t                        return;\n\t                    }\n\n\t                    input = item.find(":checkbox");\n\t                    if (input.attr("disabled")) {\n\t                        return;\n\t                    }\n\n\t                    column = columns[columnIndexMap[parseInt(input.attr(indexAttr), 10)]];\n\n\t                    if (column.hidden === true) {\n\t                        that.owner.showColumn(column);\n\t                    } else {\n\t                        that.owner.hideColumn(column);\n\t                    }\n\t                });\n\t            }\n\t        },\n\n\t        _updateColumnsMenu: function() {\n\t            var idx, length, current, checked, locked;\n\t            var fieldAttr = kendo.attr("field"),\n\t                lockedAttr = kendo.attr("locked"),\n\t                uidAttr = kendo.attr("uid"),\n\t                columnIndexMap = {},\n\t                columnsCount = 0,\n\t                colIdx = 0,\n\t                columnsInMenu = grep(leafColumns(this.owner.columns), function(col, idx) {\n\t                    var result = true,\n\t                        title = trim(col.title || "");\n\n\t                    if (col.menu === false || (!col.field && !title.length)) {\n\t                        result = false;\n\t                    }\n\n\t                    if (result) {\n\t                        columnIndexMap[idx] = columnsCount;\n\t                        columnsCount++;\n\t                    }\n\n\t                    return result;\n\t                }),\n\t                visibleFields = grep(this._ownerColumns(), function(field) {\n\t                    return !field.hidden && field.matchesMedia !== false;\n\t                }),\n\t                visibleDataFields = grep(visibleFields, function(field) {\n\t                    return field.originalField;\n\t                }),\n\t                lockedCount = grep(visibleDataFields, function(col) {\n\t                    return col.locked === true;\n\t                }).length,\n\t                nonLockedCount = grep(visibleDataFields, function(col) {\n\t                    return col.locked !== true;\n\t                }).length,\n\t                columnsNotInMenu = grep(this.owner.columns, function(col) {\n\t                    return col.menu === false;\n\t                }),\n\t                hiddenColumnsNotInMenu = grep(columnsNotInMenu, function(col) {\n\t                    return col.hidden;\n\t                });\n\n\t            this.wrapper.find("[role=\'menuitemcheckbox\']").attr("aria-checked", false);\n\n\t            var checkboxes = this.wrapper\n\t                .find(".k-columns-item input[" + fieldAttr + "]")\n\t                .prop("disabled", false)\n\t                .prop("checked", false);\n\t            var switchWidget;\n\n\t            for (idx = 0, length = checkboxes.length; idx < length; idx ++) {\n\t                current = checkboxes.eq(idx);\n\t                locked = current.attr(lockedAttr) === "true";\n\t                checked = false;\n\t                switchWidget = current.data("kendoSwitch");\n\t                colIdx = columnsInMenu.map(function (col) {\n\t                    return col.headerAttributes.id;\n\t                }).indexOf(current.attr(uidAttr));\n\n\t                checked = !columnsInMenu[colIdx].hidden && columnsInMenu[colIdx].matchesMedia !== false;\n\t                current.prop("checked", checked);\n\n\t                if (switchWidget) {\n\t                    switchWidget.enable(true);\n\t                    switchWidget.check(checked);\n\t                }\n\n\t                current.closest("[role=\'menuitemcheckbox\']").attr("aria-checked", checked);\n\n\t                if (checked) {\n\t                    if (lockedCount == 1 && locked) {\n\t                        current.prop("disabled", true);\n\n\t                        if (switchWidget) {\n\t                            switchWidget.enable(false);\n\t                        }\n\t                    }\n\n\t                    if ((columnsNotInMenu.length === 0 || (columnsNotInMenu.length ===  hiddenColumnsNotInMenu.length)) && nonLockedCount == 1 && !locked) {\n\t                        current.prop("disabled", true);\n\n\t                        if (switchWidget) {\n\t                            switchWidget.enable(false);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _updateColumnsLockedState: function() {\n\t            var idx, length, current, column;\n\t            var fieldAttr = kendo.attr("field");\n\t            var lockedAttr = kendo.attr("locked");\n\t            var columns = toHash(this._ownerColumns(), "field");\n\t            var checkboxes = this.wrapper\n\t                .find(".k-columns-item input[type=checkbox]");\n\n\t            for (idx = 0, length = checkboxes.length; idx < length; idx ++ ) {\n\t                current = checkboxes.eq(idx);\n\t                column = columns[current.attr(fieldAttr)];\n\t                if (column) {\n\t                    current.attr(lockedAttr, column.locked);\n\t                }\n\t            }\n\n\t            this._updateColumnsMenu();\n\t        },\n\n\t        _filter: function() {\n\t            var that = this,\n\t                widget = FILTERMENU,\n\t                options = that.options;\n\n\t            if (options.filterable !== false) {\n\n\t                if (options.filterable.multi) {\n\t                    widget = "kendoFilterMultiCheck";\n\t                    if (options.filterable.dataSource) {\n\t                        options.filterable.checkSource = options.filterable.dataSource;\n\t                        delete options.filterable.dataSource;\n\t                    }\n\t                }\n\t                that.filterMenu = that.wrapper.find(".k-filterable")[widget](\n\t                    extend(true, {}, {\n\t                        appendToElement: true,\n\t                        dataSource: options.dataSource,\n\t                        values: options.values,\n\t                        field: that.field,\n\t                        title: that.title,\n\t                        change: function(e) {\n\t                            if (that.trigger("filtering", { filter: e.filter, field: e.field })) {\n\t                                e.preventDefault();\n\t                            }\n\t                        }\n\t                    },\n\t                    options.filterable)\n\t                    ).data(widget);\n\n\t                if (that._isMobile) {\n\t                    that.menu.bind(SELECT, function(e) {\n\t                        var item = $(e.item);\n\n\t                        if (item.hasClass("k-filter-item")) {\n\t                            that.pane.navigate(that.filterMenu.view, that.options.animations.left);\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        },\n\n\t        _lockColumns: function() {\n\t            var that = this;\n\t            that.menu.bind(SELECT, function(e) {\n\t                var item = $(e.item);\n\n\t                if (item.hasClass("k-lock")) {\n\t                    that.owner.lockColumn(that.field);\n\t                    if (!that._isMobile) {\n\t                        that.close();\n\t                    }\n\t                } else if (item.hasClass("k-unlock")) {\n\t                    that.owner.unlockColumn(that.field);\n\t                    if (!that._isMobile) {\n\t                        that.close();\n\t                    }\n\t                }\n\t            });\n\t        },\n\n\t        _updateLockedColumns: function() {\n\t            var field = this.field;\n\t            var columns = this.owner.columns;\n\t            var column = grep(columns, function(column) {\n\t                return column.field == field || column.title == field;\n\t            })[0];\n\n\t            if (!column) {\n\t                return;\n\t            }\n\n\t            var locked = column.locked === true;\n\t            var length = grep(columns, function(column) {\n\t                return !column.hidden && ((column.locked && locked) || (!column.locked && !locked));\n\t            }).length;\n\n\t            var lockItem = this.wrapper.find(".k-lock").removeClass("k-state-disabled");\n\t            var unlockItem = this.wrapper.find(".k-unlock").removeClass("k-state-disabled");\n\n\t            if (locked || length == 1) {\n\t                lockItem.addClass("k-state-disabled");\n\t            }\n\n\t            if (!locked || length == 1) {\n\t                unlockItem.addClass("k-state-disabled");\n\t            }\n\n\t            this._updateColumnsLockedState();\n\t        },\n\n\t        refresh: function() {\n\t            var that = this,\n\t                sort = that.options.dataSource.sort() || [],\n\t                descriptor,\n\t                field = that.field,\n\t                idx,\n\t                length;\n\n\t            that.wrapper.find(".k-sort-asc, .k-sort-desc").removeClass(ACTIVE);\n\n\t            for (idx = 0, length = sort.length; idx < length; idx++) {\n\t               descriptor = sort[idx];\n\n\t               if (field == descriptor.field) {\n\t                    that.wrapper.find(".k-sort-" + descriptor.dir).addClass(ACTIVE);\n\t               }\n\t            }\n\n\t            that.link[that._filterExist(that.dataSource.filter()) ? "addClass" : "removeClass"]("k-state-active");\n\t        },\n\n\t        _filterExist: function(filters) {\n\t            var found = false;\n\t            var filter;\n\n\t            if (!filters) {\n\t                return;\n\t            }\n\n\t            filters = filters.filters;\n\n\t            for (var idx = 0, length = filters.length; idx < length; idx++) {\n\t                filter = filters[idx];\n\n\t                if (filter.field == this.field) {\n\t                    found = true;\n\t                } else if (filter.filters) {\n\t                    found = found || this._filterExist(filter);\n\t                }\n\t            }\n\n\t            return found;\n\t        }\n\t    });\n\n\t    var template = \'<ul id="#=uid#">\'+\n\t                    \'#if(sortable){#\'+\n\t                        \'<li class="k-item k-menu-item k-sort-asc"><span class="k-link k-menu-link"><span class="k-icon k-i-sort-asc-sm"></span>${messages.sortAscending}</span></li>\'+\n\t                        \'<li class="k-item k-menu-item k-sort-desc"><span class="k-link k-menu-link"><span class="k-icon k-i-sort-desc-sm"></span>${messages.sortDescending}</span></li>\'+\n\t                        \'#if(showColumns || filterable){#\'+\n\t                            \'<li class="k-separator k-menu-separator" role="presentation"></li>\'+\n\t                        \'#}#\'+\n\t                    \'#}#\'+\n\t                    \'#if(showColumns){#\'+\n\t                        \'<li class="k-item k-menu-item k-columns-item" aria-haspopup="true"><span class="k-link k-menu-link"><span class="k-icon k-i-columns"></span>${messages.columns}</span><ul>\'+\n\t                        \'#for (var idx = 0; idx < columns.length; idx++) {#\'+\n\t                            \'<li role="menuitemcheckbox" aria-checked="false" #=columns[idx].matchesMedia === false ? "style=\\\'display:none;\\\'" : ""#><input type="checkbox" title="#=columns[idx].title#" data-#=ns#field="#=columns[idx].field.replace(/\\"/g,"&\\\\#34;")#" data-#=ns#index="#=columns[idx].index#" data-#=ns#locked="#=columns[idx].locked#" data-#=ns#uid="#=columns[idx].uid#"/>#=columns[idx].title#</li>\'+\n\t                        \'#}#\'+\n\t                        \'</ul></li>\'+\n\t                        \'#if(filterable || lockedColumns){#\'+\n\t                            \'<li class="k-separator k-menu-separator" role="presentation"></li>\'+\n\t                        \'#}#\'+\n\t                    \'#}#\'+\n\t                    \'#if(filterable){#\'+\n\t                        \'<li class="k-item k-menu-item k-filter-item" aria-haspopup="true"><span class="k-link k-menu-link"><span class="k-icon k-i-filter"></span>${messages.filter}</span><ul>\'+\n\t                            \'<li><div class="k-filterable"></div></li>\'+\n\t                        \'</ul></li>\'+\n\t                        \'#if(lockedColumns){#\'+\n\t                            \'<li class="k-separator k-menu-separator" role="presentation"></li>\'+\n\t                        \'#}#\'+\n\t                    \'#}#\'+\n\t                    \'#if(lockedColumns){#\'+\n\t                        \'<li class="k-item k-menu-item k-lock"><span class="k-link k-menu-link"><span class="k-icon k-i-lock"></span>${messages.lock}</span></li>\'+\n\t                        \'<li class="k-item k-menu-item k-unlock"><span class="k-link k-menu-link"><span class="k-icon k-i-unlock"></span>${messages.unlock}</span></li>\'+\n\t                    \'#}#\'+\n\t                    \'</ul>\';\n\n\t    var mobileTemplate =\n\t            \'<div data-#=ns#role="view" class="k-grid-column-menu">\' +\n\t                \'<div data-#=ns#role="header" class="k-header">\' +\n\t                    \'<a href="\\\\#" class="k-header-cancel k-link" title="#=messages.cancel#" \' +\n\t                    \'aria-label="#=messages.cancel#"><span class="k-icon k-i-arrow-chevron-left"></span></a>\' +\n\t                    \'${messages.settings}\' +\n\t                    \'<a href="\\\\#" class="k-header-done k-link" title="#=messages.done#" \' +\n\t                    \'aria-label="#=messages.done#"><span class="k-icon k-i-check"></span></a>\' +\n\t                \'</div>\' +\n\t                \'<div class="k-column-menu">\' +\n\t                    \'<ul class="k-reset">\' +\n\t                        \'<li>\' +\n\t                            \'<span class="k-list-title">#=messages.column#: ${title}</span>\' +\n\t                            \'<ul class="k-listgroup k-listgroup-flush">\' +\n\t                                \'#if(sortable){#\' +\n\t                                    \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item k-sort-asc"><span class="k-link"><span class="k-icon k-i-sort-asc-sm"></span><span class="k-item-title">${messages.sortAscending}</span></span></li>\' +\n\t                                    \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item k-sort-desc"><span class="k-link"><span class="k-icon k-i-sort-desc-sm"></span><span class="k-item-title">${messages.sortDescending}</span></span></li>\' +\n\t                                \'#}#\' +\n\t                                \'#if(lockedColumns){#\' +\n\t                                    \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item k-lock"><span class="k-link"><span class="k-icon k-i-lock"></span><span class="k-item-title">${messages.lock}</span></span></li>\' +\n\t                                    \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item k-unlock"><span class="k-link"><span class="k-icon k-i-unlock"></span><span class="k-item-title">${messages.unlock}</span></span></li>\' +\n\t                                \'#}#\' +\n\t                                \'#if(filterable){#\' +\n\t                                    \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item k-filter-item">\' +\n\t                                        \'<span class="k-link k-filterable">\' +\n\t                                            \'<span class="k-icon k-i-filter"></span>\' +\n\t                                            \'<span class="k-item-title">${messages.filter}</span>\' +\n\t                                            \'<span class="k-select"><span class="k-icon k-i-arrow-chevron-right"></span></span>\' +\n\t                                        \'</span>\' +\n\t                                    \'</li>\' +\n\t                                \'#}#\' +\n\t                            \'</ul>\' +\n\t                        \'</li>\' +\n\t                        \'#if(showColumns){#\' +\n\t                        \'<li class="k-columns-item"><span class="k-list-title">${messages.columnVisibility}</span>\' +\n\t                            \'<ul class="k-listgroup k-listgroup-flush">\' +\n\t                            \'#for (var idx = 0; idx < columns.length; idx++) {#\' +\n\t                                \'<li id="#=kendo.guid()#" class="k-item k-listgroup-item">\' +\n\t                                    \'<span class="k-listgroup-form-row">\' +\n\t                                        \'<span class="k-listgroup-form-field-label k-item-title">\' +\n\t                                            \'#=columns[idx].title#\' +\n\t                                        \'</span>\' +\n\t                                        \'<span class="k-listgroup-form-field-wrapper">\' +\n\t                                            \'<input type="checkbox" title="#=columns[idx].title#" \' +\n\t                                                \' data-#=ns#field="#=columns[idx].field.replace(/\\"/g,"&\\\\#34;")#"\' +\n\t                                                \' data-#=ns#index="#=columns[idx].index#"\' +\n\t                                                \' data-#=ns#uid="#=columns[idx].uid#"\' +\n\t                                                \' data-#=ns#locked="#=columns[idx].locked#" />\' +\n\t                                        \'</span>\' +\n\t                                    \'</span>\' +\n\t                                \'</li>\' +\n\t                            \'#}#\' +\n\t                            \'</ul>\' +\n\t                        \'</li>\'+\n\t                        \'#}#\'+\n\t                        \'<li class="k-item k-clear-wrap">\' +\n\t                            \'<span class="k-list-title">&nbsp;</span>\' +\n\t                            \'<ul class="k-listgroup k-listgroup-flush">\' +\n\t                                \'<li class="k-listgroup-item">\' +\n\t                                    \'<span class="k-link k-label k-clear" title="#=messages.clear#" aria-label="#=messages.clear#">\' +\n\t                                        \'#=messages.clear#\' +\n\t                                    \'</span>\' +\n\t                                \'</li>\' +\n\t                            \'</ul>\' +\n\t                        \'</li>\' +\n\t                    \'</ul>\' +\n\t                \'</div>\'+\n\t            \'</div>\';\n\n\t    var MobileMenu = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that._createCheckBoxes();\n\n\t            that.element.on("click" + NS, "li.k-item:not(.k-separator):not(.k-state-disabled):not(:has(.k-switch))", "_click");\n\t        },\n\n\t        events: [ SELECT ],\n\n\t        _click: function(e) {\n\t            var that = this;\n\n\t            if (!$(e.target).is("[type=checkbox]")) {\n\t                e.preventDefault();\n\t            }\n\n\t            if ($(e.target).hasClass("k-clear")) {\n\t                that._cancelChanges(true);\n\n\t                return;\n\t            }\n\n\t            if ($(e.target).hasClass("k-filterable")) {\n\t                that._cancelChanges(true);\n\t                that.trigger(SELECT, { item: e.currentTarget });\n\n\t                return;\n\t            }\n\n\t            that._updateSelectedItems(e.currentTarget);\n\t        },\n\n\t        _updateSelectedItems: function(el) {\n\t            var that = this;\n\t            var item = $(el);\n\t            var state = that.options.columnMenu.view.state || { columns: {} };\n\t            var id = item.prop("id");\n\n\t            if (item.hasClass("k-filter-item")) {\n\t                return;\n\t            }\n\n\t            if (state[id]) {\n\t                state[id] = false;\n\t            } else {\n\t                state[id] = true;\n\t            }\n\n\t            if (item.hasClass("k-sort-asc") || item.hasClass("k-sort-desc")) {\n\t                var dir;\n\t                var otherItem;\n\t                var otherItemId;\n\n\t                if (item.hasClass("k-sort-asc")) {\n\t                    dir = "asc";\n\t                    otherItem = that.element.find(".k-sort-desc");\n\t                } else {\n\t                    dir = "desc";\n\t                    otherItem = that.element.find(".k-sort-asc");\n\t                }\n\n\t                otherItemId = otherItem.prop("id");\n\n\t                if (dir === state.initialSort && !item.hasClass("k-state-selected")) {\n\t                    state[id] = false;\n\t                }\n\n\t                if (state[otherItemId]) {\n\t                    state[otherItemId] = false;\n\t                }\n\n\t                otherItem.removeClass(ACTIVE);\n\t            }\n\n\t            if (item.hasClass(ACTIVE)) {\n\t                item.removeClass(ACTIVE);\n\t            } else {\n\t                item.addClass(ACTIVE);\n\t            }\n\t        },\n\n\t        _cancelChanges: function(force) {\n\t            var that = this;\n\t            var menu = that.options.columnMenu;\n\t            var view = menu.view;\n\t            var state = view.state || { columns: {} };\n\t            var columns = state.columns;\n\n\t            that.element.find("." + ACTIVE).removeClass(ACTIVE);\n\t            menu.refresh();\n\n\t            if (force) {\n\t                var selectedItems = [];\n\n\t                for (var key in columns) {\n\t                    if (columns.hasOwnProperty(key)) {\n\t                        if (columns[key] === true) {\n\t                            var item = view.element.find("#" + key);\n\n\t                            selectedItems.push(item[0]);\n\t                        }\n\t                    }\n\t                }\n\t                // In order to use the columns hide/show validation,\n\t                // triggering the Select event must be done backwards\n\t                for (var i = selectedItems.length - 1; i >= 0; i--) {\n\t                    that.trigger(SELECT, { item: selectedItems[i] });\n\t                }\n\n\t                if (menu.options.lockedColumns) {\n\t                    menu._updateLockedColumns();\n\t                }\n\t            }\n\n\t            that.options.columnMenu.view.state = { columns: {} };\n\t        },\n\n\t        _applyChanges: function() {\n\t            var that = this;\n\t            var view = that.options.columnMenu.view;\n\t            var state = view.state || { columns: {} };\n\n\t            for (var key in state) {\n\t                if (state.hasOwnProperty(key)) {\n\t                    if (key !== "initialSort" && key !== "columns" && state[key] === true) {\n\t                        var item = view.element.find("#" + key);\n\n\t                        if (item.hasClass(ACTIVE)) {\n\t                            item.removeClass(ACTIVE);\n\t                        } else {\n\t                            item.addClass(ACTIVE);\n\t                        }\n\n\t                        that.trigger(SELECT, { item: item[0] });\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _createCheckBoxes: function() {\n\t            var that = this;\n\n\t            that.element.find(".k-columns-item").find("[type=\'checkbox\']").kendoSwitch({\n\t                messages: {\n\t                    checked: "",\n\t                    unchecked: ""\n\t                },\n\t                change: function(e) {\n\t                    var item = e.sender.element.closest(".k-item");\n\t                    var state = that.options.columnMenu.view.state || { columns: {} };\n\t                    var id = item.prop("id");\n\n\t                    if (state.columns[id]) {\n\t                        state.columns[id] = false;\n\t                    } else {\n\t                        state.columns[id] = true;\n\t                    }\n\n\t                    that.trigger(SELECT, { item: item });\n\t                }\n\t            });\n\t        },\n\n\t        _destroyCheckBoxes: function() {\n\t            var that = this;\n\t            var elements = that.element.find(".k-columns-item").find("[type=\'checkbox\']");\n\t            var switchWidget;\n\n\t            for (var i = 0; i < elements.length; i++) {\n\t                switchWidget = elements.eq(i).data("kendoSwitch");\n\n\t                if (switchWidget) {\n\t                    switchWidget.destroy();\n\t                }\n\t            }\n\t        },\n\n\t        close: function() {\n\t            this.options.pane.navigate("");\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            Widget.fn.destroy.call(that);\n\n\t            that.element.off(NS);\n\t            that._destroyCheckBoxes();\n\t        }\n\t    });\n\n\t    ui.plugin(ColumnMenu);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.filtermenu */ "./node_modules/@progress/kendo-ui/js/kendo.filtermenu.js");\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.menu */ "./node_modules/@progress/kendo-ui/js/kendo.menu.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.columnmenu.js?')},"./node_modules/@progress/kendo-ui/js/kendo.columnsorter.js":
/*!******************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.columnsorter.js ***!
  \******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1061);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "columnsorter",\n\t    name: "Column Sorter",\n\t    category: "framework",\n\t    depends: ["core"],\n\t    advanced: true\n\t};\n\n\t(function ($, undefined) {\n\t    var kendo = window.kendo;\n\t    var ui = kendo.ui;\n\t    var Widget = ui.Widget;\n\t    var DIR = "dir";\n\t    var ASC = "asc";\n\t    var SINGLE = "single";\n\t    var FIELD = "field";\n\t    var DESC = "desc";\n\t    var sorterNS = ".kendoColumnSorter";\n\t    var TLINK = ".k-link";\n\t    var ARIASORT = "aria-sort";\n\t    var proxy = $.proxy;\n\n\t    var ColumnSorter = Widget.extend({\n\t        init: function (element, options) {\n\n\t            var that = this, link;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that._refreshHandler = proxy(that.refresh, that);\n\n\t            that.dataSource = that.options.dataSource.bind("change", that._refreshHandler);\n\n\t            that.directions = that.options.initialDirection === ASC ? [ASC, DESC] : [DESC, ASC];\n\n\t            link = that.element.find(TLINK);\n\n\t            if (!link[0]) {\n\t                link = that.element.wrapInner(\'<a class="k-link" href="#"/>\').find(TLINK);\n\t            }\n\n\t            that.link = link;\n\n\t            that.element.on("click" + sorterNS, proxy(that._click, that));\n\t        },\n\n\t        options: {\n\t            name: "ColumnSorter",\n\t            mode: SINGLE,\n\t            allowUnsort: true,\n\t            compare: null,\n\t            filter: "",\n\t            initialDirection: ASC,\n\t            showIndexes: false\n\t        },\n\n\t        events: ["change"],\n\n\t        destroy: function () {\n\t            var that = this;\n\n\t            Widget.fn.destroy.call(that);\n\n\t            that.element.off(sorterNS);\n\n\t            that.dataSource.unbind("change", that._refreshHandler);\n\t            that._refreshHandler = that.element = that.link = that.dataSource = null;\n\t        },\n\n\t        refresh: function (e) {\n\t            if (e && (e.action === "itemchange" || e.action === "sync")) {\n\t                return;\n\t            }\n\t            var that = this,\n\t                sort = that.dataSource.sort() || [],\n\t                dir,\n\t                table,\n\t                leafCells,\n\t                element = that.element,\n\t                field = element.attr(kendo.attr(FIELD)),\n\t                descriptor = (that.dataSource._sortFields || {})[field],\n\t                headerIndex,\n\t                sortOrder;\n\n\t            element.removeAttr(kendo.attr(DIR));\n\t            element.removeAttr(ARIASORT);\n\n\n\t            if (descriptor) {\n\t                dir = descriptor.dir;\n\t                element.attr(kendo.attr(DIR), dir);\n\t                sortOrder = descriptor.index;\n\t            }\n\n\t            if (element.is("th") && descriptor) {\n\t                table = getColsTable(element);\n\n\t                if (table) {\n\t                    if (element.attr(kendo.attr("index"))) {\n\t                        leafCells = leafDataCells(element.closest("table"));\n\t                        headerIndex = leafCells.index(element);\n\t                    } else {\n\t                        headerIndex = element.parent().children(":visible").index(element);\n\t                    }\n\n\t                    table.find("col:not(.k-group-col):not(.k-hierarchy-col)").eq(headerIndex).toggleClass("k-sorted", dir !== undefined);\n\t                }\n\t            }\n\t            element.toggleClass("k-sorted", dir !== undefined);\n\t            element.find(".k-i-sort-asc-sm,.k-i-sort-desc-sm,.k-sort-order").remove();\n\n\t            if (dir === ASC) {\n\t                $(\'<span class="k-icon k-i-sort-asc-sm" />\').appendTo(that.link);\n\t                element.attr(ARIASORT, "ascending");\n\t            } else if (dir === DESC) {\n\t                $(\'<span class="k-icon k-i-sort-desc-sm" />\').appendTo(that.link);\n\t                element.attr(ARIASORT, "descending");\n\t            }\n\t            if (that.options.showIndexes && sort.length > 1 && sortOrder) {\n\t                $(\'<span class="k-sort-order" />\').html(sortOrder).appendTo(that.link);\n\t            }\n\t        },\n\n\t        _toggleSortDirection: function(dir) {\n\t            var directions = this.directions;\n\t            if (dir === directions[directions.length - 1] && this.options.allowUnsort) {\n\t                return undefined;\n\t            }\n\t            return directions[0] === dir ? directions[1] : directions[0];\n\t        },\n\n\t        _click: function (e) {\n\t            var that = this,\n\t                element = that.element,\n\t                field = element.attr(kendo.attr(FIELD)),\n\t                dir = element.attr(kendo.attr(DIR)),\n\t                options = that.options,\n\t                compare = that.options.compare === null ? undefined : that.options.compare,\n\t                sort = that.dataSource.sort() || [],\n\t                idx,\n\t                length;\n\n\t            e.preventDefault();\n\n\t            if (options.filter && !element.is(options.filter)) {\n\t                return;\n\t            }\n\n\t            dir = this._toggleSortDirection(dir);\n\n\t            if (this.trigger("change", { sort: { field: field, dir: dir, compare: compare } })) {\n\t                return;\n\t            }\n\n\t            if (options.mode === SINGLE) {\n\t                sort = [{ field: field, dir: dir, compare: compare }];\n\t            } else if (options.mode === "multiple") {\n\t                for (idx = 0, length = sort.length; idx < length; idx++) {\n\t                    if (sort[idx].field === field) {\n\t                        sort.splice(idx, 1);\n\t                        break;\n\t                    }\n\t                }\n\t                sort.push({ field: field, dir: dir, compare: compare });\n\t            }\n\n\t            if (this.dataSource.options.endless) {\n\t                this.dataSource.options.endless = null;\n\t                element.closest(".k-grid").getKendoGrid()._endlessPageSize = that.dataSource.options.pageSize;\n\t                this.dataSource.pageSize(that.dataSource.options.pageSize);\n\t            }\n\t            this.dataSource.sort(sort);\n\t        }\n\t    });\n\n\t    function leafDataCells(container) {\n\t        var rows = container.find("tr:not(.k-filter-row)");\n\t        var indexAttr = kendo.attr("index");\n\n\t        var cells = rows.find("th[" + indexAttr + "]:visible");\n\n\t        cells.sort(function(a, b) {\n\t            a = $(a);\n\t            b = $(b);\n\n\t            var indexA = a.attr(indexAttr);\n\t            var indexB = b.attr(indexAttr);\n\n\t            if (indexA === undefined) {\n\t                indexA = $(a).index();\n\t            }\n\t            if (indexB === undefined) {\n\t                indexB = $(b).index();\n\t            }\n\n\t            indexA = parseInt(indexA, 10);\n\t            indexB = parseInt(indexB, 10);\n\t            return indexA > indexB ? 1 : (indexA < indexB ? -1 : 0);\n\t        });\n\n\t        return cells;\n\t    }\n\n\t    function getColsTable(element) {\n\t        var table = null;\n\t        if (element.is("th")) {\n\t            table = element.closest("table");\n\t            if (table.parent().hasClass("k-grid-header-wrap")) {\n\t                table = table.closest(".k-grid").find(".k-grid-content > table");\n\t            } else if (table.parent().hasClass("k-grid-header-locked")) {\n\t                table = table.closest(".k-grid").find(".k-grid-content-locked > table");\n\t            }\n\t        }\n\t        return table;\n\t    }\n\n\t    ui.plugin(ColumnSorter);\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.columnsorter.js?')}}]);