(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{"./node_modules/@progress/kendo-ui/js/kendo.button.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.button.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1042);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (f, define) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1018), __webpack_require__(1043)], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function () {\n\n\t    var __meta__ = { // jshint ignore:line\n\t        id: "button",\n\t        name: "Button",\n\t        category: "web",\n\t        description: "The Button widget displays styled buttons.",\n\t        depends: ["core", "badge"]\n\t    };\n\n\t    (function ($, undefined) {\n\t        var kendo = window.kendo,\n\t            Widget = kendo.ui.Widget,\n\t            ui = kendo.ui,\n\t            proxy = $.proxy,\n\t            keys = kendo.keys,\n\t            CLICK = "click",\n\t            MOUSEDOWN = kendo.support.mousedown,\n\t            MOUSEUP = kendo.support.mouseup,\n\t            MOUSEOUT = "mouseout",\n\t            KBUTTON = "k-button",\n\t            KBUTTONICON = "k-button-icon",\n\t            KBUTTONICONTEXT = "k-button-icontext",\n\t            NS = ".kendoButton",\n\t            DISABLED = "disabled",\n\t            DISABLEDSTATE = "k-state-disabled",\n\t            FOCUSEDSTATE = "k-state-focused",\n\t            SELECTEDSTATE = "k-state-active";\n\n\t        var BUTTON_DEFAULTS = {\n\t            icon: "",\n\t            iconClass: "",\n\t            spriteCssClass: "",\n\t            imageUrl: "",\n\t            badge: null\n\t        };\n\t        kendo.setDefaults("button", BUTTON_DEFAULTS);\n\n\t        var Button = Widget.extend({\n\t            init: function (element, options) {\n\t                var that = this;\n\n\t                Widget.fn.init.call(that, element, options);\n\n\t                element = that.wrapper = that.element;\n\t                options = that.options;\n\n\t                element.addClass(KBUTTON).attr("role", "button");\n\n\t                options.enable = options.enable && options.enabled && !element.attr(DISABLED);\n\t                that.enable(options.enable);\n\n\t                if (options.enable) {\n\t                    that._tabindex();\n\t                }\n\n\t                that._badge();\n\n\t                that.iconElement();\n\n\t                element\n\t                    .on(CLICK + NS, proxy(that._click, that))\n\t                    .on("focus" + NS, proxy(that._focus, that))\n\t                    .on("blur" + NS, proxy(that._blur, that))\n\t                    .on("keydown" + NS, proxy(that._keydown, that))\n\t                    .on("keyup" + NS, proxy(that._removeActive, that))\n\t                    .on(MOUSEDOWN + NS, proxy(that._addActive, that))\n\t                    .on(MOUSEUP + NS  + " " + MOUSEOUT + NS, proxy(that._removeActive, that));\n\n\t                kendo.notify(that);\n\t            },\n\n\t            destroy: function() {\n\t                var that = this;\n\n\t                that.wrapper.off(NS);\n\n\t                if (that.badge){\n\t                    that.badge.destroy();\n\t                }\n\n\t                Widget.fn.destroy.call(that);\n\t            },\n\n\t            events: [\n\t                CLICK\n\t            ],\n\n\t            options: {\n\t                name: "Button",\n\t                enable: true,\n\t                enabled: true,\n\t                icon: "",\n\t                iconClass: "",\n\t                spriteCssClass: "",\n\t                imageUrl: "",\n\t                badge: null\n\t            },\n\n\t            _isNativeButton: function() {\n\t                return this.element.prop("tagName").toLowerCase() == "button";\n\t            },\n\n\t            _click: function(e) {\n\t                if (this.options.enable) {\n\t                    if (this.trigger(CLICK, { event: e })) {\n\t                        e.preventDefault();\n\t                    }\n\t                }\n\t            },\n\n\t            _focus: function() {\n\t                if (this.options.enable) {\n\t                    this.element.addClass(FOCUSEDSTATE);\n\t                }\n\t            },\n\n\t            _blur: function() {\n\t                var that = this;\n\t                that.element.removeClass(FOCUSEDSTATE);\n\t                setTimeout(function() {\n\t                    that.element.removeClass(SELECTEDSTATE);\n\t                });\n\t            },\n\n\t            _keydown: function(e) {\n\t                var that = this;\n\t                if (e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR) {\n\t                    that._addActive();\n\n\t                    if (!that._isNativeButton()) {\n\t                        if (e.keyCode == keys.SPACEBAR) {\n\t                            e.preventDefault();\n\t                        }\n\t                        that._click(e);\n\t                    }\n\t                }\n\t            },\n\n\t            _removeActive: function() {\n\t                this.element.removeClass(SELECTEDSTATE);\n\t            },\n\n\t            _addActive: function() {\n\t                if (this.options.enable) {\n\t                    this.element.addClass(SELECTEDSTATE);\n\t                }\n\t            },\n\n\t            iconElement: function() {\n\t                var that = this,\n\t                    element = that.element,\n\t                    options = that.options,\n\t                    icon = options.icon,\n\t                    iconClass = options.iconClass,\n\t                    spriteCssClass = options.spriteCssClass,\n\t                    imageUrl = options.imageUrl,\n\t                    span, img, isEmpty;\n\n\t                if (spriteCssClass || imageUrl || icon || iconClass) {\n\t                    isEmpty = true;\n\n\t                    element.contents().filter(function() {\n\t                        return (!$(this).hasClass("k-sprite") && !$(this).hasClass("k-icon") && !$(this).hasClass("k-image"));\n\t                    }).each(function(idx, el){\n\t                        if (el.nodeType == 1 || el.nodeType == 3 && kendo.trim(el.nodeValue).length > 0) {\n\t                            isEmpty = false;\n\t                        }\n\t                    });\n\n\t                    if (isEmpty) {\n\t                        element.addClass(KBUTTONICON);\n\t                    } else {\n\t                        element.addClass(KBUTTONICONTEXT);\n\t                    }\n\t                }\n\n\t                if (imageUrl) {\n\t                    img = element.children("img.k-image").first();\n\t                    if (!img[0]) {\n\t                        img = $(\'<img alt="icon" class="k-image" />\').prependTo(element);\n\t                    }\n\t                    img.attr("src", imageUrl);\n\t                } else if (icon || iconClass) {\n\t                    span = element.children("span.k-icon").first();\n\t                    if (!span[0]) {\n\t                        span = $(\'<span></span>\').prependTo(element);\n\t                    }\n\t                    span.attr("class", icon ? "k-icon k-i-" + icon : iconClass);\n\t                } else if (spriteCssClass) {\n\t                    span = element.children("span.k-sprite").first();\n\t                    if (!span[0]) {\n\t                        span = $(\'<span class="k-sprite"></span>\').prependTo(element);\n\t                    }\n\t                    span.addClass(spriteCssClass);\n\t                }\n\t            },\n\n\t            enable: function(enable) {\n\t                var that = this,\n\t                    element = that.element;\n\n\t                if (enable === undefined) {\n\t                    enable = true;\n\t                }\n\n\t                enable = !!enable;\n\t                that.options.enable = enable;\n\t                element.toggleClass(DISABLEDSTATE, !enable)\n\t                    .attr("aria-disabled", !enable)\n\t                    .attr(DISABLED, !enable);\n\n\t                if (enable) {\n\t                    that._tabindex();\n\t                }\n\n\t                // prevent \'Unspecified error\' in IE when inside iframe\n\t                try {\n\t                    element.blur();\n\t                } catch (err) {}\n\t            },\n\n\t            _badge: function() {\n\t                var that = this;\n\t                var badgeOptions = that.options.badge;\n\t                var badgeEelement;\n\n\t                if (badgeOptions === null || badgeOptions === undefined) {\n\t                    return;\n\t                }\n\n\t                if (badgeOptions.constructor !== Object) {\n\t                    badgeOptions = { text: badgeOptions };\n\t                }\n\n\t                if (badgeOptions.position === undefined || badgeOptions.position === "") {\n\t                    badgeOptions.position = "top end";\n\t                }\n\n\t                badgeOptions._classNames = ["k-button-badge"];\n\n\t                that.element.addClass("k-badge-container");\n\n\t                badgeEelement = $(\'<span />\').appendTo(that.element);\n\t                that.badge = new ui.Badge(badgeEelement, badgeOptions);\n\t            }\n\t        });\n\n\t        if (Button.fn.hasOwnProperty("defaults") === false) {\n\t            Object.defineProperty(Button.fn, "defaults", {\n\t                get: function() {\n\t                    return kendo.defaults.button;\n\t                }\n\t            });\n\t        }\n\n\t        kendo.ui.plugin(Button);\n\n\t    })(window.kendo.jQuery);\n\n\t    return window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.badge */ "./node_modules/@progress/kendo-ui/js/kendo.badge.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.button.js?')},"./node_modules/@progress/kendo-ui/js/kendo.buttongroup.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.buttongroup.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1044);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.badge */ "./node_modules/@progress/kendo-ui/js/kendo.badge.js");\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018), __webpack_require__(1043) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "buttongroup",\n\t    name: "ButtonGroup",\n\t    category: "web",\n\t    description: "The Kendo ButtonGroup widget is a linear set of grouped buttons.",\n\t    depends: [ "core", "badge" ]\n\t};\n\n\t(function($, undefined) {\n\t    var kendo = window.kendo;\n\t    var ui = kendo.ui;\n\t    var Widget = ui.Widget;\n\t    var keys = kendo.keys;\n\t    var proxy = $.proxy;\n\t    var template = kendo.template;\n\t    var NS = ".kendoButtonGroup";\n\t    var KWIDGET = "k-widget";\n\t    var KBUTTONGROUP = "k-button-group";\n\t    var KBUTTON = "k-button";\n\t    var KBUTTONICONTEXT = "k-button-icontext";\n\t    var KBUTTONICON = "k-button-icon";\n\t    var ACTIVE = "k-state-active";\n\t    var FOCUSED = "k-state-focused";\n\t    var DISABLED = "k-state-disabled";\n\t    var SELECT = "select";\n\t    var CLICK = "click";\n\t    var KEYDOWN = "keydown";\n\t    var FOCUS = "focus";\n\t    var BLUR = "blur";\n\t    var MOUSEDOWN = "mousedown";\n\t    var templates = {\n\t        item: template(\'<span \' +\n\t                        \'#= item.enabled === false ? \\"disabled\\" : "" # \' +\n\t                        \'>\' +\n\t                        \'#= icon(iconClass) #\' +\n\t                        \'#= image(item) #\' +\n\t                        \'#= text #\' +\n\t                        \'</span>\'),\n\t        image: template(\'<img alt="icon" src="#=data.imageUrl#" />\'),\n\t        icon: template(\'<span class="#=data#"></span>\'),\n\t        empty: template("")\n\t    };\n\n\t    function createBadge(badgeOptions, item) {\n\t        var badgeEelement;\n\n\t        if (badgeOptions === null || badgeOptions === undefined) {\n\t            return;\n\t        }\n\n\t        if (badgeOptions.constructor !== Object) {\n\t            badgeOptions = { text: badgeOptions };\n\t        }\n\n\t        if (badgeOptions.position === undefined || badgeOptions.position === "") {\n\t            badgeOptions.position = "inline";\n\t        }\n\n\t        badgeOptions._classNames = ["k-button-badge"];\n\n\t        item.addClass("k-badge-container");\n\n\t        badgeEelement = $(\'<span />\').appendTo(item);\n\t        item.badge = new ui.Badge(badgeEelement, badgeOptions);\n\t    }\n\n\t    var ButtonGroup = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that.wrapper = that.element;\n\n\t            if (that.options.items) {\n\t                that._renderItems(that.options.items);\n\t            }\n\n\t            that.selectedIndices = [];\n\n\t            that.element\n\t                .addClass(KWIDGET + " " + KBUTTONGROUP)\n\t                .attr("role", "group")\n\t                .attr("tabindex", that.element.attr("tabindex") || "0")\n\t                .children().each(function () {\n\t                    var item = $(this);\n\t                    that._updateClasses.bind(that)(item);\n\t                });\n\n\t            that._enable = true;\n\n\t            if (!that.options.enable || !that.options.enabled) {\n\t                that._enable = false;\n\t                that.element\n\t                        .attr("aria-disabled", true)\n\t                        .addClass(DISABLED);\n\t            }\n\n\t            that.select(that.options.index);\n\n\t            that.element\n\t                .on(CLICK + NS, "." + KBUTTON, proxy(that._click, that))\n\t                .on(FOCUS + NS, proxy(that._focus, that))\n\t                .on(KEYDOWN + NS, proxy(that._keyDown, that))\n\t                .on(BLUR + NS, function() {\n\t                    that.preventFocus = false;\n\t                    that.element.find("." + KBUTTON).removeClass(FOCUSED);\n\t                })\n\t                .on(MOUSEDOWN + NS, function() {\n\t                    that.preventFocus = true;\n\t                });\n\t        },\n\n\t        events: [\n\t            SELECT\n\t        ],\n\n\t        options: {\n\t            name: "ButtonGroup",\n\t            selection: "single",\n\t            index: -1,\n\t            enable: true,\n\t            enabled: true\n\t        },\n\n\t        current: function() {\n\t            return this.element.find("." + ACTIVE);\n\t        },\n\n\t        _renderItems: function (items) {\n\t            var that = this;\n\n\t            items.forEach(function (item) {\n\t                var renderedItem = $(templates.item({\n\t                    image: item.imageUrl ? templates.image : templates.empty,\n\t                    icon: !item.imageUrl && (item.iconClass || item.icon) ? templates.icon : templates.empty,\n\t                    iconClass: item.iconClass || "k-icon k-i-" + item.icon,\n\t                    item: item,\n\t                    text: item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : ""\n\t                }));\n\n\t                if (item.attributes) {\n\t                    renderedItem.attr(item.attributes);\n\t                }\n\n\t                if (item.selected) {\n\t                    renderedItem.addClass(ACTIVE);\n\t                }\n\n\t                if (item.iconClass || item.icon || item.imageUrl) {\n\t                    renderedItem.addClass(item.text ? "k-button-icontext" : "k-button-icon");\n\t                }\n\n\t                if (item.badge) {\n\t                    createBadge(item.badge, renderedItem);\n\t                }\n\n\t                renderedItem.appendTo(that.element);\n\t            });\n\t        },\n\n\t        _focus: function () {\n\t            var element = $(this.element);\n\n\t            if (this.preventFocus) {\n\t                return;\n\t            }\n\n\t            if (element.find("." + ACTIVE).length) {\n\t                element.find("." + ACTIVE).first().focus().addClass(FOCUSED);\n\t            } else {\n\t                element.children().first().focus().addClass(FOCUSED);\n\t            }\n\t        },\n\n\t        _keyDown: function (e) {\n\t            var that = this;\n\t            var buttonGroup = $(that.element);\n\t            var focusableItems = buttonGroup.find("." + KBUTTON);\n\t            var focusedElement = buttonGroup.find("." + FOCUSED);\n\t            var currentIndex = focusableItems.index(focusedElement);\n\t            var isRtl =  kendo.support.isRtl(that.element);\n\t            var itemToFocus;\n\n\t            if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n\t                focusedElement.removeClass(FOCUSED);\n\t                itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n\t                itemToFocus.focus().addClass(FOCUSED);\n\t                e.preventDefault();\n\t            } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n\t                focusedElement.removeClass(FOCUSED);\n\t                itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n\t                itemToFocus.focus().addClass(FOCUSED);\n\t                e.preventDefault();\n\t            } else if (e.keyCode === keys.ENTER || e.keyCode === keys.SPACEBAR) {\n\t                that._select(focusedElement);\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        select: function (button) {\n\t            var that = this,\n\t                ariaPressed,\n\t                index = -1;\n\n\t            if (button === undefined || button === -1) {\n\t                return;\n\t            }\n\n\t            that.element.find("." + KBUTTON).removeClass(FOCUSED);\n\n\t            if (typeof button === "number") {\n\t                index = button;\n\t                button = that.element.children().eq(button);\n\t            } else if (button.nodeType) {\n\t                button = $(button);\n\t                index = button.index();\n\t            }\n\n\t            if (that.options.selection === "multiple") {\n\t                ariaPressed = button.attr("aria-pressed") === "true";\n\t                button\n\t                    .attr("aria-pressed", !ariaPressed)\n\t                    .toggleClass(ACTIVE);\n\n\t                if (that.selectedIndices.indexOf(index) === -1) {\n\t                    that.selectedIndices.push(index);\n\t                } else {\n\t                    that.selectedIndices.splice(that.selectedIndices.indexOf(index), 1);\n\t                }\n\n\t            } else {\n\t                that.selectedIndices = [];\n\t                that.current()\n\t                        .attr("aria-pressed", false)\n\t                        .removeClass(ACTIVE);\n\n\t                button\n\t                    .attr("aria-pressed", true)\n\t                    .addClass(ACTIVE);\n\n\t                that.selectedIndices.push(index);\n\t            }\n\n\t            that.trigger(SELECT, { indices: that.selectedIndices});\n\t        },\n\n\t        badge: function(item, value) {\n\t            var buttongroup = this.element;\n\t            var button = !isNaN(item) ? buttongroup.children().eq(item) : buttongroup.find(item);\n\t            var validValue = value || value === 0;\n\t            var badge;\n\n\t            if (!button.length) {\n\t                return;\n\t            }\n\n\t            badge = button.children(".k-badge").eq(0).data(\'kendoBadge\');\n\t            if (!badge && validValue) {\n\t                createBadge({ value: kendo.htmlEncode(value)}, button);\n\t                return kendo.htmlEncode(value);\n\t            }\n\n\t            if (validValue) {\n\t                badge.text(kendo.htmlEncode(value));\n\t            } else if (value === false) {\n\t                badge.element.empty().remove();\n\t                badge.destroy();\n\t                return;\n\t            }\n\n\t            return badge ? badge.text() : null;\n\t        },\n\n\t        enable: function(enable) {\n\t            if(typeof enable == "undefined") {\n\t                enable = true;\n\t            }\n\n\t            this.element\n\t                    .attr("aria-disabled", !enable)\n\t                    .toggleClass(DISABLED, !enable);\n\n\t            this._enable = this.options.enable = enable;\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            that.element.off(NS);\n\t            that.element.find(\'.k-badge\').each(function(){\n\t                $(this).data(\'kendoBadge\').destroy();\n\t            });\n\n\t            Widget.fn.destroy.call(that);\n\t        },\n\n\t        _updateClasses: function(button) {\n\t            var icon = kendo.attrValue(button, "icon");\n\t            var badge = kendo.attrValue(button, "badge");\n\t            var image = button.find("img").addClass("k-image");\n\t            var isEmpty = true;\n\n\t            button\n\t                .attr("aria-pressed", false)\n\t                .attr("role", "button")\n\t                .addClass(KBUTTON);\n\n\t            if (button.is("[disabled]") || button.hasClass(DISABLED)) {\n\t                button\n\t                    .addClass(DISABLED)\n\t                    .attr("aria-disabled", true)\n\t                    .removeAttr("disabled");\n\t            }\n\n\t            if (button.is("." + ACTIVE)) {\n\t                button.removeClass(ACTIVE);\n\t                if ((!button.hasClass(DISABLED) && this.options.selection === "single") ||\n\t                    this.options.selection === "multiple") {\n\t                    this.select(button[0]);\n\t                }\n\t            }\n\n\t            if (!image[0] && icon) {\n\t                button.prepend($(templates.icon("k-icon k-i-" + icon)));\n\t            }\n\n\t            button\n\t                .contents()\n\t                .filter(function() {\n\t                    return !$(this).hasClass("k-icon") && !$(this).hasClass("k-image");\n\t                }).each(function(){\n\t                    if (this.nodeType == 1 || this.nodeType == 3 && kendo.trim(this.nodeValue).length > 0) {\n\t                        isEmpty = false;\n\t                    }\n\t                });\n\n\t            if (image[0] || icon) {\n\t                button.addClass(isEmpty ? KBUTTONICON : KBUTTONICONTEXT);\n\t            }\n\n\t            if (badge || badge === 0) {\n\t                createBadge(badge, button);\n\t            }\n\t        },\n\n\t        _click: function(e) {\n\t            var target = $(e.target).closest("." + KBUTTON);\n\n\t            if (e.isDefaultPrevented()) {\n\t                return;\n\t            }\n\n\t            this._select(target);\n\t        },\n\n\t        _select: function (target) {\n\t            var button = target;\n\n\t            this.element.find("." + KBUTTON).removeClass(FOCUSED);\n\n\t            if (!this._enable || button.is("." + DISABLED)) {\n\t                button.addClass(FOCUSED);\n\t                return;\n\t            }\n\n\t            this.select(target[0]);\n\t            button.addClass(FOCUSED);\n\t        }\n\t    });\n\n\t    ui.plugin(ButtonGroup);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.buttongroup.js?')},"./node_modules/@progress/kendo-ui/js/kendo.calendar.js":
/*!**************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.calendar.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1045);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018), __webpack_require__(1046) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "calendar",\n\t    name: "Calendar",\n\t    category: "web",\n\t    description: "The Calendar widget renders a graphical calendar that supports navigation and selection.",\n\t    depends: [ "core", "selectable" ]\n\t};\n\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        support = kendo.support,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        keys = kendo.keys,\n\t        parse = kendo.parseDate,\n\t        adjustDST = kendo.date.adjustDST,\n\t        weekInYear = kendo.date.weekInYear,\n\t        Selectable = kendo.ui.Selectable,\n\t        extractFormat = kendo._extractFormat,\n\t        template = kendo.template,\n\t        getCulture = kendo.getCulture,\n\t        transitions = kendo.support.transitions,\n\t        transitionOrigin = transitions ? transitions.css + "transform-origin" : "",\n\t        cellTemplate = template(\'<td#=data.cssClass# role="gridcell"><a tabindex="-1" class="k-link" href="\\\\#" data-#=data.ns#value="#=data.dateString#">#=data.value#</a></td>\', { useWithBlock: false }),\n\t        emptyCellTemplate = template(\'<td role="gridcell" class="k-out-of-range"><a class="k-link"></a></td>\', { useWithBlock: false }),\n\t        otherMonthCellTemplate = template(\'<td role="gridcell" class="k-out-of-range">&nbsp;</td>\', { useWithBlock: false }),\n\t        weekNumberTemplate = template(\'<td class="k-alt">#= data.weekNumber #</td>\', { useWithBlock: false }),\n\t        browser = kendo.support.browser,\n\t        isIE8 = browser.msie && browser.version < 9,\n\t        outerWidth = kendo._outerWidth,\n\t        ns = ".kendoCalendar",\n\t        CLICK = "click" + ns,\n\t        KEYDOWN_NS = "keydown" + ns,\n\t        ID = "id",\n\t        MIN = "min",\n\t        LEFT = "left",\n\t        SLIDE = "slideIn",\n\t        MONTH = "month",\n\t        CENTURY = "century",\n\t        CHANGE = "change",\n\t        NAVIGATE = "navigate",\n\t        VALUE = "value",\n\t        HOVER = "k-state-hover",\n\t        DISABLED = "k-state-disabled",\n\t        FOCUSED = "k-state-focused",\n\t        OTHERMONTH = "k-other-month",\n\t        OTHERMONTHCLASS = \' class="\' + OTHERMONTH + \'"\',\n\t        OUTOFRANGE = "k-out-of-range",\n\t        TODAY = "k-nav-today",\n\t        CELLSELECTOR = "td:has(.k-link)",\n\t        CELLSELECTORVALID = "td:has(.k-link):not(." + DISABLED + "):not(." + OUTOFRANGE + ")",\n\t        WEEKCOLUMNSELECTOR = "td:not(:has(.k-link))",\n\t        SELECTED = "k-state-selected",\n\t        BLUR = "blur" + ns,\n\t        FOCUS = "focus",\n\t        FOCUS_WITH_NS = FOCUS + ns,\n\t        MOUSEENTER = support.touch ? "touchstart" : "mouseenter",\n\t        MOUSEENTER_WITH_NS = support.touch ? "touchstart" + ns : "mouseenter" + ns,\n\t        MOUSELEAVE = support.touch ? "touchend" + ns + " touchmove" + ns : "mouseleave" + ns,\n\t        MS_PER_MINUTE = 60000,\n\t        MS_PER_DAY = 86400000,\n\t        PREVARROW = "_prevArrow",\n\t        NEXTARROW = "_nextArrow",\n\t        ARIA_DISABLED = "aria-disabled",\n\t        ARIA_SELECTED = "aria-selected",\n\t        ARIA_LABEL = "aria-label",\n\t        proxy = $.proxy,\n\t        extend = $.extend,\n\t        DATE = Date,\n\t        views = {\n\t            month: 0,\n\t            year: 1,\n\t            decade: 2,\n\t            century: 3\n\t        },\n\t        HEADERSELECTOR = \'.k-header, .k-calendar-header\',\n\t        CLASSIC_HEADER_TEMPLATE = \'<div class="k-header">\' +\n\t            \'<a href="\\\\#" \' + kendo.attr("action") + \'="prev" role="button" class="k-link k-nav-prev" \' + ARIA_LABEL + \'="Previous"><span class="k-icon k-i-arrow-60-left"></span></a>\' +\n\t            \'<a href="\\\\#" \' + kendo.attr("action") + \'="nav-up" role="button" aria-live="assertive" aria-atomic="true" class="k-link k-nav-fast"></a>\' +\n\t            \'<a href="\\\\#" \' + kendo.attr("action") + \'="next" role="button" class="k-link k-nav-next" \' + ARIA_LABEL + \'="Next"><span class="k-icon k-i-arrow-60-right"></span></a>\' +\n\t        \'</div>\',\n\t        MODERN_HEADER_TEMPLATE = \'<div class="k-calendar-header">\' +\n\t            \'<a href="\\\\#" \' + kendo.attr("action") + \'="nav-up" role="button" aria-live="assertive" aria-atomic="true" class="k-button k-title"></a>\' +\n\t            \'<span class="k-calendar-nav">\' +\n\t                \'<a \' + kendo.attr("action") + \'="prev" class="k-button k-button-icon k-prev-view">\' +\n\t                    \'<span class="k-icon k-i-arrow-60-left"></span>\' +\n\t                \'</a>\' +\n\t                \'<a \' + kendo.attr("action") + \'="today" class="k-today">#=messages.today#</a>\' +\n\t                \'<a \' + kendo.attr("action") + \'="next" class="k-button k-button-icon k-next-view">\' +\n\t                    \'<span class="k-icon k-i-arrow-60-right"></span>\' +\n\t                \'</a>\' +\n\t            \'</span>\' +\n\t        \'</div>\';\n\n\t    var Calendar = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this, value, id;\n\t            options = options || {};\n\t            options.componentType = options.componentType || "classic";\n\t            Widget.fn.init.call(that, element, options);\n\n\t            element = that.wrapper = that.element;\n\t            options = that.options;\n\n\t            options.url = kendo.unescape(options.url);\n\n\t            that.options.disableDates = getDisabledExpr(that.options.disableDates);\n\n\t            that._templates();\n\n\t            that._selectable();\n\n\t            that._header();\n\n\t            that._viewWrapper();\n\n\t            if (that.options.hasFooter) {\n\t                that._footer(that.footer);\n\t            }\n\n\t            id = element\n\t                    .addClass("k-widget k-calendar " + (options.weekNumber ? " k-week-number" : ""))\n\t                    .on(MOUSEENTER_WITH_NS + " " + MOUSELEAVE, CELLSELECTOR, mousetoggle)\n\t                    .on(KEYDOWN_NS, "table.k-content", proxy(that._move, that))\n\t                    .on(CLICK + " touchend", CELLSELECTOR, function(e) {\n\t                        var link = e.currentTarget.firstChild,\n\t                            value = toDateObject(link);\n\n\t                        if (link.href.indexOf("#") != -1) {\n\t                            e.preventDefault();\n\t                        }\n\n\t                        if (that._view.name == "month" && that.options.disableDates(value)) {\n\t                            return;\n\t                        }\n\t                        if(that._view.name != "month" || options.selectable == "single") {\n\t                             that._click($(link));\n\t                        }\n\t                    })\n\t                    .on("mouseup" + ns, "table.k-content, .k-footer", function() {\n\t                        that._focusView(that.options.focusOnNav !== false);\n\t                    })\n\t                    .attr(ID);\n\n\t            if (id) {\n\t                that._cellID = id + "_cell_selected";\n\t            }\n\n\t            if(that._isMultipleSelection() && that.options.weekNumber) {\n\t                element.on(CLICK, WEEKCOLUMNSELECTOR, function(e) {\n\t                        var first = $(e.currentTarget).closest("tr").find(CELLSELECTORVALID).first(),\n\t                            last = that.selectable._lastActive = $(e.currentTarget).closest("tr").find(CELLSELECTORVALID).last();\n\t                        that.selectable.selectRange(first, last, { event: e});\n\t                        that._current = that._value = toDateObject(last.find("a"));\n\t                        that._class(FOCUSED, that._current);\n\t                });\n\t            }\n\n\t            normalize(options);\n\t            value = parse(options.value, options.format, options.culture);\n\t            that._selectDates = [];\n\n\t            that._index = views[options.start];\n\n\t            that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n\t            that._addClassProxy = function() {\n\t                that._active = true;\n\n\t                if (that._cell.hasClass(DISABLED)) {\n\t                    var todayString = that._view.toDateString(getToday());\n\t                    that._cell = that._cellByDate(todayString);\n\t                }\n\n\t                that._cell.addClass(FOCUSED);\n\t            };\n\n\t            that._removeClassProxy = function() {\n\t                that._active = false;\n\t                that._cell.removeClass(FOCUSED);\n\t            };\n\n\t            that.value(value);\n\n\t            if(that._isMultipleSelection() && options.selectDates.length > 0) {\n\t                that.selectDates(options.selectDates);\n\t            }\n\t            kendo.notify(that);\n\t        },\n\n\t        options: {\n\t            name: "Calendar",\n\t            value: null,\n\t            min: new DATE(1900, 0, 1),\n\t            max: new DATE(2099, 11, 31),\n\t            dates: [],\n\t            disableDates: null,\n\t            url: "",\n\t            culture: "",\n\t            footer : "",\n\t            format : "",\n\t            month : {},\n\t            weekNumber: false,\n\t            selectable: "single",\n\t            selectDates: [],\n\t            start: MONTH,\n\t            depth: MONTH,\n\t            animation: {\n\t                horizontal: {\n\t                    effects: SLIDE,\n\t                    reverse: true,\n\t                    duration: 500,\n\t                    divisor: 2\n\t                },\n\t                vertical: {\n\t                    effects: "zoomIn",\n\t                    duration: 400\n\t                }\n\t            },\n\t            messages: {\n\t                weekColumnHeader: "",\n\t                today: "Today"\n\t            }\n\t        },\n\n\t        events: [\n\t            CHANGE,\n\t            NAVIGATE\n\t        ],\n\n\t        componentTypes: {\n\t            "classic": {\n\t                header: {\n\t                    template: CLASSIC_HEADER_TEMPLATE\n\t                },\n\t                hasFooter: true,\n\t                linksSelector: ".k-link",\n\t                contentClasses: "k-content"\n\t            },\n\t            "modern": {\n\t                header: {\n\t                    template: MODERN_HEADER_TEMPLATE\n\t                },\n\t                hasFooter: false,\n\t                linksSelector: ".k-button",\n\t                contentClasses: "k-content k-calendar-content"\n\t            }\n\t        },\n\n\t        setOptions: function(options) {\n\t            var that = this;\n\n\t            normalize(options);\n\n\t            options.disableDates = getDisabledExpr(options.disableDates);\n\t            that._destroySelectable();\n\n\t            Widget.fn.setOptions.call(that, options);\n\n\t            that._templates();\n\n\t            that._selectable();\n\n\t            that._viewWrapper();\n\n\t            if (that.options.hasFooter) {\n\t                that._footer(that.footer);\n\t            } else {\n\t                that.element.find(".k-footer").hide();\n\t            }\n\t            that._index = views[that.options.start];\n\n\t            that.navigate();\n\n\t            if(options.weekNumber) {\n\t                that.element.addClass(\'k-week-number\');\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            var that = this,\n\t            today = that._today;\n\n\t            that.element.off(ns);\n\t            that._title.off(ns);\n\t            that[PREVARROW].off(ns);\n\t            that[NEXTARROW].off(ns);\n\t            that._destroySelectable();\n\t            kendo.destroy(that._table);\n\n\t            if (today) {\n\t                kendo.destroy(today.off(ns));\n\t            }\n\n\t            Widget.fn.destroy.call(that);\n\t        },\n\n\t        current: function() {\n\t            return this._current;\n\t        },\n\n\t        view: function() {\n\t            return this._view;\n\t        },\n\n\t        focus: function(table) {\n\t            table = table || this._table;\n\t            this._bindTable(table);\n\t            table.trigger("focus");\n\t        },\n\n\t        min: function(value) {\n\t            return this._option(MIN, value);\n\t        },\n\n\t        max: function(value) {\n\t            return this._option("max", value);\n\t        },\n\n\t        navigateToPast: function() {\n\t            this._navigate(PREVARROW, -1);\n\t        },\n\n\t        navigateToFuture: function() {\n\t            this._navigate(NEXTARROW, 1);\n\t        },\n\n\t        navigateUp: function() {\n\t            var that = this,\n\t            index = that._index;\n\n\t            if (that._title.hasClass(DISABLED)) {\n\t                return;\n\t            }\n\n\t            that.navigate(that._current, ++index);\n\t        },\n\n\t        navigateDown: function(value) {\n\t            var that = this,\n\t            index = that._index,\n\t            depth = that.options.depth;\n\n\t            if (!value) {\n\t                return;\n\t            }\n\n\t            if (index === views[depth]) {\n\t                if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n\t                    that.value(value);\n\t                    that.trigger(CHANGE);\n\t                }\n\t                return;\n\t            }\n\n\t            that.navigate(value, --index);\n\t        },\n\n\t        navigate: function(value, view) {\n\t            view = isNaN(view) ? views[view] : view;\n\n\t            var that = this,\n\t                options = that.options,\n\t                culture = options.culture,\n\t                min = options.min,\n\t                max = options.max,\n\t                title = that._title,\n\t                from = that._table,\n\t                old = that._oldTable,\n\t                currentValue = that._current,\n\t                future = value && +value > +currentValue,\n\t                vertical = view !== undefined && view !== that._index,\n\t                to, currentView, compare,\n\t                disabled,\n\t                viewWrapper = that.element.children(".k-calendar-view");\n\n\t            if (!value) {\n\t                value = currentValue;\n\t            }\n\n\t            that._current = value = new DATE(+restrictValue(value, min, max));\n\n\t            if (view === undefined) {\n\t                view = that._index;\n\t            } else {\n\t                that._index = view;\n\t            }\n\n\t            that._view = currentView = calendar.views[view];\n\t            compare = currentView.compare;\n\n\t            disabled = view === views[CENTURY];\n\t            title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n\t            disabled = compare(value, min) < 1;\n\t            that[PREVARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\t            if (that[PREVARROW].hasClass(DISABLED)) {\n\t                that[PREVARROW].removeClass(HOVER);\n\t            }\n\n\t            disabled = compare(value, max) > -1;\n\t            that[NEXTARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\t            if (that[NEXTARROW].hasClass(DISABLED)) {\n\t                that[NEXTARROW].removeClass(HOVER);\n\t            }\n\n\t            if (from && old && old.data("animating")) {\n\t                old.kendoStop(true, true);\n\t                from.kendoStop(true, true);\n\t            }\n\n\t            that._oldTable = from;\n\n\t            if (!from || that._changeView) {\n\t                title.html(currentView.title(value, min, max, culture));\n\n\t                that._table = to = $(currentView.content(extend({\n\t                    min: min,\n\t                    max: max,\n\t                    date: value,\n\t                    url: options.url,\n\t                    dates: options.dates,\n\t                    format: options.format,\n\t                    otherMonth : true,\n\t                    culture: culture,\n\t                    disableDates: options.disableDates,\n\t                    isWeekColumnVisible: options.weekNumber,\n\t                    messages: options.messages,\n\t                    contentClasses: that.options.contentClasses\n\t                }, that[currentView.name])));\n\n\t                addClassToViewContainer(to, currentView.name);\n\t                makeUnselectable(to);\n\t                var replace = from && from.data("start") === to.data("start");\n\t                that._animate({\n\t                    from: from,\n\t                    to: to,\n\t                    vertical: vertical,\n\t                    future: future,\n\t                    replace: replace\n\t                });\n\n\t                if(that.options.componentType === "modern"){\n\t                    viewWrapper.removeClass("k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview");\n\t                    viewWrapper.addClass("k-calendar-" + currentView.name + "view");\n\t                }\n\n\t                that.trigger(NAVIGATE);\n\n\t                that._focus(value);\n\t            }\n\n\t            if (view === views[options.depth] && that._selectDates.length > 0) {\n\t                that._visualizeSelectedDatesInView();\n\t            }\n\n\t            if(that.options.selectable === "single") {\n\t                if (view === views[options.depth] && that._value && !that.options.disableDates(that._value)) {\n\t                    that._class("k-state-selected", that._value);\n\t                }\n\t            }\n\n\t            that._class(FOCUSED, value);\n\n\t            if (!from && that._cell) {\n\t                that._cell.removeClass(FOCUSED);\n\t            }\n\n\t            that._changeView = true;\n\t        },\n\n\t        selectDates: function(dates) {\n\t            var that = this,\n\t                validSelectedDates,\n\t                datesUnique;\n\n\t            if(dates === undefined) {\n\t                return that._selectDates;\n\t            }\n\n\t            datesUnique = dates\n\t                .map(function (date) { return date.getTime(); })\n\t                .filter(function (date, position, array) {\n\t                    return array.indexOf(date) === position;\n\t                })\n\t                .map(function (time) { return new Date(time); });\n\n\t            validSelectedDates = $.grep(datesUnique, function(value) {\n\t                if(value) {\n\t                    return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n\t                }\n\t            });\n\t            that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n\t            that._visualizeSelectedDatesInView();\n\t        },\n\n\t        value: function(value) {\n\t            var that = this,\n\t                old = that._view,\n\t                view = that._view;\n\n\t            if (value === undefined) {\n\t                return that._value;\n\t            }\n\n\t            value = that._validateValue(value);\n\t            if (value && that._isMultipleSelection()) {\n\t                var date = new Date(+value);\n\t                date.setHours(0, 0, 0, 0);\n\t                that._selectDates = [date];\n\t                that.selectable._lastActive = null;\n\t            }\n\t            if (old && value === null && that._cell) {\n\t                that._cell.removeClass(SELECTED);\n\t            } else {\n\t                that._changeView = !value || view && view.compare(value, that._current) !== 0;\n\t                that.navigate(value);\n\t            }\n\t        },\n\n\t        _validateValue: function(value) {\n\t            var that = this,\n\t                options = that.options,\n\t                min = options.min,\n\t                max = options.max;\n\n\t            if (value === null) {\n\t                that._current = createDate(that._current.getFullYear(), that._current.getMonth(), that._current.getDate());\n\t            }\n\n\t            value = parse(value, options.format, options.culture);\n\n\t            if (value !== null) {\n\t                value = new DATE(+value);\n\n\t                if (!isInRange(value, min, max)) {\n\t                    value = null;\n\t                }\n\t            }\n\n\t            if (value === null || !that.options.disableDates(new Date(+value))) {\n\t                that._value = value;\n\t            } else if (that._value === undefined) {\n\t                that._value = null;\n\t            }\n\n\t            return that._value;\n\t        },\n\n\t        _visualizeSelectedDatesInView: function() {\n\t            var that = this;\n\t             var selectedDates = {};\n\t            $.each(that._selectDates, function(index, value) {\n\t                selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n\t            });\n\t            that.selectable.clear();\n\t             var cells = that._table\n\t                .find(CELLSELECTOR)\n\t                .filter(function(index, element) {\n\t                    return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n\t                });\n\t            if(cells.length > 0) {\n\t                that.selectable._selectElement(cells, true);\n\t            }\n\t        },\n\n\t        _isMultipleSelection: function() {\n\t            var that = this;\n\t            return that.options.selectable === "multiple";\n\t        },\n\n\t        _selectable: function() {\n\t            var that = this;\n\t            if(!that._isMultipleSelection()) {\n\t                return;\n\t            }\n\n\t            var selectable = that.options.selectable,\n\t            selectableOptions = Selectable.parseOptions(selectable);\n\n\t            if (selectableOptions.multiple) {\n\t                that.element.attr("aria-multiselectable", "true");\n\t            }\n\t            that.selectable = new Selectable(that.wrapper, {\n\t                aria: true,\n\t                //excludes the anchor element\n\t                inputSelectors: "input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-arrow-60-down,span.k-icon.k-i-arrow-60-up",\n\t                multiple: selectableOptions.multiple,\n\t                filter: "table.k-month:eq(0) " + CELLSELECTORVALID,\n\t                change: proxy(that._onSelect, that),\n\t                relatedTarget: proxy(that._onRelatedTarget, that)\n\t            });\n\t        },\n\n\t        _onRelatedTarget: function(target) {\n\t            var that = this;\n\n\t            if(that.selectable.options.multiple && target.is(CELLSELECTORVALID)) {\n\t                that._current = toDateObject(target.find("a"));\n\t                that._class(FOCUSED, toDateObject(target.find("a")));\n\t            }\n\n\t        },\n\n\t        _onSelect: function(e) {\n\t            var that = this,\n\t                eventArgs = e,\n\t                selectableOptions = Selectable.parseOptions(that.options.selectable);\n\n\t            if(!selectableOptions.multiple) {\n\t                if($(eventArgs.event.currentTarget).is("td") && !$(eventArgs.event.currentTarget).hasClass("k-state-selected")) {\n\t                    $(eventArgs.event.currentTarget).addClass("k-state-selected");\n\t                }\n\t                else {\n\t                    that._click($(eventArgs.event.currentTarget).find("a"));\n\t                }\n\t                return;\n\t            }\n\n\t            if(eventArgs.event.ctrlKey || eventArgs.event.metaKey) {\n\t                if($(eventArgs.event.currentTarget).is(CELLSELECTORVALID)) {\n\t                    that._toggleSelection($(eventArgs.event.currentTarget));\n\t                }\n\t                else {\n\t                    that._cellsBySelector(CELLSELECTORVALID).each(function(index, element){\n\t                        var value = toDateObject($(element).find("a"));\n\t                        that._deselect(value);\n\t                    });\n\t                    that._addSelectedCellsToArray();\n\t                }\n\t            }\n\t            else if (eventArgs.event.shiftKey) {\n\t                that._rangeSelection(that._cell);\n\t            }\n\t            else if($(eventArgs.event.currentTarget).is(CELLSELECTOR)) {\n\t                that.value(toDateObject($(eventArgs.event.currentTarget).find("a")));\n\t            }\n\t            else {\n\t                that._selectDates = [];\n\t                that._addSelectedCellsToArray();\n\t            }\n\t             that.trigger(CHANGE);\n\t        },\n\n\t        _destroySelectable: function() {\n\t            var that = this;\n\n\t            if (that.selectable) {\n\t                that.selectable.destroy();\n\t                that.selectable = null;\n\t            }\n\t        },\n\n\t        //when ctrl key is clicked\n\t        _toggleSelection: function(currentCell) {\n\t            var that = this,\n\t                date = toDateObject(currentCell.find("a"));\n\t                if(currentCell.hasClass("k-state-selected")) {\n\t                    that._selectDates.push(date);\n\t                }\n\t                else {\n\t                    that._deselect(date);\n\t                }\n\t        },\n\n\t        //shift selection\n\t        _rangeSelection: function(toDateCell, startDate) {\n\t            var that = this,\n\t                fromDate  = startDate || toDateObject(that.selectable.value().first().find("a")),\n\t                toDate = toDateObject(toDateCell.find("a")),\n\t                daysDifference;\n\n\t            if(that.selectable._lastActive || that._value) {\n\t                fromDate = that.selectable._lastActive? toDateObject(that.selectable._lastActive.find("a")): new Date(+that._value);\n\t            } else {\n\t                that.selectable._lastActive = startDate? that._cellByDate(that._view.toDateString(startDate), CELLSELECTORVALID): that.selectable.value().first();\n\t            }\n\n\t            that._selectDates = [];\n\t            daysDifference = daysBetweenTwoDates(fromDate, toDate);\n\t            addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n\t            that._visualizeSelectedDatesInView();\n\t        },\n\n\t        _cellsBySelector: function(selector) {\n\t            var that = this;\n\t            return that._table.find(selector);\n\t        },\n\n\t        _addSelectedCellsToArray: function() {\n\t            var that = this;\n\t            that.selectable.value().each(function(index, item) {\n\t                var date = toDateObject($(item.firstChild));\n\t                if(!that.options.disableDates(date)) {\n\t                    that._selectDates.push(date);\n\t                }\n\t            });\n\t        },\n\n\t         _deselect: function(date) {\n\t            var that = this;\n\t             var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n\t            if(currentDateIndex != -1) {\n\t                that._selectDates.splice(currentDateIndex, 1);\n\t            }\n\t        },\n\n\t        _dateInView: function(date) {\n\t            var that = this,\n\t                firstDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID + ":first").find("a")),\n\t                lastDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID + ":last").find("a"));\n\n\t            return +date <= +lastDateInView && +date >= +firstDateInView;\n\t        },\n\n\t        _isNavigatable: function(currentValue, cellIndex) {\n\t            var that = this;\n\t            var isDisabled = that.options.disableDates;\n\t            var cell;\n\t            var index;\n\n\t            if (that._view.name == "month") {\n\t                return !isDisabled(currentValue);\n\t            } else {\n\t                index = that.wrapper.find("."+FOCUSED).index();\n\t                cell = that.wrapper.find(".k-content td:eq("+(index+cellIndex)+")");\n\t                return cell.is(CELLSELECTORVALID) || !isDisabled(currentValue);\n\t            }\n\t        },\n\n\t        _move: function(e) {\n\t            var that = this,\n\t                options = that.options,\n\t                key = e.keyCode,\n\t                view = that._view,\n\t                index = that._index,\n\t                min = that.options.min,\n\t                max = that.options.max,\n\t                currentValue = new DATE(+that._current),\n\t                isRtl = kendo.support.isRtl(that.wrapper),\n\t                isDisabled = that.options.disableDates,\n\t                value, prevent, method, temp;\n\n\t            if (e.target === that._table[0]) {\n\t                that._active = true;\n\t            }\n\n\t            if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n\t                value = 1;\n\t                prevent = true;\n\t            } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n\t                value = -1;\n\t                prevent = true;\n\t            } else if (key == keys.UP) {\n\t                value = index === 0 ? -7 : -4;\n\t                prevent = true;\n\t            } else if (key == keys.DOWN) {\n\t                value = index === 0 ? 7 : 4;\n\t                prevent = true;\n\t            }\n\t            else if(key == keys.SPACEBAR) {\n\t                value = 0;\n\t                prevent = true;\n\t            }\n\t            else if (key == keys.HOME || key == keys.END) {\n\t                method = key == keys.HOME ? "first" : "last";\n\t                temp = view[method](currentValue);\n\t                currentValue = new DATE(temp.getFullYear(), temp.getMonth(), temp.getDate(), currentValue.getHours(), currentValue.getMinutes(), currentValue.getSeconds(), currentValue.getMilliseconds());\n\t                currentValue.setFullYear(temp.getFullYear());\n\t                prevent = true;\n\t            }\n\n\t            if (e.ctrlKey || e.metaKey) {\n\t                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n\t                    that.navigateToFuture();\n\t                    prevent = true;\n\t                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n\t                    that.navigateToPast();\n\t                    prevent = true;\n\t                } else if (key == keys.UP) {\n\t                    that.navigateUp();\n\t                    prevent = true;\n\t                } else if (key == keys.DOWN) {\n\t                    that._click($(that._cell[0].firstChild));\n\t                    prevent = true;\n\t                }\n\t                  else if ((key == keys.ENTER || key == keys.SPACEBAR) && that._isMultipleSelection()) {\n\t                    that._keyboardToggleSelection(e);\n\n\t                    var focusedDate = toDateObject($(that._cell[0]).find("a"));\n\t                    that._class(FOCUSED, focusedDate);\n\n\t                }\n\t            } else if(e.shiftKey) {\n\t                if (value !== undefined || method) {\n\t                    if (!method) {\n\t                        view.setDate(currentValue, value);\n\t                    }\n\n\t                    if (!isInRange(currentValue, min, max)) {\n\t                        currentValue = restrictValue(currentValue, options.min, options.max);\n\t                    }\n\n\t                    if (isDisabled(currentValue)) {\n\t                        currentValue = that._nextNavigatable(currentValue, value);\n\t                    }\n\n\t                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\t                    if(that._isMultipleSelection()) {\n\t                        that._keyboardRangeSelection(e, currentValue);\n\t                    }\n\t                    else {\n\t                        that._focus(currentValue);\n\t                    }\n\t                }\n\t            } else {\n\t                if (key == keys.ENTER || key == keys.SPACEBAR) {\n\t                    if(view.name == "month" && that._isMultipleSelection()) {\n\t                        that.value(toDateObject($(that._cell.find("a"))));\n\t                        that.selectable._lastActive = $(that._cell[0]);\n\t                        that.trigger(CHANGE);\n\t                    }\n\t                    else {\n\t                        that._click($(that._cell[0].firstChild));\n\t                    }\n\t                    prevent = true;\n\t                } else if (key == keys.PAGEUP) {\n\t                    prevent = true;\n\t                    that.navigateToPast();\n\t                } else if (key == keys.PAGEDOWN) {\n\t                    prevent = true;\n\t                    that.navigateToFuture();\n\t                }\n\n\t                if (value || method) {\n\t                    if (!method) {\n\t                        view.setDate(currentValue, value);\n\t                    }\n\n\t                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n\t                    if (!isInRange(currentValue, min, max)) {\n\t                        currentValue = restrictValue(currentValue, options.min, options.max);\n\t                    }\n\n\t                    if (!that._isNavigatable(currentValue, value)) {\n\t                        currentValue = that._nextNavigatable(currentValue, value);\n\t                    }\n\n\t                    if(that._isMultipleSelection()) {\n\t                        if(!that._dateInView(currentValue)) {\n\t                            that.navigate(currentValue);\n\t                        }\n\t                        else {\n\t                            that._current = currentValue;\n\t                            that._class(FOCUSED, currentValue);\n\t                        }\n\t                    }\n\t                    else {\n\t                        that._focus(currentValue);\n\t                    }\n\t                }\n\t            }\n\n\t            if (prevent) {\n\t                e.preventDefault();\n\t            }\n\n\t            return that._current;\n\t        },\n\n\t        _keyboardRangeSelection: function(event, currentValue) {\n\t            var that = this,\n\t                fromDate,\n\t                daysDifference;\n\n\t            if(!that._dateInView(currentValue)) {\n\t                that._selectDates = [];\n\n\t                fromDate = that.selectable._lastActive? toDateObject(that.selectable._lastActive.find("a")): currentValue;\n\t                daysDifference = daysBetweenTwoDates(fromDate, new Date(+currentValue));\n\n\t                addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n\t                that.navigate(currentValue);\n\t                that._current = currentValue;\n\t                that.selectable._lastActive = that.selectable._lastActive || that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID);\n\t                that.trigger(CHANGE);\n\t                return;\n\t            }\n\t            that.selectable.options.filter = that.wrapper.find("table").length > 1 && +currentValue > +that._current? "table.k-month:eq(1) " + CELLSELECTORVALID: "table.k-month:eq(0) " + CELLSELECTORVALID;\n\t            that._class(FOCUSED, currentValue);\n\t            that._current = currentValue;\n\n\t            that._rangeSelection(that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID), currentValue);\n\n\t            that.trigger(CHANGE);\n\n\t            that.selectable.options.filter = "table.k-month:eq(0) " + CELLSELECTORVALID;\n\t        },\n\n\t        _keyboardToggleSelection: function(event) {\n\t            var that = this;\n\n\t            event.currentTarget = that._cell[0];\n\t            that.selectable._lastActive = $(that._cell[0]);\n\n\t            if ($(that._cell[0]).hasClass(SELECTED)) {\n\t                that.selectable._unselect($(that._cell[0]));\n\t                that.selectable.trigger(CHANGE, { event: event});\n\t            }\n\t            else {\n\t                that.selectable.value($(that._cell[0]), { event: event});\n\t            }\n\t        },\n\n\t        _nextNavigatable: function(currentValue, value) {\n\t            var that = this,\n\t            disabled = true,\n\t            view = that._view,\n\t            min = that.options.min,\n\t            max = that.options.max,\n\t            isDisabled = that.options.disableDates,\n\t            navigatableDate = new Date(currentValue.getTime());\n\n\t            view.setDate(navigatableDate, -value);\n\n\t            while (disabled) {\n\t                view.setDate(currentValue, value);\n\n\t                if (!isInRange(currentValue, min, max)) {\n\t                    currentValue = navigatableDate;\n\t                    break;\n\t                }\n\t                disabled = isDisabled(currentValue);\n\t            }\n\t            return currentValue;\n\t        },\n\n\t        _animate: function(options) {\n\t            var that = this;\n\t            var from = options.from;\n\t            var to = options.to;\n\t            var active = that._active;\n\t            var viewWrapper = that.element.children(".k-calendar-view");\n\n\t            if (!from) {\n\t                viewWrapper.append(to);\n\t                that._bindTable(to);\n\t            } else if (from.parent().data("animating")) {\n\t                from.off(ns);\n\t                from.parent().kendoStop(true, true).remove();\n\t                from.remove();\n\n\t                viewWrapper.append(to);\n\t                that._focusView(active);\n\t            } else if (!from.is(":visible") || that.options.animation === false || options.replace) {\n\t                to.insertAfter(from);\n\t                from.off(ns).remove();\n\n\t                that._focusView(active);\n\t            } else {\n\t                that[options.vertical ? "_vertical" : "_horizontal"](from, to, options.future);\n\t            }\n\t        },\n\n\t        _horizontal: function(from, to, future) {\n\t            var that = this,\n\t                active = that._active,\n\t                horizontal = that.options.animation.horizontal,\n\t                effects = horizontal.effects,\n\t                viewWidth = outerWidth(from);\n\n\t            if (effects && effects.indexOf(SLIDE) != -1) {\n\t                from.add(to).css({ width: viewWidth });\n\n\t                from.wrap("<div/>");\n\n\t                that._focusView(active, from);\n\n\t                from.parent()\n\t                .css({\n\t                    position: "relative",\n\t                    width: viewWidth * 2,\n\t                    "float": LEFT,\n\t                    "margin-left": future ? 0 : -viewWidth\n\t                });\n\n\t                to[future ? "insertAfter" : "insertBefore"](from);\n\n\t                extend(horizontal, {\n\t                    effects: SLIDE + ":" + (future ? "right" : LEFT),\n\t                    complete: function() {\n\t                        from.off(ns).remove();\n\t                        that._oldTable = null;\n\n\t                        to.unwrap();\n\n\t                        that._focusView(active);\n\n\t                    }\n\t                });\n\n\t                from.parent().kendoStop(true, true).kendoAnimate(horizontal);\n\t            }\n\t        },\n\n\t        _vertical: function(from, to) {\n\t            var that = this,\n\t                vertical = that.options.animation.vertical,\n\t                effects = vertical.effects,\n\t                active = that._active, //active state before from\'s blur\n\t                cell, position;\n\n\t            if (effects && effects.indexOf("zoom") != -1) {\n\t                to.insertBefore(from);\n\n\t                from.css({\n\t                    position: "absolute",\n\t                    width: to.width()\n\t                });\n\n\t                if (transitionOrigin) {\n\t                    cell = that._cellByDate(that._view.toDateString(that._current));\n\t                    position = cell.position();\n\t                    position = (position.left + parseInt(cell.width() / 2, 10)) + "px" + " " + (position.top + parseInt(cell.height() / 2, 10) + "px");\n\t                    to.css(transitionOrigin, position);\n\t                }\n\n\t                from.kendoStop(true, true).kendoAnimate({\n\t                    effects: "fadeOut",\n\t                    duration: 600,\n\t                    complete: function() {\n\t                        from.off(ns).remove();\n\t                        that._oldTable = null;\n\n\t                        that._focusView(active);\n\t                    }\n\t                });\n\n\t                to.kendoStop(true, true).kendoAnimate(vertical);\n\t            }\n\t        },\n\n\t        _cellByDate: function(value, selector) {\n\t            return this._table.find(selector ? selector : "td:not(." + OTHERMONTH + ")")\n\t            .filter(function() {\n\t                return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n\t            });\n\t        },\n\n\t        _class: function(className, date) {\n\t            var that = this,\n\t                id = that._cellID,\n\t                cell = that._cell,\n\t                value = that._view.toDateString(date),\n\t                disabledDate;\n\n\t            if (cell && cell.length) {\n\t                cell[0].removeAttribute(ARIA_SELECTED);\n\t                cell[0].removeAttribute(ARIA_LABEL);\n\t                cell[0].removeAttribute(ID);\n\t                //.removeClass(className);\n\t            }\n\n\t            if (date && that._view.name == "month") {\n\t                disabledDate = that.options.disableDates(date);\n\t            }\n\t            that._cellsBySelector(that._isMultipleSelection() ? CELLSELECTOR: "td:not(." + OTHERMONTH + ")").removeClass(className);\n\t            cell = that._cellByDate(value, that.options.selectable == "multiple" ? CELLSELECTOR: "td:not(." + OTHERMONTH + ")")\n\t            .attr(ARIA_SELECTED, true);\n\n\t            if (className === FOCUSED && !that._active && that.options.focusOnNav !== false || disabledDate) {\n\t                className = "";\n\t            }\n\n\t            cell.addClass(className);\n\n\t            if (cell[0]) {\n\t                that._cell = cell;\n\t            }\n\n\t            if (id) {\n\t                cell.attr(ID, id);\n\t                that._table[0].removeAttribute("aria-activedescendant");\n\t                that._table.attr("aria-activedescendant", id);\n\t            }\n\t        },\n\n\t        _bindTable: function (table) {\n\t            table\n\t            .on(FOCUS_WITH_NS, this._addClassProxy)\n\t            .on(BLUR, this._removeClassProxy);\n\t        },\n\n\t        _click: function(link) {\n\t            var that = this,\n\t            options = that.options,\n\t            currentValue = new Date(+that._current),\n\t            value = toDateObject(link);\n\n\t            adjustDST(value, 0);\n\n\t            if (that._view.name == "month" && that.options.disableDates(value)) {\n\t                value = that._value;\n\t            }\n\n\t            that._view.setDate(currentValue, value);\n\n\t            that.navigateDown(restrictValue(currentValue, options.min, options.max));\n\t        },\n\n\t        _focus: function(value) {\n\t            var that = this,\n\t            view = that._view;\n\n\t            if (view.compare(value, that._current) !== 0) {\n\t                that.navigate(value);\n\t            } else {\n\t                that._current = value;\n\t                that._class(FOCUSED, value);\n\t            }\n\t        },\n\n\t        _focusView: function(active, table) {\n\t            if (active) {\n\t                this.focus(table);\n\t            }\n\t        },\n\n\t        _viewWrapper: function() {\n\t            var that = this;\n\t            var element = that.element;\n\t            var viewWrapper = element.children(".k-calendar-view");\n\n\t            if (!viewWrapper[0]) {\n\t                viewWrapper = $("<div class=\'k-calendar-view\' />").insertAfter(element.find(HEADERSELECTOR));\n\t            }\n\t        },\n\n\t        _footer: function(template) {\n\t            var that = this,\n\t            today = getToday(),\n\t            element = that.element,\n\t            footer = element.find(".k-footer");\n\n\t            if (!template) {\n\t                that._toggle(false);\n\t                footer.hide();\n\t                return;\n\t            }\n\n\t            if (!footer[0]) {\n\t                footer = $(\'<div class="k-footer"><a href="#" class="k-link k-nav-today"></a></div>\').appendTo(element);\n\t            }\n\n\t            that._today = footer.show()\n\t            .find(".k-link")\n\t            .html(template(today))\n\t            .attr("title", kendo.toString(today, "D", that.options.culture));\n\n\t            that._toggle();\n\t        },\n\n\t        _header: function() {\n\t            var that = this,\n\t            element = that.element,\n\t            linksSelector = that.options.linksSelector;\n\n\t            if (!element.find(HEADERSELECTOR)[0]) {\n\t                element.html(kendo.template(that.options.header.template)(that.options));\n\t            }\n\n\t            element.find(linksSelector)\n\t            .on(MOUSEENTER_WITH_NS + " " + MOUSELEAVE + " " + FOCUS_WITH_NS + " " + BLUR, mousetoggle)\n\t            .on(CLICK + " touchend" + ns, function() { return false; } );\n\n\t            that._title = element.find(\'[\' + kendo.attr("action") + \'="nav-up"]\').on(CLICK + " touchend" + ns, function () {\n\t                that._active = that.options.focusOnNav !== false;\n\t                that.navigateUp();\n\t            });\n\t            that[PREVARROW] = element.find(\'[\' + kendo.attr("action") + \'="prev"]\').on(CLICK + " touchend" + ns, function () {\n\t                that._active = that.options.focusOnNav !== false;\n\t                that.navigateToPast();\n\t            });\n\t            that[NEXTARROW] = element.find(\'[\' + kendo.attr("action") + \'="next"]\').on(CLICK + " touchend" + ns, function () {\n\t                that._active = that.options.focusOnNav !== false;\n\t                that.navigateToFuture();\n\t            });\n\t            element.find(\'[\' + kendo.attr("action") + \'="today"]\').on(CLICK + " touchend" + ns, proxy(that._todayClick, that));\n\n\t        },\n\n\t        _navigate: function(arrow, modifier) {\n\t            var that = this,\n\t            index = that._index + 1,\n\t            currentValue = new DATE(+that._current);\n\n\t            if (that._isMultipleSelection()) {\n\t                var firstDayCurrentMonth = that._table.find("td:not(.k-other-month):not(.k-out-of-range)").has(".k-link").first();\n\t                currentValue = toDateObject(firstDayCurrentMonth.find("a"));\n\t                that._current = new Date(+currentValue);\n\t            }\n\n\t            arrow = that[arrow];\n\n\t            if (!arrow.hasClass(DISABLED)) {\n\t                if (index > 3) {\n\t                    currentValue.setFullYear(currentValue.getFullYear() + 100 * modifier);\n\t                } else {\n\t                    calendar.views[index].setDate(currentValue, modifier);\n\t                }\n\n\t                that.navigate(currentValue);\n\t            }\n\t        },\n\n\t        _option: function(option, value) {\n\t            var that = this,\n\t                options = that.options,\n\t                currentValue = that._value || that._current,\n\t                isBigger;\n\n\t            if (value === undefined) {\n\t                return options[option];\n\t            }\n\n\t            value = parse(value, options.format, options.culture);\n\n\t            if (!value) {\n\t                return;\n\t            }\n\n\t            options[option] = new DATE(+value);\n\n\t            if (option === MIN) {\n\t                isBigger = value > currentValue;\n\t            } else {\n\t                isBigger = currentValue > value;\n\t            }\n\n\t            if (isBigger || isEqualMonth(currentValue, value)) {\n\t                if (isBigger) {\n\t                    that._value = null;\n\t                }\n\t                that._changeView = true;\n\t            }\n\n\t            if (!that._changeView) {\n\t                that._changeView = !!(options.month.content || options.month.empty);\n\t            }\n\n\t            that.navigate(that._value);\n\n\t            that._toggle();\n\t        },\n\n\t        _toggle: function(toggle) {\n\t            var that = this,\n\t                options = that.options,\n\t                isTodayDisabled = that.options.disableDates(getToday()),\n\t                link = that._today;\n\n\t            if (toggle === undefined) {\n\t                toggle = isInRange(getToday(), options.min, options.max);\n\t            }\n\n\t            if (link) {\n\t                link.off(CLICK);\n\n\t                if (toggle && !isTodayDisabled) {\n\t                    link.addClass(TODAY)\n\t                    .removeClass(DISABLED)\n\t                    .on(CLICK, proxy(that._todayClick, that));\n\t                } else {\n\t                    link.removeClass(TODAY)\n\t                    .addClass(DISABLED)\n\t                    .on(CLICK, prevent);\n\t                }\n\t            }\n\t        },\n\n\t        _todayClick: function(e) {\n\t            var that = this,\n\t            depth = views[that.options.depth],\n\t            disabled = that.options.disableDates,\n\t            today = getToday();\n\n\t            e.preventDefault();\n\n\t            if (disabled(today)) {\n\t                return;\n\t            }\n\n\t            if (that._view.compare(that._current, today) === 0 && that._index == depth) {\n\t                that._changeView = false;\n\t            }\n\n\t            if(that._isMultipleSelection()) {\n\t                that._selectDates = [today];\n\t                that.selectable._lastActive = null;\n\t            }\n\n\t            that._value = today;\n\t            that.navigate(today, depth);\n\n\t            that.trigger(CHANGE);\n\t        },\n\n\t        _templates: function() {\n\t            var that = this,\n\t                options = that.options,\n\t                footer = options.footer,\n\t                month = options.month,\n\t                content = month.content,\n\t                weekNumber = month.weekNumber,\n\t                empty = month.empty,\n\t                footerTemplate = \'#= kendo.toString(data,"D","\' + options.culture +\'") #\';\n\n\t            that.month = {\n\t                content: template(\'<td#=data.cssClass# role="gridcell"><a tabindex="-1" class="k-link#=data.linkClass#" href="#=data.url#" \' + kendo.attr(VALUE) + \'="#=data.dateString#" title="#=data.title#">\' + (content || "#=data.value#") + \'</a></td>\', { useWithBlock: !!content }),\n\t                empty: template(\'<td role="gridcell">\' + (empty || "&nbsp;") + "</td>", { useWithBlock: !!empty }),\n\t                weekNumber: template(\'<td class="k-alt">\' + (weekNumber || "#= data.weekNumber #") + "</td>", { useWithBlock: !!weekNumber })\n\t            };\n\n\t            if (footer && footer !== true) {\n\t                footerTemplate = footer;\n\t            }\n\n\t            that.footer = footer !== false ? template(footerTemplate, { useWithBlock: false }) : null;\n\t        }\n\t    });\n\n\t    ui.plugin(Calendar);\n\n\t    var calendar = {\n\t        firstDayOfMonth: function (date) {\n\t            return createDate(\n\t                date.getFullYear(),\n\t                date.getMonth(),\n\t                1\n\t            );\n\t        },\n\n\t        firstVisibleDay: function (date, calendarInfo) {\n\t            calendarInfo = calendarInfo || kendo.culture().calendar;\n\n\t            var firstDay = calendarInfo.firstDay,\n\t            firstVisibleDay = new DATE(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n\t            firstVisibleDay.setFullYear(date.getFullYear());\n\n\t            while (firstVisibleDay.getDay() != firstDay) {\n\t                calendar.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n\t            }\n\n\t            return firstVisibleDay;\n\t        },\n\n\t        setTime: function (date, time) {\n\t            var tzOffsetBefore = date.getTimezoneOffset(),\n\t            resultDATE = new DATE(date.getTime() + time),\n\t            tzOffsetDiff = resultDATE.getTimezoneOffset() - tzOffsetBefore;\n\n\t            date.setTime(resultDATE.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n\t        },\n\t        views: [{\n\t            name: MONTH,\n\t            title: function(date, min, max, culture) {\n\t                return getCalendarInfo(culture).months.names[date.getMonth()] + " " + date.getFullYear();\n\t            },\n\t            content: function(options) {\n\t                var that = this,\n\t                idx = 0,\n\t                min = options.min,\n\t                max = options.max,\n\t                date = options.date,\n\t                dates = options.dates,\n\t                format = options.format,\n\t                culture = options.culture,\n\t                navigateUrl = options.url,\n\t                showHeader = options.showHeader,\n\t                otherMonth = options.otherMonth,\n\t                isWeekColumnVisible = options.isWeekColumnVisible,\n\t                hasUrl = navigateUrl && dates[0],\n\t                currentCalendar = getCalendarInfo(culture),\n\t                firstDayIdx = currentCalendar.firstDay,\n\t                days = currentCalendar.days,\n\t                names = shiftArray(days.names, firstDayIdx),\n\t                shortNames = shiftArray(days.namesShort, firstDayIdx),\n\t                start = calendar.firstVisibleDay(date, currentCalendar),\n\t                firstDayOfMonth = that.first(date),\n\t                lastDayOfMonth = that.last(date),\n\t                toDateString = that.toDateString,\n\t                today = getToday(),\n\t                contentClasses = options.contentClasses,\n\t                html = \'<table tabindex="0" role="grid" class="\' + contentClasses + \'" cellspacing="0" data-start="\' + toDateString(start) + \'">\';\n\t                if (showHeader) {\n\t                    html += \'<caption class="k-month-header">\' + this.title(date, min, max, culture) + \'</caption><thead><tr role="row">\';\n\t                } else {\n\t                    html += \'<thead><tr role="row">\';\n\t                }\n\t                if (isWeekColumnVisible) {\n\t                    html += \'<th scope="col" class="k-alt">\' + options.messages.weekColumnHeader + \'</th>\';\n\t                }\n\n\t                for (; idx < 7; idx++) {\n\t                    html += \'<th scope="col" title="\' + names[idx] + \'">\' + shortNames[idx] + \'</th>\';\n\t                }\n\n\t                adjustDST(today, 0);\n\t                today = +today;\n\n\t                return view({\n\t                    cells: 42,\n\t                    perRow: 7,\n\t                    html: html += \'</tr></thead><tbody><tr role="row">\',\n\t                    start: start,\n\t                    isWeekColumnVisible: isWeekColumnVisible,\n\t                    weekNumber: options.weekNumber,\n\t                    min: createDate(min.getFullYear(), min.getMonth(), min.getDate()),\n\t                    max: createDate(max.getFullYear(), max.getMonth(), max.getDate()),\n\t                    otherMonth : otherMonth,\n\t                    content: options.content,\n\t                    lastDayOfMonth : lastDayOfMonth,\n\t                    empty: options.empty,\n\t                    setter: that.setDate,\n\t                    disableDates: options.disableDates,\n\t                    build: function(date, idx, disableDates) {\n\t                        var cssClass = [],\n\t                        day = date.getDay(),\n\t                        linkClass = "",\n\t                        url = "#";\n\n\t                        if (date < firstDayOfMonth || date > lastDayOfMonth) {\n\t                            cssClass.push(OTHERMONTH);\n\t                        }\n\n\t                        if (disableDates(date)) {\n\t                            cssClass.push(DISABLED);\n\t                        }\n\n\t                        if (+date === today) {\n\t                            cssClass.push("k-today");\n\t                        }\n\n\t                        if (day === 0 || day === 6) {\n\t                            cssClass.push("k-weekend");\n\t                        }\n\n\t                        if (hasUrl && inArray(+date, dates)) {\n\t                            url = navigateUrl.replace("{0}", kendo.toString(date, format, culture));\n\t                            linkClass = " k-action-link";\n\t                        }\n\n\t                        return {\n\t                            date: date,\n\t                            dates: dates,\n\t                            ns: kendo.ns,\n\t                            title: kendo.toString(date, "D", culture),\n\t                            value: date.getDate(),\n\t                            dateString: toDateString(date),\n\t                            cssClass: cssClass[0] ? \' class="\' + cssClass.join(" ") + \'"\' : "",\n\t                            linkClass: linkClass,\n\t                            url: url\n\t                        };\n\t                    },\n\t                    weekNumberBuild: function(date) {\n\t                        return {\n\t                            weekNumber: weekInYear(date, kendo.culture().calendar.firstDay),\n\t                            currentDate: date\n\t                        };\n\t                    }\n\t                });\n\t            },\n\t            first: function(date) {\n\t                return calendar.firstDayOfMonth(date);\n\t            },\n\t            last: function(date) {\n\t                var last = createDate(date.getFullYear(), date.getMonth() + 1, 0),\n\t                first = calendar.firstDayOfMonth(date),\n\t                timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n\t                if (timeOffset) {\n\t                    last.setHours(first.getHours() + (timeOffset / 60));\n\t                }\n\n\t                return last;\n\t            },\n\t            compare: function(date1, date2) {\n\t                var result,\n\t                month1 = date1.getMonth(),\n\t                year1 = date1.getFullYear(),\n\t                month2 = date2.getMonth(),\n\t                year2 = date2.getFullYear();\n\n\t                if (year1 > year2) {\n\t                    result = 1;\n\t                } else if (year1 < year2) {\n\t                    result = -1;\n\t                } else {\n\t                    result = month1 == month2 ? 0 : month1 > month2 ? 1 : -1;\n\t                }\n\n\t                return result;\n\t            },\n\t            setDate: function(date, value) {\n\t                var hours = date.getHours();\n\t                if (value instanceof DATE) {\n\t                    date.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\t                } else {\n\t                    calendar.setTime(date, value * MS_PER_DAY);\n\t                }\n\t                adjustDST(date, hours);\n\t            },\n\t            toDateString: function(date) {\n\t                return date.getFullYear() + "/" + date.getMonth() + "/" + date.getDate();\n\t            }\n\t        },\n\t        {\n\t            name: "year",\n\t            title: function(date) {\n\t                return date.getFullYear();\n\t            },\n\t            content: function(options) {\n\t                var namesAbbr = getCalendarInfo(options.culture).months.namesAbbr,\n\t                toDateString = this.toDateString,\n\t                min = options.min,\n\t                max = options.max,\n\t                html = "";\n\n\t                if (options.showHeader) {\n\t                    html += \'<table tabindex="0" role="grid" class="k-content k-meta-view" cellspacing="0"><caption class="k-meta-header">\';\n\t                    html += this.title(options.date);\n\t                    html += \'</caption><tbody><tr role="row">\';\n\t                }\n\n\t                return view({\n\t                    min: createDate(min.getFullYear(), min.getMonth(), 1),\n\t                    max: createDate(max.getFullYear(), max.getMonth(), 1),\n\t                    start: createDate(options.date.getFullYear(), 0, 1),\n\t                    html: html,\n\t                    setter: this.setDate,\n\t                    build: function(date) {\n\t                        return {\n\t                            value: namesAbbr[date.getMonth()],\n\t                            ns: kendo.ns,\n\t                            dateString: toDateString(date),\n\t                            cssClass: ""\n\t                        };\n\t                    }\n\t                });\n\t            },\n\t            first: function(date) {\n\t                return createDate(date.getFullYear(), 0, date.getDate());\n\t            },\n\t            last: function(date) {\n\t                return createDate(date.getFullYear(), 11, date.getDate());\n\t            },\n\t            compare: function(date1, date2){\n\t                return compare(date1, date2);\n\t            },\n\t            setDate: function(date, value) {\n\t                var month,\n\t                hours = date.getHours();\n\n\t                if (value instanceof DATE) {\n\t                    month = value.getMonth();\n\n\t                    date.setFullYear(value.getFullYear(), month, date.getDate());\n\n\t                    if (month !== date.getMonth()) {\n\t                        date.setDate(0);\n\t                    }\n\t                } else {\n\t                    month = date.getMonth() + value;\n\n\t                    date.setMonth(month);\n\n\t                    if (month > 11) {\n\t                        month -= 12;\n\t                    }\n\n\t                    if (month > 0 && date.getMonth() != month) {\n\t                        date.setDate(0);\n\t                    }\n\t                }\n\n\t                adjustDST(date, hours);\n\t            },\n\t            toDateString: function(date) {\n\t                return date.getFullYear() + "/" + date.getMonth() + "/1";\n\t            }\n\t        },\n\t        {\n\t            name: "decade",\n\t            title: function(date, min, max) {\n\t                return title(date, min, max, 10);\n\t            },\n\t            content: function(options) {\n\t                var year = options.date.getFullYear(),\n\t                toDateString = this.toDateString,\n\t                html = "";\n\n\t                if (options.showHeader) {\n\t                    html += \'<table tabindex="0" role="grid" class="k-content k-meta-view" cellspacing="0"><caption class="k-meta-header">\';\n\t                    html += this.title(options.date, options.min, options.max);\n\t                    html += \'</caption><tbody><tr role="row">\';\n\t                }\n\n\t                return view({\n\t                    start: createDate(year - year % 10 - 1, 0, 1),\n\t                    min: createDate(options.min.getFullYear(), 0, 1),\n\t                    max: createDate(options.max.getFullYear(), 0, 1),\n\t                    otherMonth : options.otherMonth,\n\t                    html : html,\n\t                    setter: this.setDate,\n\t                    build: function(date, idx) {\n\t                        return {\n\t                            value: date.getFullYear(),\n\t                            ns: kendo.ns,\n\t                            dateString: toDateString(date),\n\t                            cssClass: idx === 0 || idx == 11 ? OTHERMONTHCLASS : ""\n\t                        };\n\t                    }\n\t                });\n\t            },\n\t            first: function(date) {\n\t                var year = date.getFullYear();\n\t                return createDate(year - year % 10, date.getMonth(), date.getDate());\n\t            },\n\t            last: function(date) {\n\t                var year = date.getFullYear();\n\t                return createDate(year - year % 10 + 9, date.getMonth(), date.getDate());\n\t            },\n\t            compare: function(date1, date2) {\n\t                return compare(date1, date2, 10);\n\t            },\n\t            setDate: function(date, value) {\n\t                setDate(date, value, 1);\n\t            },\n\t            toDateString: function(date) {\n\t                return date.getFullYear() + "/0/1";\n\t            }\n\t        },\n\t        {\n\t            name: CENTURY,\n\t            title: function(date, min, max) {\n\t                return title(date, min, max, 100);\n\t            },\n\t            content: function(options) {\n\t                var year = options.date.getFullYear(),\n\t                min = options.min.getFullYear(),\n\t                max = options.max.getFullYear(),\n\t                toDateString = this.toDateString,\n\t                minYear = min,\n\t                maxYear = max,\n\t                html = "";\n\n\t                minYear = minYear - minYear % 10;\n\t                maxYear = maxYear - maxYear % 10;\n\n\t                if (maxYear - minYear < 10) {\n\t                    maxYear = minYear + 9;\n\t                }\n\n\t                if (options.showHeader) {\n\t                    html += \'<table tabindex="0" role="grid" class="k-content k-meta-view" cellspacing="0"><caption class="k-meta-header">\';\n\t                    html += this.title(options.date, options.min, options.max);\n\t                    html += \'</caption><tbody><tr role="row">\';\n\t                }\n\n\t                return view({\n\t                    start: createDate(year - year % 100 - 10, 0, 1),\n\t                    min: createDate(minYear, 0, 1),\n\t                    max: createDate(maxYear, 0, 1),\n\t                    otherMonth : options.otherMonth,\n\t                    html : html,\n\t                    setter: this.setDate,\n\t                    build: function(date, idx) {\n\t                        var start = date.getFullYear(),\n\t                        end = start + 9;\n\n\t                        if (start < min) {\n\t                            start = min;\n\t                        }\n\n\t                        if (end > max) {\n\t                            end = max;\n\t                        }\n\n\t                        return {\n\t                            ns: kendo.ns,\n\t                            value: start + " - " + end,\n\t                            dateString: toDateString(date),\n\t                            cssClass: idx === 0 || idx == 11 ? OTHERMONTHCLASS : ""\n\t                        };\n\t                    }\n\t                });\n\t            },\n\t            first: function(date) {\n\t                var year = date.getFullYear();\n\t                return createDate(year - year % 100, date.getMonth(), date.getDate());\n\t            },\n\t            last: function(date) {\n\t                var year = date.getFullYear();\n\t                return createDate(year - year % 100 + 99, date.getMonth(), date.getDate());\n\t            },\n\t            compare: function(date1, date2) {\n\t                return compare(date1, date2, 100);\n\t            },\n\t            setDate: function(date, value) {\n\t                setDate(date, value, 10);\n\t            },\n\t            toDateString: function(date) {\n\t                var year = date.getFullYear();\n\t                return (year - year % 10) + "/0/1";\n\t            }\n\t        }]\n\t    };\n\n\t    function title(date, min, max, modular) {\n\t        var start = date.getFullYear(),\n\t            minYear = min.getFullYear(),\n\t            maxYear = max.getFullYear(),\n\t            end;\n\n\t        start = start - start % modular;\n\t        end = start + (modular - 1);\n\n\t        if (start < minYear) {\n\t            start = minYear;\n\t        }\n\t        if (end > maxYear) {\n\t            end = maxYear;\n\t        }\n\n\t        return start + "-" + end;\n\t    }\n\n\t    function view(options) {\n\t        var idx = 0,\n\t            data,\n\t            min = options.min,\n\t            max = options.max,\n\t            start = options.start,\n\t            setter = options.setter,\n\t            build = options.build,\n\t            weekNumberBuild = options.weekNumberBuild,\n\t            length = options.cells || 12,\n\t            isWeekColumnVisible = options.isWeekColumnVisible,\n\t            cellsPerRow = options.perRow || 4,\n\t            otherMonth = options.otherMonth,\n\t            lastDayOfMonth = options.lastDayOfMonth,\n\t            weekNumber = options.weekNumber || weekNumberTemplate,\n\t            content = options.content || cellTemplate,\n\t            empty = options.empty || emptyCellTemplate,\n\t            otherMonthTemplate = options.otherMonthCellTemplate || otherMonthCellTemplate,\n\t            html = options.html || \'<table tabindex="0" role="grid" class="k-content k-meta-view" cellspacing="0"><tbody><tr role="row">\';\n\t            if(isWeekColumnVisible) {\n\t                html += weekNumber(weekNumberBuild(start));\n\t            }\n\n\n\t        for(; idx < length; idx++) {\n\t            if (idx > 0 && idx % cellsPerRow === 0) {\n\t                html += \'</tr><tr role="row">\';\n\t                if (isWeekColumnVisible) {\n\t                    html += otherMonth || (+start <= +lastDayOfMonth) ? weekNumber(weekNumberBuild(start)) : weekNumber({ weekNumber : "&nbsp;"});\n\t                }\n\t            }\n\n\t            start = createDate(start.getFullYear(), start.getMonth(), start.getDate());\n\t            adjustDST(start, 0);\n\n\t            data = build(start, idx, options.disableDates);\n\n\t            html += (data.cssClass.indexOf(OTHERMONTH) !== -1 && !otherMonth) ? otherMonthTemplate(data) : isInRange(start, min, max) ? content(data) : empty(data);\n\n\t            setter(start, 1);\n\t        }\n\n\t        return html + "</tr></tbody></table>";\n\t    }\n\n\t    function compare(date1, date2, modifier) {\n\t        var year1 = date1.getFullYear(),\n\t            start  = date2.getFullYear(),\n\t            end = start,\n\t            result = 0;\n\n\t        if (modifier) {\n\t            start = start - start % modifier;\n\t            end = start - start % modifier + modifier - 1;\n\t        }\n\n\t        if (year1 > end) {\n\t            result = 1;\n\t        } else if (year1 < start) {\n\t            result = -1;\n\t        }\n\n\t        return result;\n\t    }\n\n\t    function getToday() {\n\t        var today = new DATE();\n\t        return new DATE(today.getFullYear(), today.getMonth(), today.getDate());\n\t    }\n\n\t    function restrictValue (value, min, max) {\n\t        var today = getToday();\n\n\t        if (value) {\n\t            today = new DATE(+value);\n\t        }\n\n\t        if (min > today) {\n\t            today = new DATE(+min);\n\t        } else if (max < today) {\n\t            today = new DATE(+max);\n\t        }\n\t        return today;\n\t    }\n\n\t    function isInRange(date, min, max) {\n\t        return +date >= +min && +date <= +max;\n\t    }\n\n\t    function shiftArray(array, idx) {\n\t        return array.slice(idx).concat(array.slice(0, idx));\n\t    }\n\n\t    function setDate(date, value, multiplier) {\n\t        value = value instanceof DATE ? value.getFullYear() : date.getFullYear() + multiplier * value;\n\t        date.setFullYear(value);\n\t    }\n\n\t    function daysBetweenTwoDates(startDate, endDate) {\n\t        if(+endDate < +startDate) {\n\t            var temp = +startDate;\n\t            calendar.views[0].setDate(startDate, endDate);\n\t            calendar.views[0].setDate(endDate, new Date(temp));\n\t        }\n\t        var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n\t        var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n\t        return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n\t    }\n\n\t    function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n\t        for(var i = 0; i <= numberOfDays; i++) {\n\t            var nextDay = new Date(fromDate.getTime());\n\t            nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n\t            if(!disableDates(nextDay)) {\n\t                array.push(nextDay);\n\t            }\n\t        }\n\t    }\n\n\t    function mousetoggle(e) {\n\t        var disabled = $(this).hasClass("k-state-disabled");\n\n\t        if (!disabled) {\n\t            $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n\t        }\n\t    }\n\n\t    function prevent (e) {\n\t        e.preventDefault();\n\t    }\n\n\t    // creates date with full year\n\t    function createDate(year, month, date) {\n\t        var dateObject = new DATE(year, month, date);\n\t        dateObject.setFullYear(year, month, date);\n\t        return dateObject;\n\t    }\n\n\t    function getCalendarInfo(culture) {\n\t        return getCulture(culture).calendars.standard;\n\t    }\n\n\t    function normalize(options) {\n\t        var start = views[options.start],\n\t            depth = views[options.depth],\n\t            culture = getCulture(options.culture);\n\n\t        options.format = extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n\t        if (isNaN(start)) {\n\t            start = 0;\n\t            options.start = MONTH;\n\t        }\n\n\t        if (depth === undefined || depth > start) {\n\t            options.depth = MONTH;\n\t        }\n\n\t        if (options.dates === null) {\n\t            options.dates = [];\n\t        }\n\t    }\n\n\t    function makeUnselectable(element) {\n\t        if (isIE8) {\n\t            element.find("*").attr("unselectable", "on");\n\t        }\n\t    }\n\n\t    function addClassToViewContainer(element, currentView) {\n\t        element.addClass("k-" + currentView);\n\t    }\n\n\t    function inArray(date, dates) {\n\t        for(var i = 0, length = dates.length; i < length; i++) {\n\t            if (date === +dates[i]) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    }\n\n\t    function isEqualDatePart(value1, value2) {\n\t        if (value1) {\n\t            return value1.getFullYear() === value2.getFullYear() &&\n\t                value1.getMonth() === value2.getMonth() &&\n\t                value1.getDate() === value2.getDate();\n\t        }\n\n\t        return false;\n\t    }\n\n\t    function isEqualMonth(value1, value2) {\n\t        if (value1) {\n\t            return value1.getFullYear() === value2.getFullYear() &&\n\t                value1.getMonth() === value2.getMonth();\n\t        }\n\n\t        return false;\n\t    }\n\n\n\t    function getDisabledExpr(option) {\n\t        if (kendo.isFunction(option)) {\n\t            return option;\n\t        }\n\n\t        if ($.isArray(option)) {\n\t            return createDisabledExpr(option);\n\t        }\n\t        return $.noop;\n\t    }\n\n\t    function convertDatesArray(dates) {\n\t        var result = [];\n\t        for (var i = 0; i < dates.length; i++) {\n\t            result.push(dates[i].setHours(0, 0, 0, 0));\n\t        }\n\t        return result;\n\t    }\n\n\t    function createDisabledExpr(dates) {\n\t        var body, callback,\n\t            disabledDates = [],\n\t            days = ["su", "mo", "tu", "we", "th", "fr", "sa"],\n\t            searchExpression = "if (found) {"+\n\t                    " return true " +\n\t                "} else {" +\n\t                    "return false" +\n\t                "}";\n\n\t        if (dates[0] instanceof DATE) {\n\t            disabledDates = convertDatesArray(dates);\n\t            body = "var found = date && window.kendo.jQuery.inArray(date.setHours(0, 0, 0, 0),["+ disabledDates +"]) > -1;" + searchExpression;\n\t        } else {\n\t            for (var i = 0; i < dates.length; i++) {\n\t                var day = dates[i].slice(0,2).toLowerCase();\n\t                var index = $.inArray(day, days);\n\t                if (index > -1) {\n\t                    disabledDates.push(index);\n\t                }\n\t            }\n\t            body = "var found = date && window.kendo.jQuery.inArray(date.getDay(),["+ disabledDates +"]) > -1;" + searchExpression;\n\t        }\n\n\t        callback = new Function("date", body); //jshint ignore:line\n\n\t        return callback;\n\t    }\n\n\t    function isEqualDate(oldValue, newValue) {\n\t       if (oldValue instanceof Date && newValue instanceof Date) {\n\t           oldValue = oldValue.getTime();\n\t           newValue = newValue.getTime();\n\t       }\n\n\t       return oldValue === newValue;\n\t    }\n\n\t    function toDateObject(link) {\n\t        var value = $(link).attr(kendo.attr(VALUE)).split("/");\n\t        //Safari cannot create correctly date from "1/1/2090"\n\t        value = createDate(value[0], value[1], value[2]);\n\n\t        return value;\n\t    }\n\n\t    calendar.isEqualDatePart = isEqualDatePart;\n\t    calendar.isEqualDate = isEqualDate;\n\t    calendar.makeUnselectable =  makeUnselectable;\n\t    calendar.restrictValue = restrictValue;\n\t    calendar.isInRange = isInRange;\n\t    calendar.addClassToViewContainer = addClassToViewContainer;\n\t    calendar.normalize = normalize;\n\t    calendar.viewsEnum = views;\n\t    calendar.disabled = getDisabledExpr;\n\t    calendar.toDateObject = toDateObject;\n\t    calendar.getToday = getToday;\n\t    calendar.createDate = createDate;\n\n\t    kendo.calendar = calendar;\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.selectable */ "./node_modules/@progress/kendo-ui/js/kendo.selectable.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.calendar.js?')}}]);