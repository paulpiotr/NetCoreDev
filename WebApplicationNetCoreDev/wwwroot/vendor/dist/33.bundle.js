(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{"./node_modules/@progress/kendo-ui/js/kendo.dropdowntree.js":
/*!******************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.dropdowntree.js ***!
  \******************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1152);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.popup */ "./node_modules/@progress/kendo-ui/js/kendo.popup.js");\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1153), __webpack_require__(1054) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "dropdowntree",\n\t    name: "DropDownTree",\n\t    category: "web",\n\t    description: "The DropDownTree widget displays a hierarchy of items and allows the selection of single or multiple items.",\n\t    depends: [ "treeview", "popup" ]\n\t};\n\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        TreeView = ui._dropdowntree,\n\t        ObservableArray = kendo.data.ObservableArray,\n\t        ObservableObject = kendo.data.ObservableObject,\n\t        extend = $.extend,\n\t        activeElement = kendo._activeElement,\n\t        ns = ".kendoDropDownTree",\n\t        keys = kendo.keys,\n\t        support = kendo.support,\n\t        HIDDENCLASS = "k-hidden",\n\t        WIDTH = "width",\n\t        browser = support.browser,\n\t        outerWidth = kendo._outerWidth,\n\t        DOT = ".",\n\t        DISABLED = "disabled",\n\t        READONLY = "readonly",\n\t        STATEDISABLED = "k-state-disabled",\n\t        ARIA_DISABLED = "aria-disabled",\n\t        HOVER = "k-state-hover",\n\t        FOCUSED = "k-state-focused",\n\t        HOVEREVENTS = "mouseenter" + ns + " mouseleave" + ns,\n\t        TABINDEX = "tabindex",\n\t        CLICK = "click",\n\t        OPEN = "open",\n\t        CLOSE = "close",\n\t        CHANGE = "change",\n\t        quotRegExp = /"/g,\n\t        proxy = $.proxy;\n\n\t    var DropDownTree = kendo.ui.Widget.extend( {\n\t        init: function(element, options) {\n\t            this.ns = ns;\n\n\t            kendo.ui.Widget.fn.init.call(this, element, options);\n\t            this._selection = this._getSelection();\n\t            this._focusInputHandler = $.proxy(this._focusInput, this);\n\t            this._initial = this.element.val();\n\n\t            this._values = [];\n\n\t            var value = this.options.value;\n\n\t            if (value === null || !value.length) {\n\t                this._noInitialValue = true;\n\t            }\n\n\t            if (!this._isNullorUndefined(value)) {\n\t                this._valueMethodCalled = true;\n\t                this._values = $.isArray(value) ? value.slice(0) : [value];\n\t            }\n\n\t            this._inputTemplate();\n\n\t            this._accessors();\n\t            this._setTreeViewOptions(this.options);\n\t            this._dataSource();\n\t            this._selection._initWrapper();\n\t            this._placeholder(true);\n\t            this._tabindex();\n\t            this.wrapper.data(TABINDEX, this.wrapper.attr(TABINDEX));\n\n\t            this.tree = $(\'<div/>\')\n\t            .attr({\n\t                tabIndex: -1,\n\t                "aria-hidden": true\n\t            });\n\n\t            this.list = $("<div class=\'k-list-container\'/>")\n\t                .append(this.tree);\n\n\t            this._header();\n\t            this._noData();\n\t            this._footer();\n\t            this._reset();\n\t            this._popup();\n\t            this.popup.one("open", proxy(this._popupOpen, this));\n\t            this._clearButton();\n\t            this._filterHeader();\n\t            this._treeview();\n\n\t            this._renderFooter();\n\n\t            this._checkAll();\n\t            this._enable();\n\t            this._toggleCloseVisibility();\n\n\t            if (!this.options.autoBind) {\n\t                var text = options.text || "";\n\t                if (!this._isNullorUndefined(options.value)) {\n\t                    this._preselect(options.value);\n\t                } else if (text) {\n\t                    this._textAccessor(text);\n\t                } else if (options.placeholder) {\n\t                    this._placeholder(true);\n\t                }\n\t            }\n\n\t            var disabled = $(this.element).parents("fieldset").is(\':disabled\');\n\n\t            if (disabled) {\n\t                this.enable(false);\n\t            }\n\t            this._valueMethodCalled = false;\n\t            kendo.notify(this);\n\t        },\n\n\t        _preselect: function(data, value){\n\t            this._selection._preselect(data, value);\n\t        },\n\n\t        _setTreeViewOptions: function(options) {\n\t            var treeviewOptions = {\n\t                autoBind: options.autoBind,\n\t                checkboxes: options.checkboxes,\n\t                dataImageUrlField: options.dataImageUrlField,\n\t                dataSpriteCssClassField: options.dataSpriteCssClassField,\n\t                dataTextField: options.dataTextField,\n\t                dataUrlField: options.dataUrlField,\n\t                loadOnDemand: options.loadOnDemand\n\t            };\n\n\t            this.options.treeview = $.extend({}, treeviewOptions, this.options.treeview);\n\n\t            if (options.template) {\n\t                this.options.treeview.template = options.template;\n\t            }\n\t        },\n\n\t        _dataSource: function() {\n\t            var rootDataSource = this.options.dataSource;\n\n\t            this.dataSource = kendo.data.HierarchicalDataSource.create(rootDataSource);\n\t            if (rootDataSource) {\n\t                $.extend(this.options.treeview,{\n\t                    dataSource: this.dataSource\n\t                });\n\t            }\n\t        },\n\n\t        _popupOpen: function() {\n\t            var popup = this.popup;\n\t            popup.wrapper = kendo.wrap(popup.element);\n\t        },\n\n\t        _getSelection: function() {\n\t            if (this._isMultipleSelection()) {\n\t                return new ui.DropDownTree.MultipleSelection(this);\n\t            } else {\n\t                return new ui.DropDownTree.SingleSelection(this);\n\t            }\n\t        },\n\n\t        setDataSource: function(dataSource) {\n\t            this._isDataSourceSet = true;\n\t            if(this._tags){\n\t                this._noInitialValue = true;\n\t                this.setValue([]);\n\t                this._tags.empty();\n\t                this.span.show();\n\t                this._multipleTags.empty();\n\t            }\n\t            this.dataSource = dataSource;\n\t            this.treeview.setDataSource(dataSource);\n\t            this._isDataSourceSet = false;\n\t        },\n\n\t        _isMultipleSelection: function() {\n\t            return this.options && (this.options.treeview.checkboxes || this.options.checkboxes);\n\t        },\n\n\t        options: {\n\t            name: "DropDownTree",\n\t            animation: {},\n\t            autoBind: true,\n\t            autoClose: true,\n\t            autoWidth: false,\n\t            clearButton: true,\n\t            dataTextField: "",\n\t            dataValueField: "",\n\t            dataImageUrlField: "",\n\t            dataSpriteCssClassField: "",\n\t            dataUrlField: "",\n\t            delay: 500,\n\t            enabled: true,\n\t            enforceMinLength: false,\n\t            filter: "none",\n\t            height: 200,\n\t            ignoreCase: true,\n\t            index: 0,\n\t            loadOnDemand: false,\n\t            messages: {\n\t                "singleTag": "item(s) selected",\n\t                "clear": "clear",\n\t                "deleteTag": "delete",\n\t                "noData": "No data found."\n\t            },\n\t            minLength: 1,\n\t            checkboxes: false,\n\t            noDataTemplate: true,\n\t            placeholder: "",\n\t            checkAll:false,\n\t            checkAllTemplate: "Check all",\n\t            tagMode: "multiple",\n\t            template: null,\n\t            text: null,\n\t            treeview: {},\n\t            valuePrimitive: false,\n\t            footerTemplate: "",\n\t            headerTemplate: "",\n\t            value: null,\n\t            valueTemplate: null,\n\t            popup: null\n\t        },\n\n\t        events: [\n\t            "open",\n\t            "close",\n\t            "dataBound",\n\t            CHANGE,\n\t            "select",\n\t            "filtering"\n\t        ],\n\n\t        focus: function() {\n\t            this.wrapper.focus();\n\t        },\n\n\t        dataItem: function (node){\n\t            return this.treeview.dataItem(node);\n\t        },\n\n\t        readonly: function(readonly) {\n\t            this._editable({\n\t                readonly: readonly === undefined ? true : readonly,\n\t                disable: false\n\t            });\n\t            this._toggleCloseVisibility();\n\t        },\n\n\t        enable: function(enable) {\n\t            this._editable({\n\t                readonly: false,\n\t                disable: !(enable = enable === undefined ? true : enable)\n\t            });\n\t            this._toggleCloseVisibility();\n\t        },\n\n\t        toggle: function(open) {\n\t            this._toggle(open);\n\t        },\n\n\t        open: function() {\n\t            var popup = this.popup;\n\n\t            if(!this.options.autoBind && !this.dataSource.data().length){\n\t                this.treeview._progress(true);\n\t                if(this._isFilterEnabled()){\n\t                    this._search();\n\t                } else {\n\t                    this.dataSource.fetch();\n\t                }\n\t            }\n\n\t            if (popup.visible() || !this._allowOpening()) {\n\t                return;\n\t            }\n\n\t            if(this._isMultipleSelection()){\n\t                popup.element.addClass("k-multiple-selection");\n\t            }\n\t            popup.element.addClass("k-popup-dropdowntree");\n\n\t            popup.one("activate", this._focusInputHandler);\n\t            popup._hovered = true;\n\t            popup.open();\n\t        },\n\n\t        close: function() {\n\t            this.popup.close();\n\t        },\n\n\t        search: function(word) {\n\t            var options = this.options;\n\t            var filter;\n\t            clearTimeout(this._typingTimeout);\n\n\t            if ((!options.enforceMinLength && !word.length) || word.length >= options.minLength) {\n\t                filter = this._getFilter(word);\n\t                if(this.trigger("filtering", { filter: filter }) ||\n\t                 $.isArray(this.options.dataTextField)){\n\t                    return;\n\t                }\n\n\t                this._filtering = true;\n\t                this.treeview.dataSource.filter(filter);\n\t            }\n\t        },\n\n\t        _getFilter: function (word){\n\t            return {\n\t                field: this.options.dataTextField,\n\t                operator: this.options.filter,\n\t                value: word,\n\t                ignoreCase: this.options.ignoreCase\n\t              };\n\t        },\n\n\t        refresh: function() {\n\t            var data = this.treeview.dataSource.flatView();\n\t            this._renderFooter();\n\t            this._renderNoData();\n\t            if (this.filterInput && this.checkAll) {\n\t                this.checkAll.toggle(!this.filterInput.val().length);\n\t            }\n\n\t            this.tree.toggle(!!data.length);\n\t            $(this.noData).toggle(!data.length);\n\t        },\n\n\t        setOptions: function(options) {\n\t            Widget.fn.setOptions.call(this, options);\n\n\t            this._setTreeViewOptions(options);\n\t            this._dataSource();\n\t            if (this.options.treeview) {\n\t                this.treeview.setOptions(this.options.treeview);\n\t            }\n\n\t            if (options.height && this.tree) {\n\t                this.tree.css(\'max-height\', options.height);\n\t            }\n\n\t            this._header();\n\t            this._noData();\n\t            this._footer();\n\n\t            this._renderFooter();\n\t            this._renderNoData();\n\t            if (this.span && (this._isMultipleSelection() || this.span.hasClass("k-readonly"))) {\n\t                this._placeholder(true);\n\t            }\n\t            this._inputTemplate();\n\t            this._accessors();\n\t            this._filterHeader();\n\t            this._checkAll();\n\t            this._enable();\n\t            if (options && (options.enable || options.enabled)) {\n\t                this.enable(true);\n\t            }\n\t            this._clearButton();\n\t        },\n\n\t        destroy: function() {\n\t            kendo.ui.Widget.fn.destroy.call(this);\n\t            if(this.treeview){\n\t                this.treeview.destroy();\n\t            }\n\t            this.popup.destroy();\n\n\t            this.wrapper.off(ns);\n\t            this._clear.off(ns);\n\t            this._inputWrapper.off(ns);\n\t            if (this.filterInput) {\n\t                this.filterInput.off(ns);\n\t            }\n\n\t            if(this.tagList){\n\t                this.tagList.off(ns);\n\t            }\n\n\t            kendo.unbind(this.tagList);\n\t            if (this.options.checkAll && this.checkAll) {\n\t                this.checkAll.off(ns);\n\t            }\n\n\t            if (this._form) {\n\t                this._form.off("reset", this._resetHandler);\n\t            }\n\t        },\n\n\t        setValue: function(value) {\n\t            value = $.isArray(value) || value instanceof ObservableArray ? value.slice(0) : [value];\n\n\t            this._values = value;\n\t        },\n\n\t        items: function() {\n\t            return this.treeview.items();\n\t        },\n\n\t        value: function(value) {\n\t            var that = this;\n\n\t            if(value){\n\t                if(that.filterInput && that.dataSource._filter){\n\t                    that._filtering = true;\n\t                    that.dataSource.filter({});\n\t                } else if (!that.dataSource.data().length || !that.treeview.dataSource.data().length){\n\t                    that.dataSource.fetch(function() {\n\t                        if(that.options.loadOnDemand){\n\t                            that._selection._setValue(value);\n\t                        } else {\n\t                            that.one(\'allNodesAreLoaded\', function(){\n\t                                that._selection._setValue(value);\n\t                            });\n\t                        }\n\t                    });\n\n\t                    return;\n\t                }\n\t            }\n\n\t            return that._selection._setValue(value);\n\t        },\n\n\t        text: function(text) {\n\t            var loweredText;\n\t            var ignoreCase = this.options.ignoreCase;\n\n\t            text = text === null ? "" : text;\n\n\t            if (text !== undefined && !this._isMultipleSelection()) {\n\t                if (typeof text !== "string") {\n\t                    this._textAccessor(text);\n\t                    return;\n\t                }\n\n\t                loweredText = ignoreCase ? text : text.toLowerCase();\n\n\t                this._selectItemByText(loweredText);\n\n\t                this._textAccessor(loweredText);\n\t            } else {\n\t                return this._textAccessor();\n\t            }\n\t        },\n\n\t        _header: function() {\n\t            var list = this;\n\t            var header = $(list.header);\n\t            var template = list.options.headerTemplate;\n\n\t            this._angularElement(header, "cleanup");\n\t            kendo.destroy(header);\n\t            header.remove();\n\n\t            if (!template) {\n\t                list.header = null;\n\t                return;\n\t            }\n\n\t            var headerTemplate = typeof template !== "function" ? kendo.template(template) : template;\n\t            header = $(headerTemplate({}));\n\n\t            list.header = header[0] ? header : null;\n\t            list.list.prepend(header);\n\n\t            this._angularElement(list.header, "compile");\n\t        },\n\n\t        _noData: function() {\n\t            var list = this;\n\t            var noData = $(list.noData);\n\t            var template = list.options.noDataTemplate === true ?  list.options.messages.noData : list.options.noDataTemplate;\n\n\t            list.angular("cleanup", function() { return { elements: noData }; });\n\t            kendo.destroy(noData);\n\t            noData.remove();\n\n\t            if (!template) {\n\t                list.noData = null;\n\t                return;\n\t            }\n\n\t            list.noData = $(\'<div class="k-nodata" style="display:none"><div></div></div>\').appendTo(list.list);\n\t            list.noDataTemplate = typeof template !== "function" ? kendo.template(template) : template;\n\t        },\n\n\t        _renderNoData: function() {\n\t            var list = this;\n\t            var noData = list.noData;\n\n\t            if (!noData) {\n\t                return;\n\t            }\n\n\t            this._angularElement(noData, "cleanup");\n\t            noData.children(":first").html(list.noDataTemplate({ instance: list }));\n\t            this._angularElement(noData, "compile");\n\t        },\n\n\t        _footer: function() {\n\t            var list = this;\n\t            var footer = $(list.footer);\n\t            var template = list.options.footerTemplate;\n\n\t            this._angularElement(footer, "cleanup");\n\t            kendo.destroy(footer);\n\t            footer.remove();\n\n\t            if (!template) {\n\t                list.footer = null;\n\t                return;\n\t            }\n\n\t            list.footer = $(\'<div class="k-footer"></div>\').appendTo(list.list);\n\t            list.footerTemplate = typeof template !== "function" ? kendo.template(template) : template;\n\t        },\n\n\t        _renderFooter: function() {\n\t            var list = this;\n\t            var footer = list.footer;\n\n\t            if (!footer) {\n\t                return;\n\t            }\n\n\t            this._angularElement(footer, "cleanup");\n\t            footer.html(list.footerTemplate({ instance: list }));\n\t            this._angularElement(footer, "compile");\n\t        },\n\n\t        _enable: function() {\n\t            var that = this,\n\t                options = that.options,\n\t                disabled = that.element.is("[disabled]");\n\n\t            if (options.enable !== undefined) {\n\t                options.enabled = options.enable;\n\t            }\n\n\t            if (!options.enabled || disabled) {\n\t                that.enable(false);\n\t            } else {\n\t                that.readonly(that.element.is("[readonly]"));\n\t            }\n\t        },\n\n\t        _adjustListWidth: function() {\n\t            var that = this,\n\t                list = that.list,\n\t                width = list[0].style.width,\n\t                wrapper = that.wrapper,\n\t                computedStyle, computedWidth;\n\n\t            if (!list.data(WIDTH) && width) {\n\t                return;\n\t            }\n\n\t            computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n\t            computedWidth = parseFloat(computedStyle  && computedStyle.width) || outerWidth(wrapper);\n\n\t            if (computedStyle && browser.msie) { // getComputedStyle returns different box in IE.\n\t                computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n\t            }\n\n\t            if (list.css("box-sizing") !== "border-box") {\n\t                width = computedWidth - (outerWidth(list) - list.width());\n\t            } else {\n\t                width = computedWidth;\n\t            }\n\n\t            list.css({\n\t                fontFamily: wrapper.css("font-family"),\n\t                width: that.options.autoWidth ? "auto" : width,\n\t                minWidth: width,\n\t                whiteSpace: that.options.autoWidth ? "nowrap" : "normal"\n\t            })\n\t            .data(WIDTH, width);\n\n\t            return true;\n\t        },\n\n\t        _reset: function() {\n\t            var that = this,\n\t                element = that.element,\n\t                formId = element.attr("form"),\n\t                form = formId ? $("#" + formId) : element.closest("form");\n\n\t            if (form[0]) {\n\t                that._resetHandler = function() {\n\t                    setTimeout(function() {\n\t                        that.value(that._initial);\n\t                    });\n\t                };\n\n\t                that._form = form.on("reset", that._resetHandler);\n\t            }\n\t        },\n\n\t        _popup: function() {\n\t            var list = this;\n\n\t            list.popup = new ui.Popup(list.list, extend({}, list.options.popup, {\n\t                anchor: list.wrapper,\n\t                open: proxy(list._openHandler, list),\n\t                close: proxy(list._closeHandler, list),\n\t                animation: list.options.animation,\n\t                isRtl: support.isRtl(list.wrapper),\n\t                autosize :list.options.autoWidth\n\t            }));\n\t        },\n\n\t        _angularElement: function(element, action) {\n\t            if (!element) {\n\t                return;\n\t            }\n\n\t            this.angular(action, function() {\n\t                return { elements: element };\n\t            });\n\t        },\n\n\t        _allowOpening: function() {\n\t            return this.options.noDataTemplate || this.treeview.dataSource.flatView().length;\n\t        },\n\n\t        _placeholder: function(show) {\n\t            if (this.span) {\n\t                this.span.toggleClass("k-readonly", show).text(show? this.options.placeholder: "");\n\t            }\n\t        },\n\n\t        _currentValue: function(dataItem) {\n\t            var currentValue = this._value(dataItem);\n\t            if (!currentValue && currentValue !== 0) {\n\t                currentValue = dataItem;\n\t            }\n\n\t            return currentValue;\n\t        },\n\n\t        _checkValue: function(dataItem) {\n\t            var value = "";\n\t            var indexOfValue = -1;\n\t            var currentValue = this.value();\n\t            var isMultiple = this.options.tagMode === "multiple";\n\n\t            if (dataItem || dataItem === 0) {\n\t                if(dataItem.level){\n\t                    dataItem._level = dataItem.level();\n\t                }\n\n\t                value = this._currentValue(dataItem);\n\n\t                indexOfValue = currentValue.indexOf(value);\n\t            }\n\n\t            if (dataItem.checked) {\n\t                var alreadyAddedTag = $.grep(this._tags, function( item ) {\n\t                    return item.uid === dataItem._tagUid;\n\t                });\n\n\t                if (alreadyAddedTag.length){\n\t                    return;\n\t                }\n\n\t                var itemToAdd = new ObservableObject(dataItem.toJSON());\n\t                dataItem._tagUid = itemToAdd.uid;\n\t                this._tags.push(itemToAdd);\n\n\t                if (this._tags.length === 1) {\n\t                    this.span.hide();\n\n\t                    if (!isMultiple) {\n\t                        this._multipleTags.push(itemToAdd);\n\t                    }\n\t                }\n\n\t                if (indexOfValue === -1) {\n\t                    currentValue.push(value);\n\t                    this.setValue(currentValue);\n\t                }\n\t            } else {\n\t                var itemToRemove = this._tags.find(function(item){\n\t                    return item.uid === dataItem._tagUid;\n\t                });\n\n\t                var idx = this._tags.indexOf(itemToRemove);\n\n\t                if (idx !== -1) {\n\t                    this._tags.splice(idx, 1);\n\t                } else {\n\t                    this._treeViewCheckAllCheck(dataItem);\n\t                    return;\n\t                }\n\n\t                if (this._tags.length === 0) {\n\t                    this.span.show();\n\t                    if (!isMultiple) {\n\t                        this._multipleTags.splice(0, 1);\n\t                    }\n\t                }\n\t                if (indexOfValue !== -1) {\n\t                    currentValue.splice(indexOfValue, 1);\n\t                    this.setValue(currentValue);\n\t                }\n\t            }\n\n\t            this._treeViewCheckAllCheck(dataItem);\n\t            if (!this._preventChangeTrigger && !this._valueMethodCalled && !this._noInitialValue) {\n\t                this.trigger(CHANGE);\n\t            }\n\n\t            if (this.options.autoClose && this.popup.visible()) {\n\t                this.close();\n\t                this.wrapper.focus();\n\t            }\n\t            this.popup.position();\n\t            this._toggleCloseVisibility();\n\t            this._updateSelectedOptions();\n\t        },\n\n\t        _updateSelectedOptions: function(){\n\t            if(this.element[0].tagName.toLowerCase() !== \'select\'){\n\t                return;\n\t            }\n\n\t            var selectedItems = this._tags;\n\t            var options = \'\';\n\t            var dataItem = null;\n\t            var value = null;\n\n\t            if (selectedItems.length) {\n\t                for (var idx = 0; idx < selectedItems.length; idx++) {\n\t                    dataItem = selectedItems[idx];\n\n\t                    value = this._value(dataItem);\n\t                    options += this._option(value, this._text(dataItem), true);\n\t                }\n\t            }\n\n\t            this.element.html(options);\n\t        },\n\n\t        _option: function(dataValue, dataText, selected) {\n\t            var option = "<option";\n\n\t            if (dataValue !== undefined) {\n\t                dataValue += "";\n\n\t                if (dataValue.indexOf(\'"\') !== -1) {\n\t                    dataValue = dataValue.replace(quotRegExp, "&quot;");\n\t                }\n\n\t                option += \' value="\' + dataValue + \'"\';\n\t            }\n\n\t            if (selected) {\n\t                option += \' selected\';\n\t            }\n\n\t            option += ">";\n\n\t            if (dataText !== undefined) {\n\t                option += kendo.htmlEncode(dataText);\n\t            }\n\n\t            return option += "</option>";\n\t        },\n\n\t        _selectValue: function(dataItem) {\n\t            var value = "";\n\t            var text = "";\n\n\t            if (dataItem || dataItem === 0) {\n\t                if(dataItem.level){\n\t                    dataItem._level = dataItem.level();\n\t                }\n\t                text = this._text(dataItem) || dataItem;\n\t                value = this._currentValue(dataItem);\n\t            }\n\n\t            if (value === null) {\n\t                value = "";\n\t            }\n\t            this.setValue(value);\n\t            this._textAccessor(text, dataItem);\n\t            this._accessor(value);\n\n\t            if(!this._preventChangeTrigger && !this._valueMethodCalled){\n\t                this.trigger(CHANGE);\n\t            }\n\t            this._valueMethodCalled = false;\n\n\t            if (this.options.autoClose && this.popup.visible()) {\n\t                this.close();\n\t                this.wrapper.focus();\n\t            }\n\t            this.popup.position();\n\t            this._toggleCloseVisibility();\n\t        },\n\n\t        _clearClick: function(e) {\n\t            e.stopPropagation();\n\t            this.wrapper.focus();\n\t            this._clearTextAndValue();\n\t        },\n\n\t        _clearTextAndValue: function() {\n\t            this.setValue([]);\n\t            this._clearInput();\n\t            this._clearText();\n\t            this._selection._clearValue();\n\t            this.popup.position();\n\t            this._toggleCloseVisibility();\n\t        },\n\n\t        _clearText: function() {\n\t            if (this.options.placeholder) {\n\t                this._placeholder(true);\n\t            } else {\n\t                if (this.span) {\n\t                    this.span.html("");\n\t                }\n\t            }\n\t        },\n\n\t        _inputTemplate: function() {\n\t            var template = this.options.valueTemplate;\n\n\t            if (!template) {\n\t                template = $.proxy(kendo.template(\'#:this._text(data)#\', { useWithBlock: false }), this);\n\t            } else {\n\t                template = kendo.template(template);\n\t            }\n\n\t            this.valueTemplate = template;\n\t        },\n\n\t        _assignInstance: function(text, value) {\n\t            var dataTextField = this.options.dataTextField;\n\t            var dataItem = {};\n\n\t            if (dataTextField) {\n\t                assign(dataItem, dataTextField.split(DOT), text);\n\t                assign(dataItem, this.options.dataValueField.split(DOT), value);\n\t                dataItem = new ObservableObject(dataItem);\n\t            } else {\n\t                dataItem = text;\n\t            }\n\n\t            return dataItem;\n\t        },\n\n\t        _textAccessor: function(text, dataItem) {\n\t            var valueTemplate = this.valueTemplate;\n\t            var span = this.span;\n\n\t            if (text === undefined) {\n\t                return span.text();\n\t            }\n\n\t            span.removeClass("k-readonly");\n\n\t            if (!dataItem && ($.isPlainObject(text) || text instanceof ObservableObject)) {\n\t                dataItem = text;\n\t            }\n\n\t            if (!dataItem) {\n\t                dataItem = this._assignInstance(text, this._accessor());\n\t            }\n\n\t            var getElements = function() {\n\t                return {\n\t                    elements: span.get(),\n\t                    data: [ { dataItem: dataItem } ]\n\t                };\n\t            };\n\n\t            this.angular("cleanup", getElements);\n\n\t            try {\n\t                span.html(valueTemplate(dataItem));\n\t            } catch(e) {\n\t                //dataItem has missing fields required in custom template\n\t                if (span) {\n\t                    span.html("");\n\t                }\n\t            }\n\n\t            this.angular("compile", getElements);\n\t        },\n\n\t        _accessors: function() {\n\t            var element = this.element;\n\t            var options = this.options;\n\t            var getter = kendo.getter;\n\t            var textField = element.attr(kendo.attr("text-field"));\n\t            var valueField = element.attr(kendo.attr("value-field"));\n\n\t            var getterFunction = function (field) {\n\t                if ($.isArray(field)) {\n\t                    var count = field.length;\n\t                    var levels = $.map(field, function(x) {\n\t                        return function(d){ return d[x];};\n\t                    });\n\n\t                    return function (dataItem) {\n\t                        var level = dataItem._level;\n\n\t                        if(!level && level !== 0){\n\t                            return;\n\t                        }\n\n\t                        return levels[Math.min(level, count-1)](dataItem);\n\t                    };\n\t                } else {\n\t                    return getter(field);\n\t                }\n\t            };\n\n\t            if (!options.dataTextField && textField) {\n\t                options.dataTextField = textField;\n\t            }\n\n\t            if (!options.dataValueField && valueField) {\n\t                options.dataValueField = valueField;\n\t            }\n\n\t            options.dataTextField = options.dataTextField || "text";\n\t            options.dataValueField = options.dataValueField || "value";\n\n\t            this._text = getterFunction(options.dataTextField);\n\t            this._value = getterFunction(options.dataValueField);\n\t        },\n\n\t        _accessor: function(value, idx) {\n\t            return this._accessorInput(value, idx);\n\t        },\n\n\t        _accessorInput: function(value) {\n\t            var element = this.element[0];\n\n\t            if (value === undefined) {\n\t                return element.value;\n\t            } else {\n\t                if (value === null) {\n\t                    value = "";\n\t                }\n\t                element.value = value;\n\t            }\n\t        },\n\n\t        _clearInput: function() {\n\t            var element = this.element[0];\n\t            element.value = "";\n\t        },\n\n\t        _clearButton: function() {\n\t            var clearTitle = this.options.messages.clear;\n\n\t            if(!this._clear){\n\t                this._clear = $(\'<span unselectable="on" class="k-icon k-clear-value k-i-close" title="\' + clearTitle + \'"></span>\').attr({\n\t                    "role": "button",\n\t                    "tabIndex": -1\n\t                });\n\t            }\n\n\t            if (this.options.clearButton) {\n\t                this._clear.insertAfter(this.span);\n\t                this.wrapper.addClass("k-dropdowntree-clearable");\n\t            } else {\n\t                if (!this.options.clearButton) {\n\t                    this._clear.remove();\n\t                }\n\t            }\n\t        },\n\n\t        _toggleCloseVisibility: function() {\n\t            var isReadOnly = this.element.attr(READONLY);\n\t            var hasValue = (this.value() && !this._isMultipleSelection()) || this.value().length;\n\t            var valueDoesNotEqualPlaceHolder = this.element.val() && this.element.val() !== this.options.placeholder;\n\n\t            if ((!isReadOnly && (hasValue || valueDoesNotEqualPlaceHolder))) {\n\t                this._showClear();\n\t            } else {\n\t                this._hideClear();\n\t            }\n\t        },\n\n\t        _showClear: function() {\n\t            if(this._clear) {\n\t                this._clear.removeClass(HIDDENCLASS);\n\t            }\n\t        },\n\n\t        _hideClear: function() {\n\t            if(this._clear) {\n\t                this._clear.addClass(HIDDENCLASS);\n\t            }\n\t        },\n\n\t        _openHandler: function(e) {\n\t            this._adjustListWidth();\n\n\t            if (this.trigger(OPEN)) {\n\t                e.preventDefault();\n\t            } else {\n\t                 this.wrapper.attr("aria-expanded", true);\n\t                 this.tree.attr("aria-hidden", false).attr("role", "tree");\n\t            }\n\t        },\n\n\t        _closeHandler: function(e) {\n\t            if (this.trigger(CLOSE)) {\n\t                e.preventDefault();\n\t            } else {\n\t                 this.wrapper.attr("aria-expanded", false);\n\t                 this.tree.attr("aria-hidden", true);\n\t            }\n\t        },\n\n\t        _treeview: function() {\n\t            var that = this;\n\t            if (that.options.height) {\n\t                that.tree.css(\'max-height\',that.options.height);\n\t            }\n\t            that.tree.attr(\'id\', kendo.guid());\n\t            that.treeview = new TreeView(that.tree, extend({}, that.options.treeview), that);\n\t            that.dataSource = that.treeview.dataSource;\n\n\t            that.treeview.bind("select",function(e) {\n\t                that.trigger("select", e);\n\t            });\n\t        },\n\n\t        _treeViewDataBound: function(e) {\n\t            if (e.node && this._prev && this._prev.length) {\n\t                e.sender.expand(e.node);\n\t            }\n\n\t            if(this._filtering){\n\t                if(!e.node){\n\t                    this._filtering = false;\n\t                }\n\n\t                if (!this._isMultipleSelection()) {\n\t                    this._deselectItem(e);\n\t                }\n\t                return;\n\t            }\n\n\t            if (!this.treeview) {\n\t                this.treeview = e.sender;\n\t            }\n\n\t            if (!e.node) {\n\t                var rootItems = e.sender.dataSource.data();\n\n\t                this._checkLoadedItems(rootItems);\n\t                if(this._noInitialValue){\n\t                    this._noInitialValue = false;\n\t                }\n\t            } else {\n\t                var rootItem = e.sender.dataItem(e.node);\n\t                if (rootItem) {\n\t                    var subItems = rootItem.children.data();\n\t                    this._checkLoadedItems(subItems);\n\t                }\n\t            }\n\t            this.trigger("dataBound", e);\n\t        },\n\n\t        _deselectItem: function(e){\n\t            var items = [];\n\t            if (!e.node) {\n\t                items = e.sender.dataSource.data();\n\t            } else {\n\t                var rootItem = e.sender.dataItem(e.node);\n\t                if (rootItem) {\n\t                    items = rootItem.children.data();\n\t                }\n\t            }\n\n\t            for (var i = 0; i < items.length; i++) {\n\t                if (items[i].selected &&\n\t                    !this._valueComparer(items[i], this.value())) {\n\t                    items[i].set("selected", false);\n\t                }\n\t            }\n\t        },\n\n\t        _checkLoadedItems: function(items) {\n\t            var value = this.value();\n\n\t            if(!items){\n\t                return;\n\t            }\n\n\t            for (var idx = 0; idx < items.length; idx++) {\n\t                this._selection._checkLoadedItem(items[idx], value);\n\t            }\n\t        },\n\n\t        _treeViewCheckAllCheck: function(dataItem) {\n\t            if (this.options.checkAll && this.checkAll) {\n\t                this._getAllChecked();\n\n\t                if (dataItem.checked) {\n\t                    this._checkCheckAll();\n\t                } else {\n\t                    this._uncheckCheckAll();\n\t                }\n\t            }\n\t        },\n\n\t        _checkCheckAll: function() {\n\t            var checkAllCheckbox = this.checkAll.find(\'.k-checkbox\');\n\n\t            if (this._allItemsAreChecked) {\n\t                checkAllCheckbox.prop(\'checked\', true)\n\t                                .prop(\'indeterminate\', false);\n\t            } else {\n\t                checkAllCheckbox.prop(\'indeterminate\', true);\n\t            }\n\t        },\n\n\t        _uncheckCheckAll: function() {\n\t            var checkAllCheckbox = this.checkAll.find(\'.k-checkbox\');\n\n\t            if (this._allItemsAreUnchecked) {\n\t                checkAllCheckbox.prop(\'checked\', false)\n\t                                .prop(\'indeterminate\', false);\n\t            } else {\n\t                checkAllCheckbox.prop(\'indeterminate\', true);\n\t            }\n\t        },\n\n\t        _filterHeader: function() {\n\t            var icon;\n\n\t            if (this.filterInput) {\n\t                this.filterInput\n\t                    .off(ns)\n\t                    .parent()\n\t                    .remove();\n\n\t                this.filterInput = null;\n\t            }\n\n\t            if (this._isFilterEnabled()) {\n\t                this._disableCheckChildren();\n\n\t                icon = \'<span class="k-icon k-i-zoom"></span>\';\n\n\t                this.filterInput = $(\'<input class="k-textbox"/>\')\n\t                                      .attr({\n\t                                          placeholder: this.element.attr("placeholder"),\n\t                                          title: this.element.attr("title"),\n\t                                          role: "listbox",\n\t                                          "aria-haspopup": true,\n\t                                          "aria-expanded": false\n\t                                      });\n\n\t                this.filterInput.on("input" , proxy(this._filterChange, this));\n\t                $(\'<span class="k-list-filter" />\').insertBefore(this.tree)\n\t                    .append(this.filterInput.add(icon));\n\t            }\n\t        },\n\n\t        _filterChange: function() {\n\t            if (this.filterInput) {\n\t                this._search();\n\t            }\n\t        },\n\n\t        _disableCheckChildren: function() {\n\t            if (this._isMultipleSelection() && this.options.treeview.checkboxes && this.options.treeview.checkboxes.checkChildren) {\n\t                this.options.treeview.checkboxes.checkChildren = false;\n\t            }\n\t        },\n\n\t        _checkAll: function() {\n\t            if (this.checkAll) {\n\t                this.checkAll.find(".k-checkbox-label, .k-checkbox")\n\t                    .off(ns);\n\t                this.checkAll.remove();\n\n\t                this.checkAll = null;\n\t            }\n\n\t            if (this._isMultipleSelection() && this.options.checkAll) {\n\t                this.checkAll = $(\'<div class="k-check-all"><input type="checkbox" class="k-checkbox"/><span class="k-checkbox-label">Check All</span></div>\').insertBefore(this.tree);\n\t                this.checkAll.find(".k-checkbox-label").html(kendo.template(this.options.checkAllTemplate)({ instance: this }));\n\t                this.checkAll.find(".k-checkbox-label").on(CLICK + ns, proxy(this._clickCheckAll, this));\n\t                this.checkAll.find(".k-checkbox")\n\t                                .on("change" + ns, proxy(this._changeCheckAll, this))\n\t                                .on("keydown" + ns, proxy(this._keydownCheckAll, this));\n\t                this._disabledCheckedItems = [];\n\t                this._disabledUnCheckedItems = [];\n\n\t                this._getAllChecked();\n\n\t                if (!this._allItemsAreUnchecked) {\n\t                    this._checkCheckAll();\n\t                }\n\t            }\n\t        },\n\n\t        _changeCheckAll: function() {\n\t            var checkAllCheckbox = this.checkAll.find(\'.k-checkbox\');\n\t            var isChecked = checkAllCheckbox.prop(\'checked\');\n\n\t            this._updateCheckAll(isChecked);\n\t        },\n\n\t        _updateCheckAll: function(isChecked) {\n\t            var checkAllCheckbox = this.checkAll.find(\'.k-checkbox\');\n\t            this._toggleCheckAllItems(isChecked);\n\t            checkAllCheckbox.prop(\'checked\', isChecked);\n\t            if (this._disabledCheckedItems.length && this._disabledUnCheckedItems.length) {\n\t                checkAllCheckbox.prop(\'indeterminate\', true);\n\t            } else if (this._disabledCheckedItems.length) {\n\t                checkAllCheckbox.prop(\'indeterminate\', !isChecked);\n\t            } else if (this._disabledUnCheckedItems.length) {\n\t                checkAllCheckbox.prop(\'indeterminate\', isChecked);\n\t            } else {\n\t                checkAllCheckbox.prop(\'indeterminate\', false);\n\t            }\n\t            this._disabledCheckedItems = [];\n\t            this._disabledUnCheckedItems = [];\n\t        },\n\n\t        _keydownCheckAll: function(e) {\n\t            var key = e.keyCode;\n\t            var altKey = e.altKey;\n\n\t            if ((altKey && key === keys.UP) || key === keys.ESC || key === keys.TAB) {\n\t                this.close();\n\t                this.wrapper.focus();\n\t                e.preventDefault();\n\t                return;\n\t            }\n\n\t            if (key === keys.UP) {\n\t                if (this.filterInput) {\n\t                    this.filterInput.focus();\n\t                } else {\n\t                    this.wrapper.focus();\n\t                }\n\n\t                e.preventDefault();\n\t            }\n\n\t            if (key === keys.DOWN) {\n\t                if (this.tree && this.tree.is(":visible")) {\n\t                    this.tree.focus();\n\t                }\n\n\t                e.preventDefault();\n\t            }\n\n\t            if (key === keys.SPACEBAR && (browser.msie || browser.edge)) {\n\t                this._clickCheckAll();\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _clickCheckAll: function() {\n\t            var checkAllCheckbox = this.checkAll.find(\'.k-checkbox\');\n\t            var isChecked = checkAllCheckbox.prop(\'checked\');\n\n\t            this._updateCheckAll(!isChecked);\n\n\t            checkAllCheckbox.focus();\n\n\t        },\n\t        //treeview\n\t        _dfs: function(items, action, prop) {\n\t            for (var idx = 0; idx < items.length; idx++) {\n\t                if (!this[action](items[idx], prop)) {\n\t                    break;\n\t                }\n\t                this._traverceChildren(items[idx], action, prop);\n\t            }\n\t        },\n\n\t        _uncheckItemByUid: function(uid) {\n\t            this._dfs(this.dataSource.data(), \'_uncheckItemEqualsUid\', uid);\n\t        },\n\n\t        _uncheckItemEqualsUid: function(item, uid) {\n\t            if (item.enabled !== false && item._tagUid == uid) {\n\t                item.set("checked", false);\n\t                return false;\n\t            }\n\t            return true;\n\t        },\n\n\t        _selectItemByText: function(text) {\n\t            this._dfs(this.dataSource.data(), \'_itemEqualsText\', text);\n\t        },\n\n\t        _itemEqualsText: function(item, text) {\n\t            if (item.enabled !== false && this._text(item) === text) {\n\t                this.treeview.select(this.treeview.findByUid(item.uid));\n\t                this._selectValue(item);\n\t                return false;\n\t            }\n\t            return true;\n\t        },\n\n\t        _selectItemByValue: function(value) {\n\t            this._dfs(this.dataSource.data(), \'_itemEqualsValue\', value);\n\t        },\n\n\t        _itemEqualsValue: function(item, value) {\n\t            if (item.enabled !== false && this._valueComparer(item, value)) {\n\n\t                this.treeview.select(this.treeview.findByUid(item.uid));\n\n\t                return false;\n\t            }\n\t            return true;\n\t        },\n\n\t        _checkItemByValue: function(value) {\n\t            var items = this.treeview.dataItems();\n\t            for (var idx = 0; idx < value.length; idx++) {\n\t                this._dfs(items, \'_checkItemEqualsValue\', value[idx]);\n\t            }\n\t        },\n\n\t        _checkItemEqualsValue: function(item, value) {\n\t            if (item.enabled !== false && this._valueComparer(item, value)) {\n\t                    item.set("checked", true);\n\t                return false;\n\t            }\n\t            return true;\n\t        },\n\n\t        _valueComparer: function(item, value) {\n\t            var itemValue = this._value(item);\n\t            var itemText;\n\n\t            if (!this._isNullorUndefined(itemValue)) {\n\t                if(this._isNullorUndefined(value)){\n\t                    return false;\n\t                }\n\n\t                var newValue = this._value(value);\n\n\t                if(newValue){\n\t                    return itemValue == newValue;\n\t                }else{\n\t                    return itemValue == value;\n\t                }\n\t            }\n\n\t            itemText = this._text(item);\n\t            if (itemText) {\n\t                if (this._text(value)) {\n\t                    return itemText == this._text(value);\n\t                } else {\n\t                    return itemText == value;\n\t                }\n\t            }\n\n\t            return false;\n\t        },\n\n\t        _isNullorUndefined: function(value){\n\t            return value === undefined || value === null;\n\t        },\n\n\t        _getAllChecked: function() {\n\t            this._allCheckedItems = [];\n\t            this._allItemsAreChecked = true;\n\t            this._allItemsAreUnchecked = true;\n\n\t            this._dfs(this.dataSource.data(), \'_getAllCheckedItems\');\n\n\t            return this._allCheckedItems;\n\t        },\n\n\t        _getAllCheckedItems: function(item) {\n\t            if (this._allItemsAreChecked) {\n\t                this._allItemsAreChecked =  item.checked;\n\t            }\n\n\t            if (this._allItemsAreUnchecked) {\n\t                this._allItemsAreUnchecked = !item.checked;\n\t            }\n\n\t            if (item.checked) {\n\t                this._allCheckedItems.push(item);\n\t            }\n\t            return true;\n\t        },\n\n\t        _traverceChildren: function(item, action, prop) {\n\t            var childrenField = (item._childrenOptions && item._childrenOptions.schema) ? item._childrenOptions.schema.data : null;\n\t            var subItems = item[childrenField] || item.items || item.children;\n\n\t            if (!subItems) {\n\t                return;\n\t            }\n\n\t            this._dfs(subItems, action, prop);\n\t        },\n\n\t        _toggleCheckAllItems: function(checked) {\n\t            this._dfs(this.dataSource.data(), \'_checkAllCheckItem\', checked);\n\t        },\n\n\t        _checkAllCheckItem: function(item, checked) {\n\t            if (item.enabled === false) {\n\t                if (item.checked) {\n\t                    this._disabledCheckedItems.push(item);\n\t                } else {\n\t                    this._disabledUnCheckedItems.push(item);\n\t                }\n\t            } else {\n\t                item.set("checked", checked);\n\t            }\n\t            return true;\n\t        },\n\n\t        _isFilterEnabled: function() {\n\t            var filter = this.options.filter;\n\t            return filter && filter !== "none";\n\t        },\n\n\t        _editable: function(options) {\n\t            var that = this;\n\t            var element = that.element;\n\t            var disable = options.disable;\n\t            var readonly = options.readonly;\n\t            var wrapper = that.wrapper.add(that.filterInput).off(ns);\n\t            var dropDownWrapper = that._inputWrapper.off(HOVEREVENTS);\n\t            if (that._isMultipleSelection()) {\n\t                that.tagList.off(CLICK + ns);\n\t            }\n\t            if (!readonly && !disable) {\n\t                element.removeAttr(DISABLED).removeAttr(READONLY);\n\n\t                dropDownWrapper\n\t                    .removeClass(STATEDISABLED)\n\t                    .on(HOVEREVENTS, that._toggleHover);\n\n\t                that._clear.on("click" + ns, proxy(that._clearClick, that));\n\t                wrapper\n\t                    .attr(TABINDEX, wrapper.data(TABINDEX))\n\t                    .attr(ARIA_DISABLED, false)\n\t                    .on("keydown" + ns, proxy(that._keydown, that))\n\t                    .on("focusin" + ns, proxy(that._focusinHandler, that))\n\t                    .on("focusout" + ns, proxy(that._focusoutHandler, that));\n\n\t                that.wrapper.on(CLICK + ns, proxy(that._wrapperClick, that));\n\n\t                if (this._isMultipleSelection()) {\n\t                    that.tagList.on(CLICK + ns, "li.k-button", function(e) {\n\t                        $(e.currentTarget).addClass(FOCUSED);\n\t                    });\n\n\t                    that.tagList.on(CLICK + ns, ".k-select", function(e) {\n\t                        that._removeTagClick(e);\n\t                    });\n\t                }\n\t            } else if (disable) {\n\t                wrapper.removeAttr(TABINDEX);\n\t                dropDownWrapper\n\t                    .addClass(STATEDISABLED);\n\t            } else {\n\t                wrapper\n\t                    .attr(TABINDEX, wrapper.data(TABINDEX));\n\n\t                dropDownWrapper\n\t                    .removeClass(STATEDISABLED);\n\n\t                wrapper\n\t                    .on("focusin" + ns, proxy(that._focusinHandler, that))\n\t                    .on("focusout" + ns, proxy(that._focusoutHandler, that));\n\t            }\n\n\t            element.attr(DISABLED, disable)\n\t                   .attr(READONLY, readonly);\n\n\t            wrapper.attr(ARIA_DISABLED, disable);\n\t        },\n\n\t        _focusinHandler: function() {\n\t            this._inputWrapper.addClass(FOCUSED);\n\t            this._prevent = false;\n\t        },\n\n\t        _focusoutHandler: function() {\n\t            var that = this;\n\n\t            if (this._isMultipleSelection()) {\n\t                this.tagList.find(DOT + FOCUSED).removeClass(FOCUSED);\n\t            }\n\t            if (!that._prevent) {\n\t                this._inputWrapper.removeClass(FOCUSED);\n\t                that._prevent = true;\n\t                that.element.blur();\n\t            }\n\t        },\n\n\t        _toggle: function(open) {\n\t            open = open !== undefined ? open : !this.popup.visible();\n\n\t            this[open ? OPEN : CLOSE]();\n\t        },\n\n\t        _wrapperClick: function(e) {\n\t            e.preventDefault();\n\t            this.popup.unbind("activate", this._focusInputHandler);\n\t            this._focused = this.wrapper;\n\t            this._prevent = false;\n\t            this._toggle();\n\t        },\n\n\t        _toggleHover: function(e) {\n\t            $(e.currentTarget).toggleClass(HOVER, e.type === "mouseenter");\n\t        },\n\n\t        _focusInput: function() {\n\t            if (this.filterInput) {\n\t                this.filterInput.focus();\n\t            } else if (this.checkAll) {\n\t                this.checkAll.find(".k-checkbox").focus();\n\t            } else if (this.tree.is(":visible")) {\n\t                this.tree.focus();\n\t            }\n\t        },\n\n\t        _keydown: function(e) {\n\t            var key = e.keyCode;\n\t            var altKey = e.altKey;\n\t            var isFilterInputActive;\n\t            var isWrapperActive;\n\t            var focused, tagItem;\n\n\t            var isPopupVisible = this.popup.visible();\n\n\t            if (this.filterInput) {\n\t                isFilterInputActive = this.filterInput[0] === activeElement();\n\t            }\n\n\t            if (this.wrapper) {\n\t                isWrapperActive = this.wrapper[0] === activeElement();\n\t            }\n\n\t            if(isWrapperActive){\n\t                if (key === keys.ESC) {\n\t                    this._clearTextAndValue();\n\t                    e.preventDefault();\n\t                    return;\n\t                }\n\n\t                if(this._isMultipleSelection()){\n\t                    if (key === keys.LEFT) {\n\t                        this._focusPrevTag();\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\n\t                    if (key === keys.RIGHT) {\n\t                        this._focusNextTag();\n\t                          e.preventDefault();\n\t                        return;\n\t                    }\n\n\t                    if (key === keys.HOME) {\n\t                        this._focusFirstTag();\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\n\t                    if (key === keys.END) {\n\t                        this._focusLastTag();\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\n\t                    if (key === keys.DELETE) {\n\t                        focused = this.tagList.find(DOT + FOCUSED).first();\n\t                        if(focused.length){\n\t                            tagItem = this._tags[focused.index()];\n\t                            this._removeTag(tagItem);\n\t                        }\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\n\t                    if (key === keys.BACKSPACE) {\n\t                        focused = this.tagList.find(DOT + FOCUSED).first();\n\t                        if (focused.length) {\n\t                            tagItem = this._tags[focused.index()];\n\t                            this._removeTag(tagItem);\n\t                        } else {\n\t                            focused = this._focusLastTag();\n\t                            if (focused.length) {\n\t                                tagItem = this._tags[focused.index()];\n\t                                this._removeTag(tagItem);\n\t                            }\n\t                        }\n\t                        e.preventDefault();\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\n\n\t            if (isFilterInputActive) {\n\t                if (key === keys.ESC) {\n\t                    this._clearFilter();\n\t                }\n\n\t                if ((key === keys.UP) && !altKey) {\n\t                    this.wrapper.focus();\n\t                    e.preventDefault();\n\t                }\n\n\t                if(browser.msie && browser.version < 10){\n\t                    if (key === keys.BACKSPACE || key === keys.DELETE) {\n\t                        this._search();\n\t                    }\n\t                }\n\n\t                if(key === keys.TAB){\n\t                    this.close();\n\t                    this.wrapper.focus();\n\t                    e.preventDefault();\n\t                    return;\n\t                }\n\t            }\n\n\t            if ((altKey && key === keys.UP) || key === keys.ESC) {\n\t                this.close();\n\t                this.wrapper.focus();\n\t                e.preventDefault();\n\t                return;\n\t            }\n\n\t            if (key === keys.ENTER && this._typingTimeout && this.filterInput && isPopupVisible) {\n\t                e.preventDefault();\n\t                return;\n\t            }\n\n\t            if (key === keys.SPACEBAR && !isFilterInputActive) {\n\t                this._toggle(!isPopupVisible);\n\t                e.preventDefault();\n\t            }\n\n\t            if ((altKey && key === keys.DOWN) && !isPopupVisible) {\n\t                this.open();\n\t                e.preventDefault();\n\t            }\n\n\t            if ((key === keys.DOWN) && isPopupVisible) {\n\t                if (this.filterInput && !isFilterInputActive) {\n\t                    this.filterInput.focus();\n\t                } else if (this.checkAll && this.checkAll.is(":visible")) {\n\t                    this.checkAll.find(\'input\').focus();\n\t                } else if(this.tree.is(":visible")) {\n\t                    this.tree.focus();\n\t                }\n\t                e.preventDefault();\n\t            }\n\n\t            if(key === keys.TAB && isPopupVisible){\n\t                this.close();\n\t                this.wrapper.focus();\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _focusPrevTag: function() {\n\t            var focused = this.tagList.find(DOT + FOCUSED);\n\t            if (focused.length) {\n\t                var activedescendant = this.wrapper.attr("aria-activedescendant");\n\t                focused.first()\n\t                    .removeClass(FOCUSED)\n\t                    .removeAttr("id")\n\t                    .prev().addClass(FOCUSED)\n\t                    .attr("id", activedescendant);\n\t                this.wrapper.attr("aria-activedescendant", activedescendant);\n\t            } else {\n\t                this._focusLastTag();\n\t            }\n\t        },\n\n\t        _focusNextTag: function() {\n\t            var focused = this.tagList.find(DOT + FOCUSED);\n\t            if (focused.length) {\n\t                var activedescendant = this.wrapper.attr("aria-activedescendant");\n\t                focused.first().removeClass(FOCUSED).removeAttr("id")\n\t                    .next().addClass(FOCUSED)\n\t                    .attr("id", activedescendant);\n\t                this.wrapper.attr("aria-activedescendant", activedescendant);\n\t            } else {\n\t                this._focusFirstTag();\n\t            }\n\t        },\n\n\t        _focusFirstTag: function() {\n\t            var activedescendant = this.wrapper.attr("aria-activedescendant");\n\t            this._clearDisabledTag();\n\n\t            var firstTag = this.tagList.children(\'li\').first().addClass(FOCUSED)\n\t                .attr("id", activedescendant);\n\t            this.wrapper.attr("aria-activedescendant", activedescendant);\n\n\t            return firstTag;\n\t        },\n\n\t        _focusLastTag: function() {\n\t            var activedescendant = this.wrapper.attr("aria-activedescendant");\n\t            this._clearDisabledTag();\n\t            var lastTag = this.tagList.children(\'li\').last().addClass(FOCUSED)\n\t                .attr("id", activedescendant);\n\t            this.wrapper.attr("aria-activedescendant", activedescendant);\n\n\t            return lastTag;\n\t        },\n\n\t        _clearDisabledTag: function() {\n\t            this.tagList.find(DOT + FOCUSED).removeClass(FOCUSED).removeAttr("id");\n\t        },\n\n\t        _search: function() {\n\t            var that = this;\n\t            clearTimeout(that._typingTimeout);\n\n\t            that._typingTimeout = setTimeout(function() {\n\t                var value = that.filterInput.val();\n\n\t                if (that._prev !== value) {\n\t                    that._prev = value;\n\t                    that.search(value);\n\t                }\n\n\t                that._typingTimeout = null;\n\t            }, that.options.delay);\n\t        },\n\n\t        _clearFilter: function() {\n\t            if(this.filterInput.val().length){\n\t                this.filterInput.val("");\n\t                this._prev = "";\n\t                this._filtering = true;\n\t                this.treeview.dataSource.filter({});\n\t            }\n\t        },\n\n\t        _removeTagClick: function(e) {\n\t            e.stopPropagation();\n\t            var tagItem = this._tags[$(e.currentTarget.parentElement).index()];\n\t            this._removeTag(tagItem);\n\t        },\n\n\t        _removeTag: function(tagItem) {\n\t           if(!tagItem){\n\t                return;\n\t           }\n\n\t           var uid = tagItem.uid;\n\t           this._uncheckItemByUid(uid);\n\t        }\n\t    });\n\n\t    function assign(instance, fields, value) {\n\t        var idx = 0,\n\t            lastIndex = fields.length - 1,\n\t            field;\n\n\t        for (; idx < lastIndex; ++idx) {\n\t            field = fields[idx];\n\n\t            if (!(field in instance)) {\n\t                instance[field] = {};\n\t            }\n\n\t            instance = instance[field];\n\t        }\n\n\t        instance[fields[lastIndex]] = value;\n\t    }\n\n\t    ui.plugin(DropDownTree);\n\n\t    var SingleSelection = kendo.Class.extend({\n\t        init: function(view) {\n\t            this._dropdowntree = view;\n\t        },\n\n\t        _initWrapper: function() {\n\t            this._wrapper();\n\t            this._span();\n\t        },\n\n\t        _preselect: function(data){\n\t            var dropdowntree = this._dropdowntree;\n\n\t            dropdowntree._selectValue(data);\n\t        },\n\n\t        _wrapper: function() {\n\t            var dropdowntree = this._dropdowntree,\n\t                element = dropdowntree.element,\n\t                DOMelement = element[0],\n\t                wrapper;\n\n\t            wrapper = element.parent();\n\n\t            if (!wrapper.is("span.k-widget")) {\n\t                wrapper = element.wrap("<span />").parent();\n\t                wrapper[0].style.cssText = DOMelement.style.cssText;\n\t                wrapper[0].title = DOMelement.title;\n\t            }\n\n\t            dropdowntree._focused = dropdowntree.wrapper = wrapper\n\t                              .addClass("k-widget k-dropdowntree")\n\t                              .addClass(DOMelement.className)\n\t                              .removeClass(\'input-validation-error\')\n\t                              .css("display", "")\n\t                              .attr({\n\t                                  accesskey: element.attr("accesskey"),\n\t                                  unselectable: "on",\n\t                                  role: "listbox",\n\t                                  "aria-haspopup": true,\n\t                                  "aria-expanded": false\n\t                              });\n\n\t            element.hide().removeAttr("accesskey");\n\t        },\n\n\t        _span: function() {\n\t            var dropdowntree = this._dropdowntree,\n\t                wrapper = dropdowntree.wrapper,\n\t                SELECTOR = "span.k-input",\n\t                span;\n\n\t            span = wrapper.find(SELECTOR);\n\n\t            if (!span[0]) {\n\t                wrapper.append(\'<span unselectable="on" class="k-dropdown-wrap k-state-default"><span unselectable="on" class="k-input">&nbsp;</span><span unselectable="on" class="k-select" aria-label="select"><span class="k-icon k-i-arrow-60-down"></span></span></span>\')\n\t                       .append(dropdowntree.element);\n\n\t                span = wrapper.find(SELECTOR);\n\t            }\n\n\t            dropdowntree.span = span;\n\t            dropdowntree._inputWrapper = $(wrapper[0].firstChild);\n\t            dropdowntree._arrow = wrapper.find(".k-select");\n\t            dropdowntree._arrowIcon = dropdowntree._arrow.find(".k-icon");\n\t        },\n\n\t        _setValue: function(value) {\n\t            var dropdowntree = this._dropdowntree;\n\t            var currentValue;\n\n\t            if (value === undefined || value === null) {\n\t                currentValue = dropdowntree._values.slice()[0];\n\t                value = (typeof currentValue === "object") ? currentValue : dropdowntree._accessor() || currentValue;\n\t                return value === undefined || value === null ? "" : value;\n\t            }\n\t            dropdowntree._valueMethodCalled = true;\n\t            if (value.length === 0) {\n\t                dropdowntree._clearTextAndValue();\n\t                dropdowntree._valueMethodCalled = false;\n\t                return;\n\t            }\n\n\t            dropdowntree._selectItemByValue(value);\n\t            dropdowntree._toggleCloseVisibility();\n\t        },\n\n\t        _clearValue: function() {\n\t            var dropdowntree = this._dropdowntree;\n\t            var selectedNode = dropdowntree.treeview.select();\n\n\t            if (dropdowntree.treeview.dataItem(selectedNode)) {\n\t                dropdowntree.treeview.dataItem(selectedNode).set(\'selected\', false);\n\t                if(!dropdowntree._valueMethodCalled){\n\t                    dropdowntree.trigger(CHANGE);\n\t                }\n\t            }\n\t        },\n\n\t        _checkLoadedItem: function(tempItem, value) {\n\t            var dropdowntree = this._dropdowntree;\n\n\t            if (!dropdowntree._isNullorUndefined(value) && value!=="") {\n\t                if(dropdowntree._valueComparer(tempItem, value)){\n\t                    dropdowntree._preventChangeTrigger = true;\n\t                    tempItem.set("selected", true);\n\t                    dropdowntree._preventChangeTrigger = false;\n\t                } else if (tempItem.selected){\n\t                    dropdowntree.treeview.select(dropdowntree.treeview.findByUid(tempItem.uid));\n\t                }\n\n\t            } else if (!value && tempItem.selected){\n\t                dropdowntree.treeview.select(dropdowntree.treeview.findByUid(tempItem.uid));\n\t            }\n\t        }\n\t    });\n\n\t    var MultipleSelection = kendo.Class.extend({\n\t        init: function(view) {\n\t            this._dropdowntree = view;\n\t        },\n\n\t        _initWrapper: function() {\n\t            var dropdowntree = this._dropdowntree;\n\n\t            this._tagTemplate();\n\t            dropdowntree.element.attr("multiple", "multiple").hide();\n\t            this._wrapper();\n\t            dropdowntree._tags = new ObservableArray([]);\n\t            dropdowntree._multipleTags = new ObservableArray([]);\n\t            this._tagList();\n\t            dropdowntree.span = $(\'<span unselectable="on" class="k-input">&nbsp;</span>\').insertAfter(dropdowntree.tagList);\n\t            dropdowntree._inputWrapper = $(dropdowntree.wrapper[0].firstChild);\n\t        },\n\n\t        _preselect: function(data, value){\n\t            var dropdowntree = this._dropdowntree;\n\t            var valueToSelect = value || dropdowntree.options.value;\n\n\t            if (!$.isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n\t                data = [data];\n\t            }\n\n\t            if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !dropdowntree.options.dataValueField) {\n\t                dropdowntree.dataSource.data(data);\n\n\t                dropdowntree.value(valueToSelect);\n\t            }\n\t        },\n\n\t        _tagTemplate: function() {\n\t            var dropdowntree = this._dropdowntree;\n\t            var options = dropdowntree.options;\n\t            var tagTemplate = options.valueTemplate;\n\t            var isMultiple = options.tagMode === "multiple";\n\t            var singleTag = options.messages.singleTag;\n\n\t            tagTemplate = tagTemplate ? kendo.template(tagTemplate) : dropdowntree.valueTemplate;\n\n\t            dropdowntree.valueTemplate = function(data) {\n\t                if (isMultiple) {\n\t                    return \'<li class="k-button \' +\n\t                    ((data.enabled === false) ? "k-state-disabled" : "") +\n\t                    \'" unselectable="on" role="option" \' +\n\t                    ((data.enabled === false) ? \'aria-disabled="true"\' : \'\') +\n\t                    \'>\' +\n\t                        \'<span unselectable="on">\' + tagTemplate(data) + \'</span>\' +\n\t                        \'<span title="\' + dropdowntree.options.messages.deleteTag + \'" aria-label="\' + dropdowntree.options.messages.deleteTag + \'" class="k-select">\' +\n\t                            \'<span class="k-icon k-i-close"></span>\' +\n\t                        \'</span>\' +\n\t                    \'</li>\';\n\t                }\n\n\t                return \'<li class="k-button" unselectable="on" role="option">\' +\n\t                        \'<span unselectable="on" data-bind="text: tags.length"></span>\' +\n\t                        \'<span unselectable="on">&nbsp;\' + singleTag +\'</span>\' +\n\t                        \'</li>\';\n\t            };\n\t        },\n\n\t        _wrapper: function() {\n\t            var dropdowntree = this._dropdowntree,\n\t                element = dropdowntree.element,\n\t                wrapper = element.parent("span.k-dropdowntree");\n\n\t            if (!wrapper[0]) {\n\t                wrapper = element.wrap(\'<div class="k-widget k-dropdowntree" unselectable="on" />\').parent();\n\t                wrapper[0].style.cssText = element[0].style.cssText;\n\t                wrapper[0].title = element[0].title;\n\n\t                $(\'<div class="k-multiselect-wrap k-floatwrap" unselectable="on" />\').insertBefore(element);\n\t            }\n\n\t            dropdowntree.wrapper = wrapper.addClass(element[0].className).css("display", "")\n\t                                   .attr({\n\t                                        role: "listbox",\n\t                                        "aria-activedescendant": kendo.guid(),\n\t                                        "aria-haspopup": true,\n\t                                        "aria-expanded": false\n\t                                   });\n\t            dropdowntree._innerWrapper = $(wrapper[0].firstChild);\n\t        },\n\n\t        _tagList: function() {\n\t            var dropdowntree = this._dropdowntree,\n\t                tagList = dropdowntree._innerWrapper.children("ul");\n\n\t            if (!tagList[0]) {\n\t                var isMultiple = dropdowntree.options.tagMode === "multiple";\n\t                var tagCollection = isMultiple ? "tags": "multipleTag";\n\t                tagList = $(\'<ul role="listbox" unselectable="on" data-template="tagTemplate" data-bind="source: \' + tagCollection + \'" class="k-reset"/>\').appendTo(dropdowntree._innerWrapper);\n\t            }\n\n\t            dropdowntree.tagList = tagList;\n\t            dropdowntree.tagList.attr(\'id\', kendo.guid() + "_tagList");\n\t            dropdowntree.wrapper.attr("aria-owns", dropdowntree.tagList.attr(\'id\'));\n\t            var viewModel = kendo.observable({\n\t                multipleTag: dropdowntree._multipleTags,\n\t                tags: dropdowntree._tags,\n\t                tagTemplate: dropdowntree.valueTemplate\n\t            });\n\t            kendo.bind(dropdowntree.tagList, viewModel);\n\t            dropdowntree.tagList.attr("data-stop", true);\n\t        },\n\n\t        _setValue: function(value) {\n\t            var dropdowntree = this._dropdowntree;\n\t            var oldValues = dropdowntree._values;\n\t            if (value === undefined || value === null) {\n\t                return dropdowntree._values.slice();\n\t            }\n\n\t            dropdowntree.setValue(value);\n\t            dropdowntree._valueMethodCalled = true;\n\t            if (value.length) {\n\t                this._removeValues(oldValues, value);\n\n\t                dropdowntree._checkItemByValue(value);\n\t            } else {\n\t                dropdowntree._clearTextAndValue();\n\t            }\n\n\t            dropdowntree._valueMethodCalled = false;\n\t            dropdowntree._toggleCloseVisibility();\n\t        },\n\n\t        _removeValues: function(oldValues, value) {\n\t            var dropdowntree = this._dropdowntree;\n\t            var removedValues = this._getNewValues(oldValues, value);\n\n\t            for (var idx = 0; idx < removedValues.length; idx++) {\n\t                for (var j = 0; j < dropdowntree._tags.length; j++) {\n\t                    if (dropdowntree._valueComparer(dropdowntree._tags[j],removedValues[idx])){\n\t                        dropdowntree._uncheckItemByUid(dropdowntree._tags[j].uid);\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _getNewValues: function(oldValues, value){\n\t            var removedValues = [];\n\n\t            for (var idx = 0; idx < oldValues.length; idx++) {\n\t                if(value.indexOf(oldValues[idx]) === -1){\n\t                    removedValues.push(oldValues[idx]);\n\t                }\n\t            }\n\n\t            return removedValues;\n\t        },\n\n\t        _clearValue: function() {\n\t            var dropdowntree = this._dropdowntree;\n\t            var tagsArray = dropdowntree._tags.slice();\n\n\t            for (var idx = 0; idx < tagsArray.length; idx++) {\n\t                var uid = tagsArray[idx].uid;\n\t                dropdowntree._preventChangeTrigger = true;\n\t                dropdowntree._uncheckItemByUid(uid);\n\t            }\n\n\t            if (tagsArray.length) {\n\t                dropdowntree._preventChangeTrigger = false;\n\t                if(!dropdowntree._valueMethodCalled){\n\t                    dropdowntree.trigger(CHANGE);\n\t                }\n\t            }\n\t        },\n\n\t        _checkLoadedItem: function(tempItem, value) {\n\t            var dropdowntree = this._dropdowntree;\n\n\t            if (dropdowntree._noInitialValue && tempItem.checked) {\n\t                dropdowntree._checkValue(tempItem);\n\t                return;\n\t            }\n\n\t            if ((value.length || this._isDataSourceSet) &&\n\t                (value.indexOf(dropdowntree._currentValue(tempItem)) !== -1 || value.indexOf(tempItem)) !== -1 &&\n\t                !this._findTag(dropdowntree._currentValue(tempItem))) {\n\t                if (tempItem.checked) {\n\t                    dropdowntree._checkValue(tempItem);\n\t                } else {\n\t                    dropdowntree._preventChangeTrigger = true;\n\t                    tempItem.set("checked", true);\n\t                    dropdowntree._preventChangeTrigger = false;\n\t                }\n\t            }\n\t        },\n\n\t        _findTag: function(tempItemValue) {\n\t            var dropdowntree = this._dropdowntree;\n\n\t            return dropdowntree._tags.find(function(item) {\n\t                return dropdowntree._valueComparer(item, tempItemValue);\n\t            });\n\t        }\n\t    });\n\n\t    kendo.ui.DropDownTree.SingleSelection = SingleSelection;\n\t    kendo.ui.DropDownTree.MultipleSelection = MultipleSelection;\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./dropdowntree/treeview */ "./node_modules/@progress/kendo-ui/js/dropdowntree/treeview.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.dropdowntree.js?')},"./node_modules/@progress/kendo-ui/js/kendo.editable.js":
/*!**************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.editable.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1154);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.dropdownlist */ "./node_modules/@progress/kendo-ui/js/kendo.dropdownlist.js");\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.validator */ "./node_modules/@progress/kendo-ui/js/kendo.validator.js");\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.binder */ "./node_modules/@progress/kendo-ui/js/kendo.binder.js");\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.datepicker */ "./node_modules/@progress/kendo-ui/js/kendo.datepicker.js");\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1022), __webpack_require__(1138), __webpack_require__(1155), __webpack_require__(1025), __webpack_require__(1076) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "editable",\n\t    name: "Editable",\n\t    category: "framework",\n\t    depends: [ "dropdownlist", "datepicker", "numerictextbox", "validator", "binder" ],\n\t    hidden: true\n\t};\n\n\t/* jshint eqnull: true */\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        extend = $.extend,\n\t        oldIE = kendo.support.browser.msie && kendo.support.browser.version < 9,\n\t        isFunction = kendo.isFunction,\n\t        isPlainObject = $.isPlainObject,\n\t        inArray = $.inArray,\n\t        POINT = ".",\n\t        AUTOCOMPLETEVALUE = "off",\n\t        nameSpecialCharRegExp = /("|\\%|\'|\\[|\\]|\\$|\\.|\\,|\\:|\\;|\\+|\\*|\\&|\\!|\\#|\\(|\\)|<|>|\\=|\\?|\\@|\\^|\\{|\\}|\\~|\\/|\\||`)/g,\n\t        ERRORTEMPLATE = \'<div class="k-tooltip k-tooltip-error k-validator-tooltip">\' +\n\t            \'<span class="k-tooltip-icon k-icon k-i-warning"></span>\' +\n\t            \'<span class="k-tooltip-content">#= message #</span>\' +\n\t            \'<span class="k-callout k-callout-n"></span>\' +\n\t        \'</div>\',\n\t        CHANGE = "change";\n\t    var EQUAL_SET = "equalSet";\n\t    var specialRules = ["url", "email", "number", "date", "boolean"];\n\n\t    function fieldType(field) {\n\t        field = field != null ? field : "";\n\t        return field.type || $.type(field) || "string";\n\t    }\n\n\t    function convertToValueBinding(container) {\n\t        container.find(":input:not(:button, .k-combobox .k-input, [" + kendo.attr("role") + "=listbox], [" + kendo.attr("role") + "=upload], [" + kendo.attr("skip") + "], [type=file])").each(function() {\n\t            var bindAttr = kendo.attr("bind"),\n\t                binding = this.getAttribute(bindAttr) || "",\n\t                bindingName = this.type === "checkbox" || this.type === "radio" ? "checked:" : "value:",\n\t                fieldName = this.name;\n\n\t            if (binding.indexOf(bindingName) === -1 && fieldName) {\n\t                binding += (binding.length ? "," : "") + bindingName + fieldName;\n\n\t                $(this).attr(bindAttr, binding);\n\t            }\n\t        });\n\t    }\n\n\t    function createAttributes(options) {\n\t        var field = (options.model.fields || options.model)[options.field],\n\t            type = fieldType(field),\n\t            validation = field ? field.validation : {},\n\t            attributes = field ? field.attributes : {},\n\t            ruleName,\n\t            DATATYPE = kendo.attr("type"),\n\t            BINDING = kendo.attr("bind"),\n\t            rule,\n\t            attr = {\n\t                id: options.id || options.field,\n\t                name: options.field,\n\t                title: options.title ? options.title : options.field\n\t            };\n\n\t        for (ruleName in validation) {\n\t            rule = validation[ruleName];\n\n\t            if (inArray(ruleName, specialRules) >= 0) {\n\t                attr[DATATYPE] = ruleName;\n\t            } else if (!isFunction(rule)) {\n\t                var culture = kendo.getCulture();\n\n\t                if (typeof rule === "number" && culture.name.length) {\n\t                    var numberFormat = culture.numberFormat;\n\t                    var stringRule = rule.toString()\n\t                        .replace(POINT, numberFormat[POINT]);\n\n\t                    attr[ruleName] = stringRule;\n\t                } else {\n\t                    attr[ruleName] = isPlainObject(rule) ? rule.value || ruleName : rule;\n\t                }\n\t            }\n\n\t            attr[kendo.attr(ruleName + "-msg")] = rule.message;\n\n\t            attr.autocomplete = AUTOCOMPLETEVALUE;\n\t        }\n\n\t        for (var attributeName in attributes) {\n\t            attr[attributeName] = attributes[attributeName];\n\t        }\n\n\t        if (inArray(type, specialRules) >= 0) {\n\t            attr[DATATYPE] = type;\n\t        }\n\n\t        attr[BINDING] = ("value:") + options.field;\n\n\t        return attr;\n\t    }\n\n\t    function addIdAttribute(container, attr) {\n\t        var id = container.attr("id");\n\n\t        if (id) {\n\t            attr.id = id;\n\t            container.removeAttr("id");\n\t        }\n\n\t        return attr;\n\t    }\n\n\t    function convertItems(items) {\n\t        var idx,\n\t            length,\n\t            item,\n\t            value,\n\t            text,\n\t            result;\n\n\t        if (items && items.length) {\n\t            result = [];\n\t            for (idx = 0, length = items.length; idx < length; idx++) {\n\t                item = items[idx];\n\t                text = item.text || item.value || item;\n\t                value = item.value == null ? (item.text || item) : item.value;\n\n\t                result[idx] = { text: text, value: value };\n\t            }\n\t        }\n\t        return result;\n\t    }\n\n\t    var kendoEditors = [\n\t        "AutoComplete", "ColorPicker", "ComboBox", "DateInput",\n\t        "DatePicker", "DateTimePicker", "DropDownTree",\n\t        "Editor", "MaskedTextBox", "MultiColumnComboBox","MultiSelect",\n\t        "NumericTextBox", "Rating", "Slider", "Switch", "TimePicker", "DropDownList"\n\t    ];\n\n\t    var editors = {\n\t        "number": function(container, options) {\n\t            var attr = createAttributes(options);\n\t            $(\'<input type="text"/>\').attr(attr).appendTo(container).kendoNumericTextBox({ format: options.format });\n\t            $(\'<span \' + kendo.attr("for") + \'="\' + options.field + \'" class="k-invalid-msg k-hidden"/>\').appendTo(container);\n\t        },\n\t        "date": function(container, options) {\n\t            var attr = createAttributes(options),\n\t                format = options.format;\n\n\t            if (format) {\n\t                format = kendo._extractFormat(format);\n\t            }\n\n\t            attr[kendo.attr("format")] = format;\n\n\t            $(\'<input type="text"/>\').attr(attr).appendTo(container).kendoDatePicker({ format: options.format });\n\t            $(\'<span \' + kendo.attr("for") + \'="\' + options.field + \'" class="k-invalid-msg k-hidden"/>\').appendTo(container);\n\t        },\n\t        "string": function(container, options) {\n\t            var attr = createAttributes(options);\n\n\t            $(\'<input type="text" class="k-textbox"/>\').attr(attr).appendTo(container);\n\t        },\n\t        "boolean": function(container, options) {\n\t            var attr = createAttributes(options);\n\t            $(\'<input type="checkbox" class="k-checkbox" />\').attr(attr).appendTo(container);\n\t        },\n\t        "values": function(container, options) {\n\t            var attr = createAttributes(options);\n\t            var items = kendo.stringify(convertItems(options.values));\n\t            $(\'<select \' + kendo.attr("text-field") + \'="text"\' + kendo.attr("value-field") + \'="value"\' +\n\t                kendo.attr("source") + "=\\\'" + (items ? items.replace(/\\\'/g,"&apos;") : items) +\n\t                "\\\'" + kendo.attr("role") + \'="dropdownlist"/>\') .attr(attr).appendTo(container);\n\t            $(\'<span \' + kendo.attr("for") + \'="\' + options.field + \'" class="k-invalid-msg  k-hidden"/>\').appendTo(container);\n\t        },\n\t        "kendoEditor": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            var type = options.editor;\n\t            var tag = type === "Editor" ? "<textarea />" : "<input />";\n\t            var editor = "kendo" + type;\n\t            var editorOptions = options.editorOptions;\n\n\t            $(tag)\n\t                .attr(attr)\n\t                .appendTo(container)\n\t                [editor](editorOptions);\n\t        }\n\t    };\n\n\t    var mobileEditors = {\n\t        "number": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            attr = addIdAttribute(container, attr);\n\n\t            $(\'<input type="number"/>\').attr(attr).appendTo(container);\n\t        },\n\t        "date": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            attr = addIdAttribute(container, attr);\n\n\t            $(\'<input type="date"/>\').attr(attr).appendTo(container);\n\t        },\n\t        "string": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            attr = addIdAttribute(container, attr);\n\n\t            $(\'<input type="text" />\').attr(attr).appendTo(container);\n\t        },\n\t        "boolean": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            attr = addIdAttribute(container, attr);\n\n\t            $(\'<input type="checkbox" />\').attr(attr).appendTo(container);\n\t        },\n\t        "values": function (container, options) {\n\t            var attr = createAttributes(options);\n\t            var items = options.values;\n\t            var select = $(\'<select />\');\n\n\t            attr = addIdAttribute(container, attr);\n\n\t            for (var index in items) {\n\t                $(\'<option value="\' + items[index].value + \'">\' + items[index].text + \'</option>\').appendTo(select);\n\t            }\n\n\t            select.attr(attr).appendTo(container);\n\t        }\n\t    };\n\n\t    function addValidationRules(modelField, rules) {\n\t        var validation = modelField ? (modelField.validation || {}) : {},\n\t            rule,\n\t            descriptor;\n\n\t        for (rule in validation) {\n\t            descriptor = validation[rule];\n\n\t            if (isPlainObject(descriptor) && descriptor.value) {\n\t                descriptor = descriptor.value;\n\t            }\n\n\t            if (isFunction(descriptor)) {\n\t                rules[rule] = descriptor;\n\t            }\n\t        }\n\t    }\n\n\t    var Editable = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            if (options.target) {\n\t                options.$angular = options.target.options.$angular;\n\n\t                if (options.target.pane) {\n\t                    that._isMobile = true;\n\t                }\n\t            }\n\t            Widget.fn.init.call(that, element, options);\n\t            that._validateProxy = $.proxy(that._validate, that);\n\t            that.refresh();\n\t        },\n\n\t        events: [CHANGE],\n\n\t        options: {\n\t            name: "Editable",\n\t            editors: editors,\n\t            mobileEditors: mobileEditors,\n\t            clearContainer: true,\n\t            validateOnBlur: true,\n\t            validationSummary: false,\n\t            errorTemplate: ERRORTEMPLATE,\n\t            skipFocus: false\n\t        },\n\n\t        editor: function(field, modelField) {\n\t            var that = this,\n\t                editors = that._isMobile ? mobileEditors : that.options.editors,\n\t                isObject = isPlainObject(field),\n\t                fieldName = isObject ? field.field : field,\n\t                model = that.options.model || {},\n\t                isValuesEditor = isObject && field.values,\n\t                type = isValuesEditor ? "values" : fieldType(modelField),\n\t                isCustomEditor = isObject && field.editor,\n\t                isKendoEditor = isObject && $.inArray(field.editor, kendoEditors) !== -1,\n\t                editor = isCustomEditor ? field.editor : editors[type],\n\t                container = that.element.find("[" + kendo.attr("container-for") + "=" + fieldName.replace(nameSpecialCharRegExp, "\\\\$1")+ "]");\n\n\t            editor = editor ? editor : editors.string;\n\n\t            if (isKendoEditor) {\n\t                editor = editors.kendoEditor;\n\t            } else if (isCustomEditor && typeof field.editor === "string") {\n\t                editor = function(container) {\n\t                    container.append(field.editor);\n\t                };\n\t            }\n\n\t            container = container.length ? container : that.element;\n\t            editor(container, extend(true, {}, isObject ? field : { field: fieldName }, { model: model }));\n\t        },\n\n\t        _validate: function(e) {\n\t            var that = this,\n\t                input,\n\t                value = e.value,\n\t                preventChangeTrigger = that._validationEventInProgress,\n\t                values = {},\n\t                bindAttribute = kendo.attr("bind"),\n\t                fieldName = e.field.replace(nameSpecialCharRegExp, "\\\\$1"),\n\t                bindingRegex = new RegExp("(value|checked)\\\\s*:\\\\s*" + fieldName + "\\\\s*(,|$)");\n\n\t            values[e.field] = e.value;\n\n\t            input = $(\':input[\' + bindAttribute + \'*="\' + fieldName + \'"]\', that.element)\n\t                .filter("[" + kendo.attr("validate") + "!=\'false\']").filter(function() {\n\t                   return bindingRegex.test($(this).attr(bindAttribute));\n\t                });\n\t            if (input.length > 1) {\n\t                input = input.filter(function () {\n\t                    var element = $(this);\n\t                    return !element.is(":radio") || element.val() == value;\n\t                });\n\t            }\n\n\t            try {\n\t                that._validationEventInProgress = true;\n\n\t                if (!that.validatable.validateInput(input) || (!preventChangeTrigger && that.trigger(CHANGE, { values: values }))) {\n\t                    e.preventDefault();\n\t                }\n\n\t            } finally {\n\t                that._validationEventInProgress = false;\n\t            }\n\t        },\n\n\t        end: function() {\n\t            return this.validatable.validate();\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            that.angular("cleanup", function(){\n\t                return { elements: that.element };\n\t            });\n\n\t            Widget.fn.destroy.call(that);\n\n\t            that.options.model.unbind("set", that._validateProxy);\n\t            that.options.model.unbind(EQUAL_SET, that._validateProxy);\n\n\t            kendo.unbind(that.element);\n\n\t            if (that.validatable) {\n\t                that.validatable.destroy();\n\t            }\n\t            kendo.destroy(that.element);\n\n\t            that.element.removeData("kendoValidator");\n\n\t            if (that.element.is("[" + kendo.attr("role") + "=editable]")) {\n\t                that.element.removeAttr(kendo.attr("role"));\n\t            }\n\t        },\n\n\t        refresh: function() {\n\t            var that = this,\n\t                idx,\n\t                length,\n\t                fields = that.options.fields || [],\n\t                container = that.options.clearContainer ? that.element.empty() : that.element,\n\t                model = that.options.model || {},\n\t                rules = {},\n\t                field,\n\t                isObject,\n\t                fieldName,\n\t                modelField,\n\t                modelFields;\n\n\t            if (!$.isArray(fields)) {\n\t                fields = [fields];\n\t            }\n\n\t            for (idx = 0, length = fields.length; idx < length; idx++) {\n\t                 field = fields[idx];\n\t                 isObject = isPlainObject(field);\n\t                 fieldName = isObject ? field.field : field;\n\t                 modelField = (model.fields || model)[fieldName];\n\n\t                 addValidationRules(modelField, rules);\n\n\t                 that.editor(field, modelField);\n\t            }\n\n\t            if (that.options.target) {\n\t                that.angular("compile", function(){\n\t                    return {\n\t                        elements: container,\n\t                        data: container.map(function() { return { dataItem: model }; })\n\t                    };\n\t                });\n\t            }\n\n\t            if (!length) {\n\t                modelFields = model.fields || model;\n\t                for (fieldName in modelFields) {\n\t                    addValidationRules(modelFields[fieldName], rules);\n\t               }\n\t            }\n\n\t            convertToValueBinding(container);\n\n\t            if (that.validatable) {\n\t                that.validatable.destroy();\n\t            }\n\n\t            kendo.bind(container, that.options.model);\n\n\t            if (that.options.validateOnBlur) {\n\t                that.options.model\n\t                    .unbind("set", that._validateProxy)\n\t                    .bind("set", that._validateProxy);\n\n\t                that.options.model\n\t                    .unbind(EQUAL_SET, that._validateProxy)\n\t                    .bind(EQUAL_SET, that._validateProxy);\n\t            }\n\n\t            that.validatable = new kendo.ui.Validator(container, {\n\t                validateOnBlur: that.options.validateOnBlur,\n\t                validationSummary: that.options.validationSummary,\n\t                errorTemplate: that.options.errorTemplate || undefined,\n\t                rules: rules });\n\n\t            if (!that.options.skipFocus) {\n\t                var focusable = container.find(":kendoFocusable").eq(0).focus();\n\t                if (oldIE) {\n\t                    focusable.focus();\n\t                }\n\t            }\n\t        }\n\t   });\n\n\t   ui.plugin(Editable);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.numerictextbox */ "./node_modules/@progress/kendo-ui/js/kendo.numerictextbox.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.editable.js?')},"./node_modules/@progress/kendo-ui/js/kendo.editor.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.editor.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1156);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.combobox */ "./node_modules/@progress/kendo-ui/js/kendo.combobox.js");\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.dropdownlist */ "./node_modules/@progress/kendo-ui/js/kendo.dropdownlist.js");\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.numerictextbox */ "./node_modules/@progress/kendo-ui/js/kendo.numerictextbox.js");\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(1021), __webpack_require__(1022), __webpack_require__(1158), __webpack_require__(1159), __webpack_require__(1160), __webpack_require__(1161), __webpack_require__(1155),\n\n\t        __webpack_require__(1162),\n\t        __webpack_require__(1163),\n\t        __webpack_require__(1164),\n\t        __webpack_require__(1165),\n\t        __webpack_require__(1166),\n\t        __webpack_require__(1167),\n\t        __webpack_require__(1168),\n\t        __webpack_require__(1169),\n\t        __webpack_require__(1170),\n\n\t        __webpack_require__(1171),\n\t        __webpack_require__(1172),\n\t        __webpack_require__(1173),\n\t        __webpack_require__(1174),\n\t        __webpack_require__(1175),\n\t        __webpack_require__(1157),\n\t        __webpack_require__(1176),\n\t        __webpack_require__(1177),\n\t        __webpack_require__(1178),\n\t        __webpack_require__(1179),\n\t        __webpack_require__(1180),\n\t        __webpack_require__(1181),\n\t        __webpack_require__(1182),\n\t        __webpack_require__(1183),\n\t        __webpack_require__(1184),\n\t        __webpack_require__(1185),\n\t        __webpack_require__(1186),\n\t        __webpack_require__(1187),\n\t        __webpack_require__(1188),\n\t        __webpack_require__(1189),\n\n\t        __webpack_require__(1190),\n\t        __webpack_require__(1191),\n\t        __webpack_require__(1192),\n\t        __webpack_require__(1193),\n\t        __webpack_require__(1194),\n\t        __webpack_require__(1195)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t    var __meta__ = { // jshint ignore:line\n\t        id: "editor",\n\t        name: "Editor",\n\t        category: "web",\n\t        description: "Rich text editor component",\n\t        depends: [ "combobox", "dropdownlist", "window", "colorpicker" ],\n\t        features: [ {\n\t            id: "editor-imagebrowser",\n\t            name: "Image Browser",\n\t            description: "Support for uploading and inserting images",\n\t            depends: [ "imagebrowser" ]\n\t        }, {\n\t            id: "editor-resizable",\n\t            name: "Resize handle",\n\t            description: "Support for resizing the content area via a resize handle",\n\t            depends: [ "resizable" ]\n\t        }, {\n\t            id: "editor-tablewizard",\n\t            name: "Table wizard dialog",\n\t            description: "Support for table properties configuration",\n\t            depends: [ "tabstrip", "button", "numerictextbox" ]\n\t        }, {\n\t            id: "editor-pdf-export",\n\t            name: "PDF export",\n\t            description: "Export Editor content as PDF",\n\t            depends: [ "pdf", "drawing" ]\n\t        }]\n\t    };\n\n\t\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/import */ "./node_modules/@progress/kendo-ui/js/editor/plugins/import.js");\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.resizable */ "./node_modules/@progress/kendo-ui/js/kendo.resizable.js");\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.window */ "./node_modules/@progress/kendo-ui/js/kendo.window.js");\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.colorpicker */ "./node_modules/@progress/kendo-ui/js/kendo.colorpicker.js");\n\n/***/ }),\n\n/***/ 1161:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.imagebrowser */ "./node_modules/@progress/kendo-ui/js/kendo.imagebrowser.js");\n\n/***/ }),\n\n/***/ 1162:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./util/undoredostack */ "./node_modules/@progress/kendo-ui/js/util/undoredostack.js");\n\n/***/ }),\n\n/***/ 1163:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/main */ "./node_modules/@progress/kendo-ui/js/editor/main.js");\n\n/***/ }),\n\n/***/ 1164:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/dom */ "./node_modules/@progress/kendo-ui/js/editor/dom.js");\n\n/***/ }),\n\n/***/ 1165:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/serializer */ "./node_modules/@progress/kendo-ui/js/editor/serializer.js");\n\n/***/ }),\n\n/***/ 1166:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/range */ "./node_modules/@progress/kendo-ui/js/editor/range.js");\n\n/***/ }),\n\n/***/ 1167:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/command */ "./node_modules/@progress/kendo-ui/js/editor/command.js");\n\n/***/ }),\n\n/***/ 1168:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/components */ "./node_modules/@progress/kendo-ui/js/editor/components.js");\n\n/***/ }),\n\n/***/ 1169:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/toolbar */ "./node_modules/@progress/kendo-ui/js/editor/toolbar.js");\n\n/***/ }),\n\n/***/ 1170:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/immutables */ "./node_modules/@progress/kendo-ui/js/editor/immutables.js");\n\n/***/ }),\n\n/***/ 1171:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/viewhtml */ "./node_modules/@progress/kendo-ui/js/editor/plugins/viewhtml.js");\n\n/***/ }),\n\n/***/ 1172:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/link */ "./node_modules/@progress/kendo-ui/js/editor/plugins/link.js");\n\n/***/ }),\n\n/***/ 1173:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/lists */ "./node_modules/@progress/kendo-ui/js/editor/plugins/lists.js");\n\n/***/ }),\n\n/***/ 1174:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/formatting */ "./node_modules/@progress/kendo-ui/js/editor/plugins/formatting.js");\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/image */ "./node_modules/@progress/kendo-ui/js/editor/plugins/image.js");\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/insert */ "./node_modules/@progress/kendo-ui/js/editor/plugins/insert.js");\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/export */ "./node_modules/@progress/kendo-ui/js/editor/plugins/export.js");\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/indent */ "./node_modules/@progress/kendo-ui/js/editor/plugins/indent.js");\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/linebreak */ "./node_modules/@progress/kendo-ui/js/editor/plugins/linebreak.js");\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/format */ "./node_modules/@progress/kendo-ui/js/editor/plugins/format.js");\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/inlineformat */ "./node_modules/@progress/kendo-ui/js/editor/plugins/inlineformat.js");\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/formatblock */ "./node_modules/@progress/kendo-ui/js/editor/plugins/formatblock.js");\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/file */ "./node_modules/@progress/kendo-ui/js/editor/plugins/file.js");\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/tables */ "./node_modules/@progress/kendo-ui/js/editor/plugins/tables.js");\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/clipboard */ "./node_modules/@progress/kendo-ui/js/editor/plugins/clipboard.js");\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/keyboard */ "./node_modules/@progress/kendo-ui/js/editor/plugins/keyboard.js");\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/exportpdf */ "./node_modules/@progress/kendo-ui/js/editor/plugins/exportpdf.js");\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/print */ "./node_modules/@progress/kendo-ui/js/editor/plugins/print.js");\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/plugins/formatpainter */ "./node_modules/@progress/kendo-ui/js/editor/plugins/formatpainter.js");\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/resizing/column-resizing */ "./node_modules/@progress/kendo-ui/js/editor/resizing/column-resizing.js");\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/resizing/row-resizing */ "./node_modules/@progress/kendo-ui/js/editor/resizing/row-resizing.js");\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/resizing/table-resizing */ "./node_modules/@progress/kendo-ui/js/editor/resizing/table-resizing.js");\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/resizing/table-resize-handle */ "./node_modules/@progress/kendo-ui/js/editor/resizing/table-resize-handle.js");\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/table-wizard/table-wizard-command */ "./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-command.js");\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./editor/table-wizard/table-wizard-dialog */ "./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-dialog.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.editor.js?')},"./node_modules/@progress/kendo-ui/js/kendo.excel.js":
/*!***********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.excel.js ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1196);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1197), __webpack_require__(1198) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "excel",\n\t    name: "Excel export",\n\t    category: "framework",\n\t    advanced: true,\n\t    mixin: true,\n\t    depends: [ "data", "ooxml" ]\n\t};\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./excel/main */ "./node_modules/@progress/kendo-ui/js/excel/main.js");\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./excel/mixins */ "./node_modules/@progress/kendo-ui/js/excel/mixins.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.excel.js?')}}]);