(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"./node_modules/@progress/kendo-ui/js/editor/toolbar.js":
/*!**************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/editor/toolbar.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(995);\n\tmodule.exports = __webpack_require__(995);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 940:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./range */ "./node_modules/@progress/kendo-ui/js/editor/range.js");\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(940) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function($,undefined) {\n\t    var kendo = window.kendo;\n\t    var ui = kendo.ui;\n\t    var editorNS = ui.editor;\n\t    var Widget = ui.Widget;\n\t    var extend = $.extend;\n\t    var proxy = $.proxy;\n\t    var keys = kendo.keys;\n\t    var NS = ".kendoEditor";\n\t    var EditorUtils = editorNS.EditorUtils;\n\t    var ToolTemplate = editorNS.ToolTemplate;\n\t    var Tool = editorNS.Tool;\n\t    var outerWidth = kendo._outerWidth;\n\t    var outerHeight = kendo._outerHeight;\n\t    var OVERFLOWANCHOR = "overflowAnchor";\n\n\t    var focusable = ".k-tool-group:visible .k-tool:not(.k-state-disabled)," +\n\t                    ".k-tool.k-overflow-anchor:visible," +\n\t                    ".k-tool-group:visible .k-colorpicker," +\n\t                    ".k-tool-group:visible .k-selectbox," +\n\t                    ".k-tool-group:visible .k-dropdown," +\n\t                    ".k-tool-group:visible .k-combobox .k-input";\n\n\t    var toolNamesByCssClass = {\n\t        "k-i-sup-script": "superscript",\n\t        "k-i-sub-script": "subscript",\n\t        "k-i-align-left": "justifyLeft",\n\t        "k-i-align-center": "justifyCenter",\n\t        "k-i-align-right": "justifyRight",\n\t        "k-i-align-justify": "justifyFull",\n\t        "k-i-list-unordered": "insertUnorderedList",\n\t        "k-i-list-ordered": "insertOrderedList",\n\t        "k-i-login": "import",\n\t        "k-i-indent-increase": "indent",\n\t        "k-i-indent-decrease": "outdent",\n\t        "k-i-link-horizontal": "createLink",\n\t        "k-i-unlink-horizontal": "unlink",\n\t        "k-i-image": "insertImage",\n\t        "k-i-file-add": "insertFile",\n\t        "k-i-html": "viewHtml",\n\t        "k-i-foreground-color": "foreColor",\n\t        "k-i-paint": "backColor",\n\t        "k-i-table-insert": "createTable",\n\t        "k-i-table-column-insert-left": "addColumnLeft",\n\t        "k-i-table-column-insert-right": "addColumnRight",\n\t        "k-i-table-row-insert-above": "addRowAbove",\n\t        "k-i-table-row-insert-below": "addRowBelow",\n\t        "k-i-table-row-delete": "deleteRow",\n\t        "k-i-table-column-delete": "deleteColumn",\n\t        "k-i-table-properties": "tableWizard",\n\t        "k-i-table-wizard": "tableWizardInsert",\n\t        "k-i-clear-css": "cleanFormatting",\n\t        "k-i-cells-merge-horizontally": "mergeCellsHorizontally",\n\t        "k-i-cells-merge-vertically": "mergeCellsVertically",\n\t        "k-i-cell-split-horizontally": "splitCellHorizontally",\n\t        "k-i-cell-split-vertically": "splitCellVertically",\n\t        "k-i-copy-format": "copyFormat",\n\t        "k-i-apply-format": "applyFormat"\n\t    };\n\n\t    var OverflowAnchorTool = Tool.extend({\n\t        initialize: function(ui, options) {\n\t            var toolbar = options.editor.toolbar;\n\n\t            ui.attr("aria-controls", options.editor.element.attr("id"))\n\t                .on("click", $.proxy(function() {\n\t                    this.overflowPopup.toggle();\n\t                }, toolbar));\n\t        },\n\n\t        options: {\n\t            name: OVERFLOWANCHOR\n\t        },\n\n\t        command: $.noop,\n\t        update: $.noop,\n\t        destroy: $.noop\n\n\t    });\n\n\t    EditorUtils.registerTool(OVERFLOWANCHOR, new OverflowAnchorTool({\n\t        key: "",\n\t        ctrl: true,\n\t        template: new ToolTemplate({ template: EditorUtils.overflowAnchorTemplate })\n\t    }));\n\n\t    var Toolbar = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            options = extend({}, options, { name: "EditorToolbar" });\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            if (options.popup) {\n\t                that._initPopup();\n\t            }\n\n\t            if (options.resizable && options.resizable.toolbar) {\n\t                that._resizeHandler = kendo.onResize(function() {\n\t                    that.resize(true);\n\t                });\n\n\t                that.element.addClass("k-toolbar-resizable");\n\t            }\n\t        },\n\n\t        events: [\n\t            "execute"\n\t        ],\n\n\t        groups: {\n\t            basic: ["bold", "italic", "underline", "strikethrough"],\n\t            scripts: ["subscript", "superscript" ],\n\t            alignment: ["justifyLeft", "justifyCenter", "justifyRight", "justifyFull" ],\n\t            links: ["insertImage", "insertFile", "createLink", "unlink"],\n\t            lists: ["insertUnorderedList", "insertOrderedList", "indent", "outdent"],\n\t            tablesInsert: ["createTable"],\n\t            tablesAddDelete: [ "addColumnLeft", "addColumnRight", "addRowAbove", "addRowBelow", "deleteRow", "deleteColumn" ],\n\t            tablesMerge: [ "mergeCellsHorizontally", "mergeCellsVertically", "splitCellHorizontally", "splitCellVertically" ],\n\t            advanced: [ "viewHtml", "cleanFormatting", "print", "pdf", "exportAs", "import"],\n\t            fonts: [ "fontName", "fontSize" ],\n\t            colors: [ "foreColor", "backColor" ],\n\t            formatPainter: [ "copyFormat", "applyFormat" ]\n\t        },\n\n\t        overflowFlaseTools: [ "formatting", "fontName", "fontSize", "foreColor", "backColor", "insertHtml" ],\n\n\t        _initPopup: function() {\n\t            var that = this;\n\t            this.window = $(this.element)\n\t                .wrap("<div class=\'editorToolbarWindow\' />")\n\t                .parent()\n\t                .prepend("<span class=\'k-editortoolbar-dragHandle\'><span class=\'k-icon k-i-handler-drag\'></span></span>")\n\t                .kendoWindow({\n\t                    title: false,\n\t                    resizable: false,\n\t                    draggable: {\n\t                        dragHandle: ".k-editortoolbar-dragHandle"\n\t                    },\n\t                    animation: {\n\t                        open: { effects: "fade:in" },\n\t                        close: { effects: "fade:out" }\n\t                    },\n\t                    minHeight: 42,\n\t                    visible: false,\n\t                    autoFocus: false,\n\t                    actions: [],\n\t                    dragend: function() {\n\t                        this._moved = true;\n\t                    }\n\t                })\n\t                .on("mousedown", function(e){\n\t                    if (!$(e.target).is(".k-icon")) {\n\t                        that.preventPopupHide = true;\n\t                    }\n\t                })\n\t                .on("focusout", function(){\n\t                    that.options.editor.element.focusout();\n\t                })\n\t                .data("kendoWindow");\n\t        },\n\n\t        _toggleOverflowStyles: function(element, show) {\n\t            element\n\t                .find("> li").toggleClass("k-item", show)\n\t                .find(".k-tool:not(.k-state-disabled), .k-overflow-button").toggleClass("k-overflow-button", show);\n\t        },\n\n\t        _initOverflowPopup: function(ui) {\n\t            var that = this;\n\t            var popupTemplate = "<ul class=\'k-editor-overflow-popup k-overflow-container k-list-container\'></ul>";\n\n\t            that.overflowPopup = $(popupTemplate).appendTo("body").kendoPopup({\n\t                anchor: ui,\n\t                origin: kendo.support.isRtl(that.element) ? "bottom left" : "bottom right",\n\t                position: kendo.support.isRtl(that.element) ? "top left" : "top right",\n\t                copyAnchorStyles: false,\n\t                open: function(e) {\n\t                    if (this.element.is(":empty")) {\n\t                        e.preventDefault();\n\t                    }\n\n\t                    that._toggleOverflowStyles(this.element, true);\n\t                    ui.attr("aria-expanded", true);\n\t                },\n\t                close: function() {\n\t                    ui.attr("aria-expanded", false);\n\t                },\n\t                activate: proxy(that.focusOverflowPopup, that)\n\t            }).data("kendoPopup");\n\t        },\n\n\t        items: function() {\n\t            var isResizable = this.options.resizable && this.options.resizable.toolbar,\n\t                popup, result;\n\n\t            result = this.element.children().find("> *, select");\n\n\t            if (isResizable) {\n\t                popup = this.overflowPopup;\n\t                result = result.add(popup.element.children().find("> *"));\n\t            }\n\n\t            return result;\n\t        },\n\n\t        focused: function() {\n\t            return this.element.find(".k-state-focused").length > 0 ||\n\t                    this.preventPopupHide ||\n\t                    (this.overflowPopup && this.overflowPopup.visible());\n\t        },\n\n\t        toolById: function(name) {\n\t            var id, tools = this.tools;\n\n\t            for (id in tools) {\n\t                if (id.toLowerCase() == name) {\n\t                    return tools[id];\n\t                }\n\t            }\n\t        },\n\n\t        toolGroupFor: function(toolName) {\n\t            var i, groups = this.groups;\n\n\t            if (this.isCustomTool(toolName)) {\n\t                return "custom";\n\t            }\n\n\t            for (i in groups) {\n\t                if ($.inArray(toolName, groups[i]) >= 0) {\n\t                    return i;\n\t                }\n\t            }\n\t        },\n\n\t        bindTo: function(editor) {\n\t            var that = this,\n\t                window = that.window;\n\n\t            // detach from editor that was previously listened to\n\t            if (that._editor) {\n\t                that._editor.unbind("select", proxy(that.resize, that));\n\t            }\n\n\t            that._editor = editor;\n\n\t            if (that.options.resizable && that.options.resizable.toolbar) {\n\t                editor.options.tools.push(OVERFLOWANCHOR);\n\t            }\n\n\t            // re-initialize the tools\n\t            that.tools = that.expandTools(editor.options.tools);\n\t            that.render();\n\n\t            that.element.find(".k-combobox .k-input").keydown(function(e) {\n\t                var combobox = $(this).closest(".k-combobox").data("kendoComboBox"),\n\t                    key = e.keyCode;\n\n\t                if (key == keys.RIGHT || key == keys.LEFT) {\n\t                    combobox.close();\n\t                } else if (key == keys.DOWN) {\n\t                    if (!combobox.dropDown.isOpened()) {\n\t                        e.stopImmediatePropagation();\n\t                        combobox.open();\n\t                    }\n\t                }\n\t            });\n\n\t            that._attachEvents();\n\n\t            that.items().each(function initializeTool() {\n\n\t                var toolName = that._toolName(this),\n\t                    tool = toolName !== "moreVertical" ? that.tools[toolName] : that.tools.overflowAnchor,\n\t                    options = tool && tool.options,\n\t                    messages = editor.options.messages,\n\t                    description = options && options.tooltip || messages[toolName],\n\t                    ui = $(this);\n\n\t                if (!tool || !tool.initialize) {\n\t                    return;\n\t                }\n\n\t                if (toolName == "fontSize" || toolName == "fontName") {\n\t                    var inheritText = messages[toolName + "Inherit"];\n\n\t                    ui.find("input").val(inheritText).end()\n\t                      .find("span.k-input").text(inheritText).end();\n\t                }\n\n\t                tool.initialize(ui, {\n\t                    title: that._appendShortcutSequence(description, tool),\n\t                    editor: that._editor\n\t                });\n\n\t                ui.closest(".k-widget", that.element).addClass("k-editor-widget");\n\n\t                ui.closest(".k-colorpicker", that.element).next(".k-colorpicker").addClass("k-editor-widget");\n\t            });\n\n\t            editor.bind("select", proxy(that.resize, that));\n\n\t            that.update();\n\n\t            if (window) {\n\t                window.wrapper.css({top: "", left: "", width: ""});\n\t            }\n\t        },\n\n\t        show: function() {\n\t            var that = this,\n\t                window = that.window,\n\t                editorOptions = that.options.editor,\n\t                wrapper, editorElement, editorOffset,\n\t                browser = kendo.support.browser;\n\n\t            if (window) {\n\t                wrapper = window.wrapper;\n\t                editorElement = editorOptions.element;\n\n\t                if (!wrapper.is(":visible") || !that.window.options.visible) {\n\n\t                    if (!wrapper[0].style.width) {\n\t                        wrapper.width(this._getWindowWidth());\n\t                    }\n\n\t                    // track content position when other parts of page change\n\t                    if (!window._moved) {\n\t                        editorOffset = editorElement.offset();\n\t                        wrapper.css({\n\t                            top: Math.max(0, parseInt(editorOffset.top, 10) - outerHeight(wrapper) - parseInt(that.window.element.css("padding-bottom"), 10)),\n\t                            left: Math.max(0, parseInt(editorOffset.left, 10))\n\t                        });\n\t                    }\n\n\t                    if ((browser.msie || browser.edge) && that._overlaps(editorElement)) {\n\t                        setTimeout(function() {\n\t                            window.open();\n\t                        }, 0);\n\t                    } else {\n\t                        window.open();\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _getWindowWidth: function(){\n\t            var that = this,\n\t                wrapper = that.window.wrapper,\n\t                editorElement = that.options.editor.element;\n\n\t            return outerWidth(editorElement) - parseInt(wrapper.css("border-left-width"), 10) - parseInt(wrapper.css("border-right-width"), 10);\n\t        },\n\n\t        _overlaps: function(box) {\n\t            var toolbarWrapper = this.window.wrapper,\n\t                toolbarWrapperOffset = toolbarWrapper.offset(),\n\t                toolbarWrapperLeft = toolbarWrapperOffset.left,\n\t                toolbarWrapperTop = toolbarWrapperOffset.top,\n\t                boxOffset = box.offset(),\n\t                boxOffsetLeft = boxOffset.left,\n\t                boxOffsetTop = boxOffset.top;\n\n\t            return !(boxOffsetLeft + box.width() < toolbarWrapperLeft ||\n\t                    boxOffsetLeft > toolbarWrapperLeft + toolbarWrapper.width() ||\n\t                    boxOffsetTop + box.height() < toolbarWrapperTop ||\n\t                    boxOffsetTop > toolbarWrapperTop + toolbarWrapper.height());\n\t        },\n\n\t        hide: function() {\n\t            if (this.window) {\n\t                this.window.close();\n\t            }\n\t        },\n\n\t        focus: function() {\n\t            var TABINDEX = "tabIndex";\n\t            var element = this.element;\n\t            var tabIndex = this._editor.element.attr(TABINDEX);\n\n\t            // Chrome can\'t focus something which has already been focused\n\t            element.attr(TABINDEX, tabIndex || 0).focus()\n\t                .find(focusable).first().focus();\n\n\t            if (!tabIndex && tabIndex !== 0) {\n\t                element.removeAttr(TABINDEX);\n\t            }\n\t        },\n\n\t        focusOverflowPopup: function() {\n\t            var TABINDEX = "tabIndex";\n\t            var element = this.overflowPopup.element;\n\t            var tabIndex = this._editor.element.attr(TABINDEX);\n\n\t            element.closest(".k-animation-container").addClass("k-overflow-wrapper");\n\n\t            element.attr(TABINDEX, tabIndex || 0)\n\t                .find(focusable).first().focus();\n\n\t            if (!tabIndex && tabIndex !== 0) {\n\t                element.removeAttr(TABINDEX);\n\t            }\n\t        },\n\n\t        _appendShortcutSequence: function(localizedText, tool) {\n\t            if (!tool.key) {\n\t                return localizedText;\n\t            }\n\n\t            var res = localizedText + " (";\n\n\t            if (tool.ctrl) {\n\t                res += "Ctrl + ";\n\t            }\n\n\t            if (tool.shift) {\n\t                res += "Shift + ";\n\t            }\n\n\t            if (tool.alt) {\n\t                res += "Alt + ";\n\t            }\n\n\t            res += tool.key + ")";\n\n\t            return res;\n\t        },\n\n\t        _nativeTools: [\n\t            "insertLineBreak",\n\t            "insertParagraph",\n\t            "redo",\n\t            "undo",\n\t            "autoLink"\n\t        ],\n\n\t        tools: {}, // tools collection is copied from defaultTools during initialization\n\n\t        isCustomTool: function(toolName) {\n\t            return !(toolName in kendo.ui.Editor.defaultTools);\n\t        },\n\n\t        // expand the tools parameter to contain tool options objects\n\t        expandTools: function(tools) {\n\t            var currentTool,\n\t                i,\n\t                nativeTools = this._nativeTools,\n\t                options,\n\t                defaultTools = kendo.deepExtend({}, kendo.ui.Editor.defaultTools),\n\t                result = {},\n\t                name;\n\n\t            for (i = 0; i < tools.length; i++) {\n\t                currentTool = tools[i];\n\t                name = currentTool.name;\n\n\t                if ($.isPlainObject(currentTool)) {\n\t                    if (name && defaultTools[name]) {\n\t                        // configured tool\n\t                        result[name] = extend({}, defaultTools[name]);\n\t                        extend(result[name].options, currentTool);\n\t                    } else {\n\t                        // custom tool\n\t                        options = extend({ cssClass: "k-i-gear", type: "button", title: "" }, currentTool);\n\t                        if (!options.name) {\n\t                            options.name = "custom";\n\t                        }\n\n\t                        options.cssClass = "k-" + options.name;\n\n\t                        if (!options.template && options.type == "button") {\n\t                            options.template = editorNS.EditorUtils.buttonTemplate;\n\t                            options.title = options.title || options.tooltip;\n\t                        }\n\n\t                        result[name] = {\n\t                            options: options\n\t                        };\n\t                    }\n\t                } else if (defaultTools[currentTool]) {\n\t                    // tool by name\n\t                    result[currentTool] = defaultTools[currentTool];\n\t                }\n\t            }\n\n\t            for (i = 0; i < nativeTools.length; i++) {\n\t                if (!result[nativeTools[i]]) {\n\t                    result[nativeTools[i]] = defaultTools[nativeTools[i]];\n\t                }\n\t            }\n\n\t            return result;\n\t        },\n\n\t        render: function() {\n\t            var that = this,\n\t                tools = that.tools,\n\t                options, template, toolElement,\n\t                toolName,\n\t                editorElement = that._editor.element,\n\t                element = that.element.empty(),\n\t                groupName, newGroupName,\n\t                toolConfig = that._editor.options.tools,\n\t                browser = kendo.support.browser,\n\t                group, i, groupPosition = 0,\n\t                resizable = that.options.resizable && that.options.resizable.toolbar,\n\t                overflowFlaseTools = this.overflowFlaseTools;\n\n\t            function stringify(template) {\n\t                var result = "";\n\n\t                if (template.getHtml) {\n\t                    result = template.getHtml();\n\t                } else {\n\t                    if (!$.isFunction(template)) {\n\t                        template = kendo.template(template);\n\t                    }\n\n\t                    result = template(options);\n\t                }\n\n\t                return kendo.trim(result);\n\t            }\n\n\t            function endGroup() {\n\t                if (group.children().length) {\n\t                    if (resizable) {\n\t                        group.data("position", groupPosition);\n\t                        groupPosition++;\n\t                    }\n\n\t                    group.appendTo(element);\n\t                }\n\t            }\n\n\t            function startGroup(toolName) {\n\t                if (toolName !== OVERFLOWANCHOR) {\n\t                    group = $("<li class=\'k-tool-group\' role=\'presentation\' />");\n\t                    group.data("overflow", $.inArray(toolName, overflowFlaseTools) === -1 ? true : false);\n\t                } else {\n\t                    group = $("<li class=\'k-overflow-tools\' />");\n\t                }\n\t            }\n\n\t            element.empty();\n\n\t            if (toolConfig.length) {\n\t                toolName = toolConfig[0].name || toolConfig[0];\n\t            }\n\t            startGroup(toolName, overflowFlaseTools);\n\n\t            for (i = 0; i < toolConfig.length; i++) {\n\t                toolName = toolConfig[i].name || toolConfig[i];\n\t                options = tools[toolName] && tools[toolName].options;\n\n\t                if (!options && $.isPlainObject(toolName)) {\n\t                    options = toolName;\n\t                }\n\n\t                template = options && options.template;\n\n\t                if (toolName == "break") {\n\t                    endGroup();\n\t                    $("<li class=\'k-row-break\' />").appendTo(that.element);\n\t                    startGroup(toolName, overflowFlaseTools);\n\t                }\n\n\t                if (!template) {\n\t                    continue;\n\t                }\n\n\t                newGroupName = that.toolGroupFor(toolName);\n\n\t                if (groupName != newGroupName || toolName == OVERFLOWANCHOR) {\n\t                    endGroup();\n\t                    startGroup(toolName, overflowFlaseTools);\n\t                    groupName = newGroupName;\n\t                }\n\n\t                if (toolName == OVERFLOWANCHOR) {\n\t                    template.options.title = that.options.messages.overflowAnchor;\n\t                }\n\n\t                template = stringify(template);\n\n\t                toolElement = $(template).appendTo(group);\n\n\t                if (newGroupName == "custom") {\n\t                    endGroup();\n\t                    startGroup(toolName, overflowFlaseTools);\n\t                }\n\n\t                if (options.exec && toolElement.hasClass("k-tool")) {\n\t                    toolElement.click(proxy(options.exec, editorElement[0]));\n\t                }\n\t            }\n\n\t            endGroup();\n\n\t            $(that.element).children(":has(> .k-tool)").not(".k-overflow-tools").addClass("k-button-group");\n\n\t            if (that.options.popup && browser.msie && browser.version < 9) {\n\t                that.window.wrapper.find("*").attr("unselectable", "on");\n\t            }\n\n\t            that.updateGroups();\n\n\t            if (resizable) {\n\t                that._initOverflowPopup(that.element.find(".k-overflow-anchor"));\n\t            }\n\n\t            that.angular("compile", function(){\n\t                return { elements: that.element };\n\t            });\n\t        },\n\n\t        updateGroups: function() {\n\t            $(this.element).children().not(".k-overflow-tools").each(function() {\n\t                $(this).children()\n\t                    .removeClass("k-group-start k-group-end")\n\t                    .first().addClass("k-group-start").end()\n\t                    .last().addClass("k-group-end").end();\n\t            });\n\t        },\n\n\t        decorateFrom: function(body) {\n\t            this.items().filter(".k-decorated")\n\t                .each(function() {\n\t                    var selectBox = $(this).data("kendoSelectBox");\n\n\t                    if (selectBox) {\n\t                        selectBox.decorate(body);\n\t                    }\n\t                });\n\t        },\n\n\t        destroy: function() {\n\t            Widget.fn.destroy.call(this);\n\n\t            var id, tools = this.tools;\n\n\t            for (id in tools) {\n\t                if (tools[id].destroy) {\n\t                    tools[id].destroy();\n\t                }\n\t            }\n\n\t            if (this.window) {\n\t                this.window.destroy();\n\t            }\n\n\t            if (this._resizeHandler) {\n\t                kendo.unbindResize(this._resizeHandler);\n\t            }\n\n\t            if (this.overflowPopup) {\n\t                this.overflowPopup.destroy();\n\t            }\n\t        },\n\n\t        _attachEvents: function() {\n\t            var that = this,\n\t                popupElement = that.overflowPopup ? that.overflowPopup.element : $([]);\n\n\t            that.attachToolsEvents(that.element.add(popupElement));\n\t        },\n\n\t        attachToolsEvents: function(element) {\n\t            var that = this,\n\t                buttons = "[role=button].k-tool",\n\t                enabledButtons = buttons + ":not(.k-state-disabled)",\n\t                disabledButtons = buttons + ".k-state-disabled",\n\t                dropdown = ".k-dropdown",\n\t                colorpicker = ".k-colorpicker",\n\t                editorTools = [buttons, dropdown, colorpicker].join(",");\n\n\t            element.off(NS)\n\t                .on("mouseenter" + NS, enabledButtons, function() { $(this).addClass("k-state-hover"); })\n\t                .on("mouseleave" + NS, enabledButtons, function() { $(this).removeClass("k-state-hover"); })\n\t                .on("mousedown" + NS, editorTools, function(e) {\n\t                    e.preventDefault();\n\t                })\n\t                .on("keydown" + NS, focusable, function(e) {\n\t                    var current = this;\n\t                    var resizable = that.options.resizable && that.options.resizable.toolbar;\n\t                    var direction = kendo.support.isRtl(that.element) ? -1 : 1;\n\t                    var focusableItems;\n\t                    var focusElement,\n\t                        currentContainer,\n\t                        keyCode = e.keyCode;\n\n\t                    function move(direction, container, constrain) {\n\t                        var tools = container.find(focusable);\n\t                        var index = tools.index(current) + direction;\n\n\t                        if (constrain) {\n\t                            index = Math.max(0, Math.min(tools.length - 1, index));\n\t                        }\n\n\t                        return tools[index];\n\t                    }\n\n\t                    if (keyCode == keys.RIGHT || keyCode == keys.LEFT) {\n\t                        if (!$(current).is(".k-dropdown")) {\n\t                            focusElement = move(keyCode == keys.RIGHT ? 1 * direction : -1 * direction, that.element, true);\n\t                        } else {\n\t                            focusElement = $(current);\n\t                        }\n\t                    } else if (resizable && (keyCode == keys.UP || keyCode == keys.DOWN)) {\n\t                        focusElement = move(keyCode == keys.DOWN ? 1 : -1, that.overflowPopup.element, true);\n\t                    } else if (keyCode == keys.HOME) {\n\t                        focusElement = that.element.find(focusable)[0];\n\t                        e.preventDefault();\n\t                    } else if (keyCode == keys.END) {\n\t                        focusableItems = that.element.find(focusable).filter(function () {\n\t                            return $(this).css(\'visibility\') !== \'hidden\';\n\t                        });\n\t                        focusElement = focusableItems[focusableItems.length - 1];\n\t                        e.preventDefault();\n\t                    } else if (keyCode == keys.ESC) {\n\t                        if (that.overflowPopup && that.overflowPopup.visible()) {\n\t                            that.overflowPopup.close();\n\t                        }\n\n\t                        focusElement = that._editor;\n\t                    } else if (keyCode == keys.TAB && !(e.ctrlKey || e.altKey)) {\n\t                        if (resizable) {\n\t                            currentContainer = $(current.parentElement).hasClass("k-overflow-tool-group") ? that.overflowPopup.element : that.element;\n\t                        } else {\n\t                            currentContainer = that.element;\n\t                        }\n\n\t                        // skip tabbing to disabled tools, and focus the editing area when running out of tools\n\t                        if (e.shiftKey) {\n\t                            focusElement = move(-1, currentContainer);\n\t                        } else {\n\t                            focusElement = move(1, currentContainer);\n\n\t                            if (!focusElement || $(focusElement).closest(".k-overflow-tools").css("visibility") === "hidden") {\n\t                                focusElement = that._editor;\n\t                            }\n\t                        }\n\t                    }\n\n\t                    if (focusElement) {\n\t                        e.preventDefault();\n\t                        focusElement.focus();\n\t                    }\n\n\t                    if ((keyCode === keys.ENTER || keyCode === keys.SPACEBAR) && ( $(current).is("button") || $(current).is("a") ) && !$(current).attr("href") ) {\n\t                        //anchors without href attribute do not respond to Enter key\n\t                        that._executeToolCommand(current, e);\n\t                    }\n\t                })\n\t                .on("click" + NS, enabledButtons, function(e) {\n\t                    that._executeToolCommand(this, e);\n\t                })\n\t                .on("click" + NS, disabledButtons, function(e) { e.preventDefault(); });\n\n\t        },\n\n\t        _executeToolCommand: function(toolElement, e) {\n\t            var that = this;\n\t            var button = $(toolElement);\n\t            e.preventDefault();\n\t            e.stopPropagation();\n\t            button.removeClass("k-state-hover");\n\t            if (!button.is("[data-popup]")) {\n\t                that._editor.exec(that._toolName(toolElement));\n\t            }\n\t        },\n\n\t        _toolName: function (element) {\n\t            if (!element) {\n\t                return;\n\t            }\n\n\t            var className = element.className;\n\n\t            if (/k-tool\\b/i.test(className)) {\n\t                className = element.firstChild.className;\n\t            }\n\n\t            var tool = $.grep(className.split(" "), function (x) {\n\t                return !/^k-(widget|tool|tool-icon|icon|state-hover|header|combobox|dropdown|selectbox|colorpicker)$/i.test(x);\n\t            });\n\n\t            if (tool[0]) {\n\t                var toolname = tool[0];\n\t                if (toolNamesByCssClass[toolname]) {\n\t                    toolname = toolNamesByCssClass[toolname];\n\t                }\n\t                if (toolname.indexOf("k-i-") >=0) {\n\t                    return kendo.toCamelCase(toolname.substring(toolname.indexOf("k-i-") + 4));\n\t                }\n\t                else {\n\t                    return toolname.substring(toolname.lastIndexOf("-") + 1);\n\t                }\n\t            }\n\t            return "custom";\n\t        },\n\n\t        refreshTools: function() {\n\t            var that = this,\n\t                editor = that._editor,\n\t                range = editor.getRange(),\n\t                nodes = editorNS.RangeUtils.textNodes(range),\n\t                immutables = editor.options.immutables,\n\t                immutablesContext = that._immutablesContext(range);\n\n\t            nodes = editorNS.Dom.filterBy(nodes, editorNS.Dom.htmlIndentSpace, true);\n\n\t            if (!nodes.length) {\n\t                nodes = [range.startContainer];\n\t            }\n\n\t            that.items().each(function() {\n\t                var tool = that.tools[that._toolName(this)];\n\t                if (tool) {\n\t                    var ui = $(this);\n\t                    if (tool.update) {\n\t                        tool.update(ui, nodes);\n\t                    }\n\n\t                    if (immutables) {\n\t                        that._updateImmutablesState(tool, ui, immutablesContext);\n\t                    }\n\t                }\n\t            });\n\t            this.update();\n\t        },\n\n\t        _immutablesContext: function(range) {\n\t            if (this._editor.options.immutables) {\n\t                if (range.collapsed) {\n\t                    return editorNS.Immutables.immutablesContext(range);\n\t                } else {\n\t                    return editorNS.RangeUtils.editableTextNodes(range).length === 0;\n\t                }\n\t            }\n\t        },\n\n\t        _updateImmutablesState: function(tool, ui, immutablesContext) {\n\t            var name = tool.name;\n\t            var uiElement = ui;\n\n\t            var trackImmutables = tool.options.trackImmutables;\n\t            if (trackImmutables === undefined) {\n\t                trackImmutables = $.inArray(name, editorNS.Immutables.toolsToBeUpdated) > -1;\n\t            }\n\n\t            if (trackImmutables) {\n\t                var display = immutablesContext ? "none" : "";\n\t                if (!ui.is(".k-tool")) {\n\t                    var uiData = ui.data();\n\t                    for (var key in uiData) {\n\t                        if (key.match(/^kendo[A-Z][a-zA-Z]*/)) {\n\t                            var widget = uiData[key];\n\t                            uiElement = widget.wrapper;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                uiElement.css("display", display);\n\t                var groupUi = uiElement.closest("li");\n\t                if (groupUi.children(":visible").length === 0) {\n\t                    groupUi.css("display", display);\n\t                }\n\t            }\n\t        },\n\n\t        update: function() {\n\t            this.updateGroups();\n\t        },\n\n\t        _resize: function(e) {\n\t            var containerWidth = e.width;\n\t            var resizable = this.options.resizable && this.options.resizable.toolbar;\n\t            var popup = this.overflowPopup;\n\t            var editorElement = this.options.editor.element;\n\t            var toolbarWindow = this.window;\n\n\t            this.refreshTools();\n\n\t            if (!resizable) {\n\t                return;\n\t            }\n\n\t            if(toolbarWindow) {\n\t                toolbarWindow.wrapper.width(this._getWindowWidth());\n\n\t                if(!toolbarWindow._moved) {\n\t                    toolbarWindow.wrapper.css({\n\t                        left: Math.max(0, parseInt(editorElement.offset().left, 10))\n\t                    });\n\t                }\n\t            }\n\n\t            if (popup.visible()) {\n\t                popup.close(true);\n\t            }\n\n\t            this._refreshWidths();\n\n\t            this._shrink(containerWidth);\n\t            this._stretch(containerWidth);\n\n\t            this._toggleOverflowStyles(this.element, false);\n\t            this._toggleOverflowStyles(this.overflowPopup.element, true);\n\n\t            this.element\n\t                .children("li.k-overflow-tools")\n\t                .css("visibility", popup.element.is(":empty") ? "hidden" : "visible");\n\t        },\n\n\t        _refreshWidths: function() {\n\t            this.element.children("li").each(function(idx, element) {\n\t                var group = $(element);\n\t                group.data("outerWidth", outerWidth(group, true));\n\t            });\n\t        },\n\n\t        _shrink: function(width) {\n\t            var group, visibleGroups;\n\n\t            if (width < this._groupsWidth()) {\n\t                visibleGroups = this._visibleGroups().filter(":not(.k-overflow-tools)");\n\n\t                for (var i = visibleGroups.length - 1; i >= 0; i--) {\n\t                    group = visibleGroups.eq(i);\n\t                    if (width > this._groupsWidth()) {\n\t                        break;\n\t                    } else {\n\t                        this._hideGroup(group);\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _stretch: function(width) {\n\t            var group, hiddenGroups;\n\n\t            if (width > this._groupsWidth()) {\n\t                hiddenGroups = this._hiddenGroups();\n\n\t                for (var i = 0; i < hiddenGroups.length ; i++) {\n\t                    group = hiddenGroups.eq(i);\n\t                    if (width < this._groupsWidth() || !this._showGroup(group, width)) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _hiddenGroups: function() {\n\t            var popup = this.overflowPopup;\n\n\t            var hiddenGroups = this.element.children("li.k-tool-group").filter(":hidden");\n\n\t            hiddenGroups = hiddenGroups.add(popup.element.children("li"));\n\n\t            hiddenGroups.sort(function(a, b) {\n\t                return ($(a).data("position") > $(b).data("position")) ? 1 : -1;\n\t            });\n\n\t            return hiddenGroups;\n\t        },\n\n\t        _visibleGroups: function() {\n\t            return this.element.children("li.k-tool-group, li.k-overflow-tools").filter(":visible");\n\t        },\n\n\t        _groupsWidth: function() {\n\t            var width = 0;\n\n\t            this._visibleGroups().each(function() {\n\t                width += $(this).data("outerWidth");\n\t            });\n\n\t            return Math.ceil(width);\n\t        },\n\n\t        _hideGroup: function(group) {\n\t            if (group.data("overflow")) {\n\t                var popup = this.overflowPopup;\n\t                group.detach().prependTo(popup.element).addClass("k-overflow-tool-group");\n\t            } else {\n\t                group.addClass("k-hidden");\n\t            }\n\t        },\n\n\t        _showGroup: function(group, width) {\n\t            var position, previous, groupWidth;\n\n\t            if (group.hasClass(\'k-state-disabled\')) {\n\t                return true;\n\t            }\n\n\t            if (group.hasClass("k-overflow-tool-group")) {\n\t                groupWidth = group.data("outerWidth");\n\t            } else {\n\t                group.removeClass("k-hidden");\n\t                groupWidth = outerWidth(group, true);\n\t                group.addClass("k-hidden");\n\t            }\n\n\t            if (group.length && width > this._groupsWidth() + groupWidth) {\n\t                if (group.hasClass("k-overflow-tool-group")) {\n\t                    position = group.data("position");\n\n\t                    if (position === 0) {\n\t                        group.detach().prependTo(this.element);\n\t                    } else {\n\t                        previous = this.element.children().filter(function(idx, element) {\n\t                            return $(element).data("position") === position - 1;\n\t                        });\n\n\t                        group.detach().insertAfter(previous);\n\t                    }\n\n\t                    group.removeClass("k-overflow-tool-group");\n\n\t                } else {\n\t                    group.removeClass("k-hidden");\n\t                }\n\n\t                return true;\n\t            }\n\n\t            return false;\n\t        }\n\n\t    });\n\n\t$.extend(editorNS, {\n\t    Toolbar: Toolbar\n\t});\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/editor/toolbar.js?')},"./node_modules/@progress/kendo-ui/js/excel/kendo-excel.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/excel/kendo-excel.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(996);\n\tmodule.exports = __webpack_require__(996);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/***********************************************************************\n\t * WARNING: this file is auto-generated.  If you change it directly,\n\t * your modifications will eventually be lost.  The source code is in\n\t * `kendo-ooxml` repository, you should make your changes there and\n\t * run `src-modules/sync.sh` in this repository.\n\t */\n\t(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(20)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function ($) {\n\n\twindow.kendo.excel = window.kendo.excel || {};\n\n\tvar getter = kendo.getter;\n\tvar map = $.map;\n\n\tvar current = {\n\t    compile: function(template) {\n\t        return template;\n\t    }\n\t};\n\n\tvar TemplateService = kendo.Class.extend({\n\n\t});\n\n\tTemplateService.register = function(userImplementation) {\n\t    current = userImplementation;\n\t};\n\n\tTemplateService.compile = function(template) {\n\t    return current.compile(template);\n\t};\n\n\tfunction defaultGroupHeaderTemplate(data) {\n\t    return ((data.title) + ": " + (data.value));\n\t}\n\n\tfunction createArray(length, callback) {\n\t    var result = [];\n\n\t    for (var idx = 0; idx < length; idx++) {\n\t        result.push(callback(idx));\n\t    }\n\n\t    return result;\n\t}\n\n\tvar ExcelExporter = kendo.Class.extend({\n\t    init: function(options) {\n\t        options.columns = this._trimColumns(options.columns || []);\n\n\t        this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);\n\n\t        this.columns = this.allColumns.filter(function(column) { return !column.hidden; });\n\n\t        this.options = options;\n\t        this.data = options.data || [];\n\t        this.aggregates = options.aggregates || {};\n\t        this.groups = [].concat(options.groups || []);\n\t        this.hierarchy = options.hierarchy;\n\t    },\n\n\t    workbook: function() {\n\t        var workbook = {\n\t            sheets: [ {\n\t                columns: this._columns(),\n\t                rows: this.hierarchy ? this._hierarchyRows() : this._rows(),\n\t                freezePane: this._freezePane(),\n\t                filter: this._filter()\n\t            } ]\n\t        };\n\n\t        return workbook;\n\t    },\n\n\t    _trimColumns: function(columns) {\n\t        var this$1 = this;\n\n\t        return columns.filter(function (column) {\n\t            var result = Boolean(column.field);\n\n\t            if (!result && column.columns) {\n\t                result = this$1._trimColumns(column.columns).length > 0;\n\t            }\n\n\t            return result;\n\t        });\n\t    },\n\n\t    _leafColumns: function(columns) {\n\t        var this$1 = this;\n\n\t        var result = [];\n\n\t        for (var idx = 0; idx < columns.length; idx++) {\n\t            if (!columns[idx].columns) {\n\t                result.push(columns[idx]);\n\t            } else {\n\t                result = result.concat(this$1._leafColumns(columns[idx].columns));\n\t            }\n\t        }\n\n\t        return result;\n\t    },\n\n\t    _prepareColumn: function(column) {\n\t        if (!column.field) {\n\t            return null;\n\t        }\n\n\t        var value = function(dataItem) {\n\t            return getter(column.field, true)(dataItem);\n\t        };\n\n\t        var values = null;\n\n\t        if (column.values) {\n\t            values = {};\n\n\t            column.values.forEach(function(item) {\n\t                values[item.value] = item.text;\n\t            });\n\n\t            value = function(dataItem) {\n\t                return values[getter(column.field, true)(dataItem)];\n\t            };\n\t        }\n\n\t        return $.extend({}, column, {\n\t            value: value,\n\t            values: values,\n\t            groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,\n\t            groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,\n\t            footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null\n\t        });\n\t    },\n\n\t    _filter: function() {\n\t        if (!this.options.filterable) {\n\t            return null;\n\t        }\n\n\t        var depth = this._depth();\n\n\t        return {\n\t            from: depth,\n\t            to: depth + this.columns.length - 1\n\t        };\n\t    },\n\n\t    _createPaddingCells: function(length) {\n\t        var this$1 = this;\n\n\t        return createArray(length, function () { return $.extend({\n\t            background: "#dfdfdf",\n\t            color: "#333"\n\t        }, this$1.options.paddingCellOptions); });\n\t    },\n\n\t    _dataRow: function(dataItem, level, depth) {\n\t        var this$1 = this;\n\n\t        var cells = this._createPaddingCells(level);\n\n\t        // grouped\n\t        if (depth && dataItem.items) {\n\t            var column = this.allColumns.filter(function(column) {\n\t                return column.field === dataItem.field;\n\t            })[0];\n\n\t            var title = column && column.title ? column.title : dataItem.field;\n\t            var template = column ? column.groupHeaderTemplate : null;\n\t            var group = $.extend({\n\t                title: title,\n\t                field: dataItem.field,\n\t                value: column && column.values ? column.values[dataItem.value] : dataItem.value,\n\t                aggregates: dataItem.aggregates,\n\t                items: dataItem.items\n\t            }, dataItem.aggregates[dataItem.field]);\n\n\t            var value = title + ": " + (dataItem.value);\n\n\t            if (template) {\n\t                value = template(group);\n\t            }\n\n\t            cells.push($.extend({\n\t                value: value,\n\t                background: "#dfdfdf",\n\t                color: "#333",\n\t                colSpan: this.columns.length + depth - level\n\t            }, (column || {}).groupHeaderCellOptions));\n\n\t            var rows = this._dataRows(dataItem.items, level + 1);\n\n\t            rows.unshift({\n\t                type: "group-header",\n\t                cells: cells,\n\t                level: this.options.collapsible ? level : null\n\t            });\n\n\t            return rows.concat(this._footer(dataItem, level));\n\t        }\n\n\t        var dataCells = [];\n\n\t        for (var cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {\n\t            dataCells[cellIdx] = this$1._cell(dataItem, this$1.columns[cellIdx]);\n\t        }\n\n\t        if (this.hierarchy) {\n\t            dataCells[0].colSpan = depth - level + 1;\n\t        }\n\n\t        return [ {\n\t            type: "data",\n\t            cells: cells.concat(dataCells),\n\t            level: this.options.collapsible ? level : null\n\t        } ];\n\t    },\n\n\t    _dataRows: function(dataItems, level) {\n\t        var this$1 = this;\n\n\t        var depth = this._depth();\n\t        var rows = [];\n\n\t        for (var idx = 0; idx < dataItems.length; idx++) {\n\t            rows.push.apply(rows, this$1._dataRow(dataItems[idx], level, depth));\n\t        }\n\n\t        return rows;\n\t    },\n\n\t    _hierarchyRows: function() {\n\t        var this$1 = this;\n\n\t        var depth = this._depth();\n\t        var data = this.data;\n\t        var itemLevel = this.hierarchy.itemLevel;\n\t        var hasFooter = this._hasFooterTemplate();\n\t        var rows = [];\n\t        var parents = [];\n\t        var previousLevel = 0;\n\t        var previousItemId;\n\n\t        for (var idx = 0; idx < data.length; idx++) {\n\t            var item = data[idx];\n\t            var level = itemLevel(item);\n\n\t            if (hasFooter) {\n\t                if (level > previousLevel) {\n\t                    parents.push({ id: previousItemId, level: previousLevel });\n\t                } else if (level < previousLevel) {\n\t                    rows.push.apply(rows, this$1._hierarchyFooterRows(parents, level, depth));\n\t                }\n\n\t                previousLevel = level;\n\t                previousItemId = item.id;\n\t            }\n\n\t            rows.push.apply(rows, this$1._dataRow(item, level + 1, depth));\n\t        }\n\n\t        if (hasFooter) {\n\t            rows.push.apply(rows, this._hierarchyFooterRows(parents, 0, depth));\n\n\t            var rootAggregate = data.length ? this.aggregates[data[0].parentId] : {};\n\t            rows.push(this._hierarchyFooter(rootAggregate, 0, depth));\n\t        }\n\n\t        this._prependHeaderRows(rows);\n\n\t        return rows;\n\t    },\n\n\t    _hierarchyFooterRows: function(parents, currentLevel, depth) {\n\t        var this$1 = this;\n\n\t        var rows = [];\n\t        while (parents.length && parents[parents.length - 1].level >= currentLevel) {\n\t            var parent = parents.pop();\n\t            rows.push(this$1._hierarchyFooter(this$1.aggregates[parent.id], parent.level + 1, depth));\n\t        }\n\n\t        return rows;\n\t    },\n\n\t    _hasFooterTemplate: function() {\n\t        var columns = this.columns;\n\t        for (var idx = 0; idx < columns.length; idx++) {\n\t            if (columns[idx].footerTemplate) {\n\t                return true;\n\t            }\n\t        }\n\t    },\n\n\t    _hierarchyFooter: function(aggregates, level, depth) {\n\t        var cells = this.columns.map(function(column, index) {\n\t            var colSpan = index ? 1 : depth - level + 1;\n\t            if (column.footerTemplate) {\n\t                return $.extend({\n\t                    background: "#dfdfdf",\n\t                    color: "#333",\n\t                    colSpan: colSpan,\n\t                    value: column.footerTemplate($.extend({}, (aggregates || {})[column.field]))\n\t                }, column.footerCellOptions);\n\t            }\n\n\t            return $.extend({\n\t                background: "#dfdfdf",\n\t                color: "#333",\n\t                colSpan: colSpan\n\t            }, column.footerCellOptions);\n\t        });\n\n\t        return {\n\t            type: "footer",\n\t            cells: this._createPaddingCells(level).concat(cells)\n\t        };\n\t    },\n\n\t    _footer: function(dataItem, level) {\n\t        var rows = [];\n\t        var footer = this.columns.some(function (column) { return column.groupFooterTemplate; });\n\n\t        var templateData, group;\n\t        if (footer) {\n\t            group = {\n\t                group: { items: dataItem.items,\n\t                         field: dataItem.field,\n\t                         value: dataItem.value }\n\t            };\n\t            templateData = {};\n\t            Object.keys(dataItem.aggregates).forEach(function (key) {\n\t                templateData[key] = $.extend({}, dataItem.aggregates[key], group);\n\t            });\n\t        }\n\n\t        var cells = this.columns.map(function (column) {\n\t            if (column.groupFooterTemplate) {\n\t                var data = $.extend({}, templateData, dataItem.aggregates[column.field], group);\n\t                return $.extend({\n\t                    background: "#dfdfdf",\n\t                    color: "#333",\n\t                    value: column.groupFooterTemplate(data)\n\t                }, column.groupFooterCellOptions);\n\t            }\n\n\t            return $.extend({\n\t                background: "#dfdfdf",\n\t                color: "#333"\n\t            }, column.groupFooterCellOptions);\n\t        });\n\n\t        if (footer) {\n\t            rows.push({\n\t                type: "group-footer",\n\t                cells: this._createPaddingCells(this.groups.length).concat(cells),\n\t                level: this.options.collapsible ? level : null\n\t            });\n\t        }\n\n\t        return rows;\n\t    },\n\n\t    _isColumnVisible: function(column) {\n\t        return this._visibleColumns([ column ]).length > 0 && (column.field || column.columns);\n\t    },\n\n\t    _visibleColumns: function(columns) {\n\t        var this$1 = this;\n\n\t        return columns.filter(function (column) {\n\t            var result = !column.hidden;\n\t            if (result && column.columns) {\n\t                result = this$1._visibleColumns(column.columns).length > 0;\n\t            }\n\t            return result;\n\t        });\n\t    },\n\n\t    _headerRow: function(row, groups) {\n\t        var this$1 = this;\n\n\t        var headers = row.cells.map(function(cell) {\n\t            return $.extend(cell, {\n\t                colSpan: cell.colSpan > 1 ? cell.colSpan : 1,\n\t                rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1\n\t            });\n\t        });\n\n\t        if (this.hierarchy) {\n\t            headers[0].colSpan = this._depth() + 1;\n\t        }\n\n\t        return {\n\t            type: "header",\n\t            cells: createArray(groups.length, function () { return $.extend({\n\t                background: "#7a7a7a",\n\t                color: "#fff"\n\t            }, this$1.options.headerPaddingCellOptions); }).concat(headers)\n\t        };\n\t    },\n\n\t    _prependHeaderRows: function(rows) {\n\t        var this$1 = this;\n\n\t        var groups = this.groups;\n\n\t        var headerRows = [ { rowSpan: 1, cells: [], index: 0 } ];\n\n\t        this._prepareHeaderRows(headerRows, this.options.columns);\n\n\t        for (var idx = headerRows.length - 1; idx >= 0; idx--) {\n\t            rows.unshift(this$1._headerRow(headerRows[idx], groups));\n\t        }\n\t    },\n\n\t    _prepareHeaderRows: function(rows, columns, parentCell, parentRow) {\n\t        var this$1 = this;\n\n\t        var row = parentRow || rows[rows.length - 1];\n\t        var childRow = rows[row.index + 1];\n\t        var totalColSpan = 0;\n\n\t        for (var idx = 0; idx < columns.length; idx++) {\n\t            var column = columns[idx];\n\t            if (this$1._isColumnVisible(column)) {\n\n\t                var cell = $.extend({\n\t                    background: "#7a7a7a",\n\t                    color: "#fff",\n\t                    value: column.title || column.field,\n\t                    colSpan: 0\n\t                }, column.headerCellOptions);\n\t                row.cells.push(cell);\n\n\t                if (column.columns && column.columns.length) {\n\t                    if (!childRow) {\n\t                        childRow = { rowSpan: 0, cells: [], index: rows.length };\n\t                        rows.push(childRow);\n\t                    }\n\t                    cell.colSpan = this$1._trimColumns(this$1._visibleColumns(column.columns)).length;\n\t                    this$1._prepareHeaderRows(rows, column.columns, cell, childRow);\n\t                    totalColSpan += cell.colSpan - 1;\n\t                    row.rowSpan = rows.length - row.index;\n\t                }\n\t            }\n\t        }\n\n\t        if (parentCell) {\n\t            parentCell.colSpan += totalColSpan;\n\t        }\n\t    },\n\n\t    _rows: function() {\n\t        var this$1 = this;\n\n\t        var rows = this._dataRows(this.data, 0);\n\n\t        if (this.columns.length) {\n\t            this._prependHeaderRows(rows);\n\t            var footer = false;\n\n\t            var cells = this.columns.map(function (column) {\n\t                if (column.footerTemplate) {\n\t                    footer = true;\n\n\t                    return $.extend({\n\t                        background: "#dfdfdf",\n\t                        color: "#333",\n\t                        value: column.footerTemplate($.extend({}, this$1.aggregates, this$1.aggregates[column.field]))\n\t                    }, column.footerCellOptions);\n\t                }\n\n\t                return $.extend({\n\t                    background: "#dfdfdf",\n\t                    color: "#333"\n\t                }, column.footerCellOptions);\n\t            });\n\n\t            if (footer) {\n\t                rows.push({\n\t                    type: "footer",\n\t                    cells: this._createPaddingCells(this.groups.length).concat(cells)\n\t                });\n\t            }\n\t        }\n\n\t        return rows;\n\t    },\n\n\t    _headerDepth: function(columns) {\n\t        var this$1 = this;\n\n\t        var result = 1;\n\t        var max = 0;\n\n\t        for (var idx = 0; idx < columns.length; idx++) {\n\t            if (columns[idx].columns) {\n\t                var temp = this$1._headerDepth(columns[idx].columns);\n\t                if (temp > max) {\n\t                    max = temp;\n\t                }\n\t            }\n\t        }\n\t        return result + max;\n\t    },\n\n\t    _freezePane: function() {\n\t        var columns = this._visibleColumns(this.options.columns || []);\n\n\t        var colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function(column) {\n\t            return column.locked;\n\t        })))).length;\n\n\t        return {\n\t            rowSplit: this._headerDepth(columns),\n\t            colSplit: colSplit ? colSplit + this.groups.length : 0\n\t        };\n\t    },\n\n\t    _cell: function(dataItem, column) {\n\t        return $.extend({\n\t            value: column.value(dataItem)\n\t        }, column.cellOptions);\n\t    },\n\n\t    _depth: function() {\n\t        var depth = 0;\n\n\t        if (this.hierarchy) {\n\t            depth = this.hierarchy.depth;\n\t        } else {\n\t            depth = this.groups.length;\n\t        }\n\n\t        return depth;\n\t    },\n\n\t    _columns: function() {\n\t        var depth = this._depth();\n\t        var columns = createArray(depth, function () { return ({ width: 20 }); });\n\n\t        return columns.concat(this.columns.map(function(column) {\n\t            return {\n\t                width: parseInt(column.width, 10),\n\t                autoWidth: column.width ? false : true\n\t            };\n\t        }));\n\t    }\n\t});\n\n\tkendo.deepExtend(kendo.excel, {\n\t    ExcelExporter: ExcelExporter,\n\t    TemplateService: TemplateService\n\t});\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/excel/kendo-excel.js?')},"./node_modules/@progress/kendo-ui/js/excel/main.js":
/*!**********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/excel/main.js ***!
  \**********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(997);\n\tmodule.exports = __webpack_require__(997);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.data */ "./node_modules/@progress/kendo-ui/js/kendo.data.js");\n\n/***/ }),\n\n/***/ 20:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(20), __webpack_require__(5), __webpack_require__(998) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function($, kendo){\n\n\t    var ExcelExporter = kendo.excel.ExcelExporter;\n\n\t    var extend = $.extend;\n\n\t    kendo.excel.TemplateService.register({\n\t        compile: kendo.template\n\t    });\n\n\t    kendo.ExcelExporter = kendo.Class.extend({\n\t        init: function(options) {\n\t            this.options = options;\n\t            var dataSource = options.dataSource;\n\n\t            if (dataSource instanceof kendo.data.DataSource) {\n\n\t                if (!dataSource.filter()) {\n\t                    dataSource.options.filter = undefined;\n\t                }\n\n\t                this.dataSource = new dataSource.constructor(extend(\n\t                    {},\n\t                    dataSource.options,\n\t                    {\n\t                        page: options.allPages ? 0 : dataSource.page(),\n\t                        filter: dataSource.filter(),\n\t                        pageSize: options.allPages ? dataSource.total() : dataSource.pageSize() || dataSource.total(),\n\t                        sort: dataSource.sort(),\n\t                        group: dataSource.group(),\n\t                        aggregate: dataSource.aggregate()\n\t                    }));\n\n\t                var data = dataSource.data();\n\n\t                if (data.length > 0) {\n\t                    if (options.hierarchy) {\n\t                        for (var i = 0; i < data.length; i++) {\n\t                            if (data[i].expanded === false || data[i].expanded === undefined) {\n\t                                data[i].expanded = true;\n\t                            }\n\t                        }\n\t                    }\n\t                    // Avoid toJSON() for perf and avoid data() to prevent reparenting.\n\t                    this.dataSource._data = data;\n\n\t                    var transport = this.dataSource.transport;\n\t                    if (dataSource._isServerGrouped() && transport.options && transport.options.data) { // clear the transport data when using aspnet-mvc transport\n\t                        transport.options.data = null;\n\t                    }\n\t                }\n\n\t            } else {\n\t                this.dataSource = kendo.data.DataSource.create(dataSource);\n\t            }\n\t        },\n\n\t        _hierarchy: function() {\n\t            var hierarchy = this.options.hierarchy;\n\t            var dataSource = this.dataSource;\n\n\t            if (hierarchy && dataSource.level) {\n\t                hierarchy = {\n\t                    itemLevel: function(item) {\n\t                        return dataSource.level(item);\n\t                    }\n\t                };\n\n\t                var view = dataSource.view();\n\t                var depth = 0;\n\t                var level;\n\n\t                for (var idx = 0; idx < view.length; idx++) {\n\t                    level = dataSource.level(view[idx]);\n\n\t                    if (level > depth) {\n\t                        depth = level;\n\t                    }\n\t                }\n\n\t                hierarchy.depth = depth + 1;\n\t            } else {\n\t                hierarchy = false;\n\t            }\n\n\t            return {\n\t                hierarchy: hierarchy\n\t            };\n\t        },\n\n\t        workbook: function() {\n\t            return $.Deferred($.proxy(function(d) {\n\t                this.dataSource.fetch()\n\t                    .then($.proxy(function() {\n\n\t                        var workbook = new ExcelExporter(extend({}, this.options, this._hierarchy(), {\n\t                            data: this.dataSource.view(),\n\t                            groups: this.dataSource.group(),\n\t                            aggregates: this.dataSource.aggregates()\n\t                        })).workbook();\n\n\t                        d.resolve(workbook, this.dataSource.view());\n\t                    }, this));\n\t            }, this)).promise();\n\t        }\n\t    });\n\n\n\t})(kendo.jQuery, kendo);\n\n\treturn kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo-excel */ "./node_modules/@progress/kendo-ui/js/excel/kendo-excel.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/excel/main.js?')},"./node_modules/@progress/kendo-ui/js/excel/mixins.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/excel/mixins.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(999);\n\tmodule.exports = __webpack_require__(999);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 938:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./main */ "./node_modules/@progress/kendo-ui/js/excel/main.js");\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(938), __webpack_require__(1000) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function($, kendo){\n\n\n\tkendo.ExcelMixin = {\n\t    extend: function(proto) {\n\t       proto.events.push("excelExport");\n\t       proto.options.excel = $.extend(proto.options.excel, this.options);\n\t       proto.saveAsExcel = this.saveAsExcel;\n\t    },\n\t    options: {\n\t        proxyURL: "",\n\t        allPages: false,\n\t        filterable: false,\n\t        fileName: "Export.xlsx",\n\t        collapsible: false\n\t    },\n\t    saveAsExcel: function() {\n\t        var excel = this.options.excel || {};\n\n\t        var exporter = new kendo.ExcelExporter({\n\t            columns: this.columns,\n\t            dataSource: this.dataSource,\n\t            allPages: excel.allPages,\n\t            filterable: excel.filterable,\n\t            hierarchy: excel.hierarchy,\n\t            collapsible: excel.collapsible\n\t        });\n\n\t        exporter.workbook().then($.proxy(function(book, data) {\n\t            if (!this.trigger("excelExport", { workbook: book, data: data })) {\n\t                var workbook = new kendo.ooxml.Workbook(book);\n\n\t                if(!workbook.options) {\n\t                    workbook.options = {};\n\t                }\n\t                workbook.options.skipCustomHeight = true;\n\n\t                workbook.toDataURLAsync().then(function(dataURI) {\n\t                    kendo.saveAs({\n\t                        dataURI: dataURI,\n\t                        fileName: book.fileName || excel.fileName,\n\t                        proxyURL: excel.proxyURL,\n\t                        forceProxy: excel.forceProxy\n\t                    });\n\t                });\n\n\t            }\n\t        }, this));\n\t    }\n\t};\n\n\t})(kendo.jQuery, kendo);\n\n\treturn kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1000:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.ooxml */ "./node_modules/@progress/kendo-ui/js/kendo.ooxml.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/excel/mixins.js?')}}]);