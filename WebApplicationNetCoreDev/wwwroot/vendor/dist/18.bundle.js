(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"./node_modules/@progress/kendo-ui/js/dataviz/sparkline/kendo-sparkline.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/sparkline/kendo-sparkline.js ***!
  \*********************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(909);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 909:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/***********************************************************************\n\t * WARNING: this file is auto-generated.  If you change it directly,\n\t * your modifications will eventually be lost.  The source code is in\n\t * `kendo-charts` repository, you should make your changes there and\n\t * run `src-modules/sync.sh` in this repository.\n\t */\n\t(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(910)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function () {\n\n\twindow.kendo.dataviz = window.kendo.dataviz || {};\n\tvar dataviz = kendo.dataviz;\n\tvar constants = dataviz.constants;\n\tvar Chart = dataviz.Chart;\n\tvar elementSize = dataviz.elementSize;\n\tvar deepExtend = dataviz.deepExtend;\n\n\tvar TOP_OFFSET = -2;\n\n\tvar SharedTooltip$1 = dataviz.SharedTooltip.extend({\n\t    _slotAnchor: function(coords, slot) {\n\t        var axis = this.plotArea.categoryAxis;\n\t        var vertical = axis.options.vertical;\n\t        var align = vertical ? {\n\t            horizontal: "left",\n\t            vertical: "center"\n\t        } : {\n\t            horizontal: "center",\n\t            vertical: "bottom"\n\t        };\n\n\t        var point;\n\n\t        if (vertical) {\n\t            point = new dataviz.Point(this.plotArea.box.x2, slot.center().y);\n\t        } else {\n\t            point = new dataviz.Point(slot.center().x, TOP_OFFSET);\n\t        }\n\n\t        return {\n\t            point: point,\n\t            align: align\n\t        };\n\t    },\n\n\t    _defaultAnchor: function(point, slot) {\n\t        return this._slotAnchor({}, slot);\n\t    }\n\t});\n\n\tvar DEAULT_BAR_WIDTH = 150;\n\tvar DEAULT_BULLET_WIDTH = 150;\n\tvar NO_CROSSHAIR = [ constants.BAR, constants.BULLET ];\n\n\tfunction hide(children) {\n\t    var state = [];\n\t    for (var idx = 0; idx < children.length; idx++) {\n\t        var child = children[idx];\n\t        state[idx] = child.style.display;\n\t        child.style.display = "none";\n\t    }\n\n\t    return state;\n\t}\n\n\tfunction show(children, state) {\n\t    for (var idx = 0; idx < children.length; idx++) {\n\t        children[idx].style.display = state[idx];\n\t    }\n\t}\n\n\tfunction wrapNumber(value) {\n\t    return dataviz.isNumber(value) ? [ value ] : value;\n\t}\n\n\tvar Sparkline = Chart.extend({\n\t    _setElementClass: function(element) {\n\t        dataviz.addClass(element, \'k-sparkline\');\n\t    },\n\n\t    _initElement: function(element) {\n\t        Chart.fn._initElement.call(this, element);\n\n\t        this._initialWidth = Math.floor(elementSize(element).width);\n\t    },\n\n\t    _resize: function() {\n\t        var element = this.element;\n\t        var state = hide(element.childNodes);\n\n\t        this._initialWidth = Math.floor(elementSize(element).width);\n\n\t        show(element.childNodes, state);\n\n\t        Chart.fn._resize.call(this);\n\t    },\n\n\t    _modelOptions: function() {\n\t        var chartOptions = this.options;\n\t        var stage = this._surfaceWrap();\n\t        var displayState = hide(stage.childNodes);\n\n\t        var space = document.createElement(\'span\');\n\t        space.innerHTML = \'&nbsp;\';\n\n\t        stage.appendChild(space);\n\n\t        var options = deepExtend({\n\t            width: this._autoWidth,\n\t            height: elementSize(stage).height,\n\t            transitions: chartOptions.transitions\n\t        }, chartOptions.chartArea, {\n\t            inline: true,\n\t            align: false\n\t        });\n\n\t        elementSize(stage, {\n\t            width: options.width,\n\t            height: options.height\n\t        });\n\n\t        stage.removeChild(space);\n\n\t        show(stage.childNodes, displayState);\n\n\t        if (this.surface) {\n\t            this.surface.resize();\n\t        }\n\n\t        return options;\n\t    },\n\n\t    _surfaceWrap: function() {\n\t        if (!this.stage) {\n\t            var stage = this.stage = document.createElement(\'span\');\n\t            this.element.appendChild(stage);\n\t        }\n\t        return this.stage;\n\t    },\n\n\t    _createPlotArea: function(skipSeries) {\n\t        var plotArea = Chart.fn._createPlotArea.call(this, skipSeries);\n\t        this._autoWidth = this._initialWidth || this._calculateWidth(plotArea);\n\n\t        return plotArea;\n\t    },\n\n\t    _calculateWidth: function(plotArea) {\n\t        var options = this.options;\n\t        var margin = dataviz.getSpacing(options.chartArea.margin);\n\t        var charts = plotArea.charts;\n\t        var stage = this._surfaceWrap();\n\t        var total = 0;\n\n\t        for (var i = 0; i < charts.length; i++) {\n\t            var currentChart = charts[i];\n\t            var firstSeries = (currentChart.options.series || [])[0];\n\t            if (!firstSeries) {\n\t                continue;\n\t            }\n\n\t            if (firstSeries.type === constants.BAR) {\n\t                return DEAULT_BAR_WIDTH;\n\t            }\n\n\t            if (firstSeries.type === constants.BULLET) {\n\t                return DEAULT_BULLET_WIDTH;\n\t            }\n\n\t            if (firstSeries.type === constants.PIE) {\n\t                return elementSize(stage).height;\n\t            }\n\n\t            var categoryAxis = currentChart.categoryAxis;\n\t            if (categoryAxis) {\n\t                var pointsCount = categoryAxis.categoriesCount() *\n\t                    (!currentChart.options.isStacked && dataviz.inArray(firstSeries.type, [ constants.COLUMN, constants.VERTICAL_BULLET ]) ? currentChart.seriesOptions.length : 1);\n\n\t                total = Math.max(total, pointsCount);\n\t            }\n\t        }\n\n\t        var size = total * options.pointWidth;\n\t        if (size > 0) {\n\t            size += margin.left + margin.right;\n\t        }\n\n\t        return size;\n\t    },\n\n\t    _createSharedTooltip: function(options) {\n\t        return new SharedTooltip$1(this._plotArea, options);\n\t    }\n\t});\n\n\tSparkline.normalizeOptions = function(userOptions) {\n\t    var options = wrapNumber(userOptions);\n\n\t    if (dataviz.isArray(options)) {\n\t        options = { seriesDefaults: { data: options } };\n\t    } else {\n\t        options = deepExtend({}, options);\n\t    }\n\n\t    if (!options.series) {\n\t        options.series = [ { data: wrapNumber(options.data) } ];\n\t    }\n\n\t    deepExtend(options, {\n\t        seriesDefaults: {\n\t            type: options.type\n\t        }\n\t    });\n\n\t    if (dataviz.inArray(options.series[0].type, NO_CROSSHAIR) ||\n\t        dataviz.inArray(options.seriesDefaults.type, NO_CROSSHAIR)) {\n\t        options = deepExtend({}, {\n\t            categoryAxis: {\n\t                crosshair: {\n\t                    visible: false\n\t                }\n\t            }\n\t        }, options);\n\t    }\n\n\t    return options;\n\t};\n\n\tdataviz.setDefaultOptions(Sparkline, {\n\t    chartArea: {\n\t        margin: 2\n\t    },\n\t    axisDefaults: {\n\t        visible: false,\n\t        majorGridLines: {\n\t            visible: false\n\t        },\n\t        valueAxis: {\n\t            narrowRange: true\n\t        }\n\t    },\n\t    seriesDefaults: {\n\t        type: "line",\n\t        area: {\n\t            line: {\n\t                width: 0.5\n\t            }\n\t        },\n\t        bar: {\n\t            stack: true\n\t        },\n\t        padding: 2,\n\t        width: 0.5,\n\t        overlay: {\n\t            gradient: null\n\t        },\n\t        highlight: {\n\t            visible: false\n\t        },\n\t        border: {\n\t            width: 0\n\t        },\n\t        markers: {\n\t            size: 2,\n\t            visible: false\n\t        }\n\t    },\n\t    tooltip: {\n\t        visible: true,\n\t        shared: true\n\t    },\n\t    categoryAxis: {\n\t        crosshair: {\n\t            visible: true,\n\t            tooltip: {\n\t                visible: false\n\t            }\n\t        }\n\t    },\n\t    legend: {\n\t        visible: false\n\t    },\n\t    transitions: false,\n\n\t    pointWidth: 5,\n\n\t    panes: [ { clip: false } ]\n\t});\n\n\tkendo.deepExtend(kendo.dataviz, {\n\t    Sparkline: Sparkline\n\t});\n\n\t})();\n\n\t}, __webpack_require__(3));\n\n/***/ }),\n\n/***/ 910:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../../kendo.dataviz.chart */ "./node_modules/@progress/kendo-ui/js/kendo.dataviz.chart.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/sparkline/kendo-sparkline.js?')},"./node_modules/@progress/kendo-ui/js/dataviz/sparkline/sparkline.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/sparkline/sparkline.js ***!
  \***************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(911);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 911:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(912)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function ($) {\n\n\tvar dataviz = kendo.dataviz;\n\tvar Chart = dataviz.ui.Chart;\n\tvar KendoSparkline = dataviz.Sparkline;\n\tvar ChartInstanceObserver = dataviz.ChartInstanceObserver;\n\n\tvar extend = $.extend;\n\n\tvar Sparkline = Chart.extend({\n\n\t    init: function(element, userOptions) {\n\t        var options = userOptions;\n\t        if (options instanceof kendo.data.ObservableArray) {\n\t            options = { seriesDefaults: { data: options } };\n\t        }\n\n\t        Chart.fn.init.call(this, element, KendoSparkline.normalizeOptions(options));\n\t    },\n\n\t    _createChart: function(options, themeOptions) {\n\t        this._instance = new KendoSparkline(this.element[0], options, themeOptions, {\n\t            observer: new ChartInstanceObserver(this),\n\t            sender: this,\n\t            rtl: this._isRtl()\n\t        });\n\t    },\n\n\t    _createTooltip: function() {\n\t        return new SparklineTooltip(this.element, extend({}, this.options.tooltip, {\n\t            rtl: this._isRtl()\n\t        }));\n\t    },\n\n\t    options: {\n\t        name: "Sparkline",\n\t        chartArea: {\n\t            margin: 2\n\t        },\n\t        axisDefaults: {\n\t            visible: false,\n\t            majorGridLines: {\n\t                visible: false\n\t            },\n\t            valueAxis: {\n\t                narrowRange: true\n\t            }\n\t        },\n\t        seriesDefaults: {\n\t            type: "line",\n\t            area: {\n\t                line: {\n\t                    width: 0.5\n\t                }\n\t            },\n\t            bar: {\n\t                stack: true\n\t            },\n\t            padding: 2,\n\t            width: 0.5,\n\t            overlay: {\n\t                gradient: null\n\t            },\n\t            highlight: {\n\t                visible: false\n\t            },\n\t            border: {\n\t                width: 0\n\t            },\n\t            markers: {\n\t                size: 2,\n\t                visible: false\n\t            }\n\t        },\n\t        tooltip: {\n\t            visible: true,\n\t            shared: true\n\t        },\n\t        categoryAxis: {\n\t            crosshair: {\n\t                visible: true,\n\t                tooltip: {\n\t                    visible: false\n\t                }\n\t            }\n\t        },\n\t        legend: {\n\t            visible: false\n\t        },\n\t        transitions: false,\n\n\t        pointWidth: 5,\n\n\t        panes: [{\n\t            clip: false\n\t        }]\n\t    }\n\t});\n\n\tdataviz.ui.plugin(Sparkline);\n\n\tvar SparklineTooltip = dataviz.Tooltip.extend({\n\t    options: {\n\t        animation: {\n\t            duration: 0\n\t        }\n\t    },\n\n\t    _hideElement: function() {\n\t        if (this.element) {\n\t            this.element.hide().remove();\n\t        }\n\t    }\n\t});\n\n\tdataviz.SparklineTooltip = SparklineTooltip;\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 912:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo-sparkline */ "./node_modules/@progress/kendo-ui/js/dataviz/sparkline/kendo-sparkline.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/sparkline/sparkline.js?')},"./node_modules/@progress/kendo-ui/js/dataviz/stock/kendo-stock-chart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/stock/kendo-stock-chart.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(913);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 910:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../../kendo.dataviz.chart */ "./node_modules/@progress/kendo-ui/js/kendo.dataviz.chart.js");\n\n/***/ }),\n\n/***/ 913:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/***********************************************************************\n\t * WARNING: this file is auto-generated.  If you change it directly,\n\t * your modifications will eventually be lost.  The source code is in\n\t * `kendo-charts` repository, you should make your changes there and\n\t * run `src-modules/sync.sh` in this repository.\n\t */\n\t(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(910)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function () {\n\n\twindow.kendo.dataviz = window.kendo.dataviz || {};\n\tvar dataviz = kendo.dataviz;\n\tvar elementStyles = dataviz.elementStyles;\n\tvar deepExtend = dataviz.deepExtend;\n\tvar toTime = dataviz.toTime;\n\tvar datavizConstants = dataviz.constants;\n\tvar Chart = dataviz.Chart;\n\tvar drawing = kendo.drawing;\n\n\tvar FadeOutAnimation = drawing.Animation.extend({\n\t    setup: function() {\n\t        this._initialOpacity = parseFloat(elementStyles(this.element, \'opacity\').opacity);\n\t    },\n\n\t    step: function(pos) {\n\t        elementStyles(this.element, {\n\t            opacity: String(dataviz.interpolateValue(this._initialOpacity, 0, pos))\n\t        });\n\t    },\n\n\t    abort: function() {\n\t        drawing.Animation.fn.abort.call(this);\n\t        elementStyles(this.element, {\n\t            display: \'none\',\n\t            opacity: String(this._initialOpacity)\n\t        });\n\t    },\n\n\t    cancel: function() {\n\t        drawing.Animation.fn.abort.call(this);\n\t        elementStyles(this.element, {\n\t            opacity: String(this._initialOpacity)\n\t        });\n\t    }\n\t});\n\n\tfunction createDiv(className, style) {\n\t    var div = document.createElement("div");\n\t    div.className = className;\n\t    if (style) {\n\t        div.style.cssText = style;\n\t    }\n\n\t    return div;\n\t}\n\n\tvar NavigatorHint = dataviz.Class.extend({\n\t    init: function(container, chartService, options) {\n\n\t        this.options = deepExtend({}, this.options, options);\n\t        this.container = container;\n\t        this.chartService = chartService;\n\n\t        var padding = elementStyles(container, [ "paddingLeft", "paddingTop" ]);\n\t        this.chartPadding = {\n\t            top: padding.paddingTop,\n\t            left: padding.paddingLeft\n\t        };\n\n\t        this.createElements();\n\t        container.appendChild(this.element);\n\t    },\n\n\t    createElements: function() {\n\t        var element = this.element = createDiv(\'k-navigator-hint\', \'display: none; position: absolute; top: 1px; left: 1px;\');\n\t        var tooltip = this.tooltip = createDiv(\'k-tooltip k-chart-tooltip\');\n\t        var scroll = this.scroll = createDiv(\'k-scroll\');\n\n\t        tooltip.innerHTML = \'&nbsp;\';\n\n\t        element.appendChild(tooltip);\n\t        element.appendChild(scroll);\n\t    },\n\n\t    show: function(from, to, bbox) {\n\t        var ref = this;\n\t        var element = ref.element;\n\t        var options = ref.options;\n\t        var scroll = ref.scroll;\n\t        var tooltip = ref.tooltip;\n\t        var middle = dataviz.toDate(toTime(from) + toTime(to - from) / 2);\n\t        var scrollWidth = bbox.width() * 0.4;\n\t        var minPos = bbox.center().x - scrollWidth;\n\t        var maxPos = bbox.center().x;\n\t        var posRange = maxPos - minPos;\n\t        var range = options.max - options.min;\n\t        var scale = posRange / range;\n\t        var offset = middle - options.min;\n\t        var text = this.chartService.intl.format(options.format, from, to);\n\t        var template = dataviz.getTemplate(options);\n\n\t        this.clearHideTimeout();\n\n\t        if (!this._visible) {\n\t            elementStyles(element, {\n\t                visibility: \'hidden\',\n\t                display: \'block\'\n\t            });\n\t            this._visible = true;\n\t        }\n\n\t        if (template) {\n\t            text = template({\n\t                from: from,\n\t                to: to\n\t            });\n\t        }\n\n\t        tooltip.innerHTML = text;\n\t        elementStyles(tooltip, {\n\t            left: bbox.center().x - tooltip.offsetWidth / 2,\n\t            top: bbox.y1\n\t        });\n\n\t        var tooltipStyle = elementStyles(tooltip, [ \'marginTop\', \'borderTopWidth\', \'height\' ]);\n\n\t        elementStyles(scroll, {\n\t            width: scrollWidth,\n\t            left: minPos + offset * scale,\n\t            top: bbox.y1 + tooltipStyle.marginTop + tooltipStyle.borderTopWidth + tooltipStyle.height / 2\n\t        });\n\n\t        elementStyles(element, {\n\t            visibility: \'visible\'\n\t        });\n\t    },\n\n\t    clearHideTimeout: function() {\n\t        if (this._hideTimeout) {\n\t            clearTimeout(this._hideTimeout);\n\t        }\n\n\t        if (this._hideAnimation) {\n\t            this._hideAnimation.cancel();\n\t        }\n\t    },\n\n\t    hide: function() {\n\t        var this$1 = this;\n\n\t        this.clearHideTimeout();\n\n\t        this._hideTimeout = setTimeout(function () {\n\t            this$1._visible = false;\n\t            this$1._hideAnimation = new FadeOutAnimation(this$1.element);\n\t            this$1._hideAnimation.setup();\n\t            this$1._hideAnimation.play();\n\t        }, this.options.hideDelay);\n\t    },\n\n\t    destroy: function() {\n\t        this.clearHideTimeout();\n\t        if (this.container) {\n\t            this.container.removeChild(this.element);\n\t        }\n\t        delete this.container;\n\t        delete this.chartService;\n\t        delete this.element;\n\t        delete this.tooltip;\n\t        delete this.scroll;\n\t    }\n\t});\n\n\tdataviz.setDefaultOptions(NavigatorHint, {\n\t    format: "{0:d} - {1:d}",\n\t    hideDelay: 500\n\t});\n\n\tvar NAVIGATOR_PANE = "_navigator";\n\tvar NAVIGATOR_AXIS = NAVIGATOR_PANE;\n\n\tvar constants = {\n\t\tNAVIGATOR_AXIS: NAVIGATOR_AXIS,\n\t\tNAVIGATOR_PANE: NAVIGATOR_PANE\n\t};\n\n\tvar ZOOM_ACCELERATION = 3;\n\n\tvar Navigator = dataviz.Class.extend({\n\t    init: function(chart) {\n\n\t        this.chart = chart;\n\t        var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n\t        var select = options.select;\n\t        if (select) {\n\t            select.from = this.parseDate(select.from);\n\t            select.to = this.parseDate(select.to);\n\t        }\n\n\t        if (!dataviz.defined(options.hint.visible)) {\n\t            options.hint.visible = options.visible;\n\t        }\n\n\t        var obj;\n\t        this.chartObserver = new dataviz.InstanceObserver(this, ( obj = {}, obj[datavizConstants.DRAG] = \'_drag\', obj[datavizConstants.DRAG_END] = \'_dragEnd\', obj[datavizConstants.ZOOM] = \'_zoom\', obj[datavizConstants.ZOOM_END] = \'_zoomEnd\', obj ));\n\t        chart.addObserver(this.chartObserver);\n\t    },\n\n\t    parseDate: function(value) {\n\t        return dataviz.parseDate(this.chart.chartService.intl, value);\n\t    },\n\n\t    clean: function() {\n\t        if (this.selection) {\n\t            this.selection.destroy();\n\t            this.selection = null;\n\t        }\n\n\t        if (this.hint) {\n\t            this.hint.destroy();\n\t            this.hint = null;\n\t        }\n\t    },\n\n\t    destroy: function() {\n\t        if (this.chart) {\n\t            this.chart.removeObserver(this.chartObserver);\n\t            delete this.chart;\n\t        }\n\n\t        this.clean();\n\t    },\n\n\t    redraw: function() {\n\t        this._redrawSelf();\n\t        this.initSelection();\n\t    },\n\n\t    initSelection: function() {\n\t        var ref = this;\n\t        var chart = ref.chart;\n\t        var options = ref.options;\n\t        var axis = this.mainAxis();\n\t        var ref$1 = axis.roundedRange();\n\t        var min = ref$1.min;\n\t        var max = ref$1.max;\n\t        var ref$2 = options.select;\n\t        var from = ref$2.from;\n\t        var to = ref$2.to;\n\t        var mousewheel = ref$2.mousewheel;\n\t        var axisClone = clone(axis);\n\n\t        if (axis.categoriesCount() === 0) {\n\t            return;\n\t        }\n\n\t        this.clean();\n\n\t        // "Freeze" the selection axis position until the next redraw\n\t        axisClone.box = axis.box;\n\n\t        this.selection = new dataviz.Selection(chart, axisClone, {\n\t            min: min,\n\t            max: max,\n\t            from: from || min,\n\t            to: to || max,\n\t            mousewheel: dataviz.valueOrDefault(mousewheel, { zoom: "left" }),\n\t            visible: options.visible\n\t        }, new dataviz.InstanceObserver(this, {\n\t            selectStart: \'_selectStart\',\n\t            select: \'_select\',\n\t            selectEnd: \'_selectEnd\'\n\t        }));\n\n\t        if (options.hint.visible) {\n\t            this.hint = new NavigatorHint(chart.element, chart.chartService, {\n\t                min: min,\n\t                max: max,\n\t                template: dataviz.getTemplate(options.hint),\n\t                format: options.hint.format\n\t            });\n\t        }\n\t    },\n\n\t    setRange: function() {\n\t        var plotArea = this.chart._createPlotArea(true);\n\t        var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n\t        var ref = axis.roundedRange();\n\t        var min = ref.min;\n\t        var max = ref.max;\n\n\t        var select = this.options.select || {};\n\t        var from = select.from || min;\n\t        if (from < min) {\n\t            from = min;\n\t        }\n\n\t        var to = select.to || max;\n\t        if (to > max) {\n\t            to = max;\n\t        }\n\n\t        this.options.select = deepExtend({}, select, {\n\t            from: from,\n\t            to: to\n\t        });\n\n\t        this.filterAxes();\n\t    },\n\n\t    _redrawSelf: function(silent) {\n\t        var plotArea = this.chart._plotArea;\n\n\t        if (plotArea) {\n\t            plotArea.redraw(dataviz.last(plotArea.panes), silent);\n\t        }\n\t    },\n\n\t    redrawSlaves: function() {\n\t        var chart = this.chart;\n\t        var plotArea = chart._plotArea;\n\t        var slavePanes = plotArea.panes.slice(0, -1);\n\n\t        // Update the original series and categoryAxis before partial refresh.\n\t        plotArea.srcSeries = chart.options.series;\n\t        plotArea.options.categoryAxis = chart.options.categoryAxis;\n\t        plotArea.clearSeriesPointsCache();\n\n\t        plotArea.redraw(slavePanes);\n\t    },\n\n\t    _drag: function(e) {\n\t        var ref = this;\n\t        var chart = ref.chart;\n\t        var selection = ref.selection;\n\t        var coords = chart._eventCoordinates(e.originalEvent);\n\t        var navigatorAxis = this.mainAxis();\n\t        var naviRange = navigatorAxis.roundedRange();\n\t        var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n\t        var axis = chart._plotArea.categoryAxis;\n\t        var range = e.axisRanges[axis.options.name];\n\t        var select = this.options.select;\n\t        var duration;\n\n\t        if (!range || inNavigator || !selection) {\n\t            return;\n\t        }\n\n\t        if (select.from && select.to) {\n\t            duration = toTime(select.to) - toTime(select.from);\n\t        } else {\n\t            duration = toTime(selection.options.to) - toTime(selection.options.from);\n\t        }\n\n\t        var from = dataviz.toDate(dataviz.limitValue(\n\t            toTime(range.min),\n\t            naviRange.min, toTime(naviRange.max) - duration\n\t        ));\n\n\t        var to = dataviz.toDate(dataviz.limitValue(\n\t            toTime(from) + duration,\n\t            toTime(naviRange.min) + duration, naviRange.max\n\t        ));\n\n\t        this.options.select = { from: from, to: to };\n\n\t        if (this.options.liveDrag) {\n\t            this.filterAxes();\n\t            this.redrawSlaves();\n\t        }\n\n\t        selection.set(from, to);\n\n\t        this.showHint(from, to);\n\t    },\n\n\t    _dragEnd: function() {\n\t        this.filterAxes();\n\t        this.filter();\n\t        this.redrawSlaves();\n\n\t        if (this.hint) {\n\t            this.hint.hide();\n\t        }\n\t    },\n\n\t    readSelection: function() {\n\t        var ref = this;\n\t        var ref_selection_options = ref.selection.options;\n\t        var from = ref_selection_options.from;\n\t        var to = ref_selection_options.to;\n\t        var select = ref.options.select;\n\n\t        select.from = from;\n\t        select.to = to;\n\t    },\n\n\t    filterAxes: function() {\n\t        var ref = this;\n\t        var select = ref.options.select; if (select === void 0) { select = { }; }\n\t        var chart = ref.chart;\n\t        var allAxes = chart.options.categoryAxis;\n\t        var from = select.from;\n\t        var to = select.to;\n\n\t        for (var idx = 0; idx < allAxes.length; idx++) {\n\t            var axis = allAxes[idx];\n\t            if (axis.pane !== NAVIGATOR_PANE) {\n\t                axis.min = from;\n\t                axis.max = to;\n\t            }\n\t        }\n\t    },\n\n\t    filter: function() {\n\t        var ref = this;\n\t        var chart = ref.chart;\n\t        var select = ref.options.select;\n\n\t        if (!chart.requiresHandlers([ "navigatorFilter" ])) {\n\t            return;\n\t        }\n\n\t        var mainAxis = this.mainAxis();\n\t        var args = {\n\t            from: select.from,\n\t            to: select.to\n\t        };\n\n\t        if (mainAxis.options.type !== \'category\') {\n\t            var axisOptions = new dataviz.DateCategoryAxis(deepExtend({\n\t                baseUnit: "fit"\n\t            }, chart.options.categoryAxis[0], {\n\t                categories: [ select.from, select.to ]\n\t            }), chart.chartService).options;\n\n\t            args.from = dataviz.addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n\t            args.to = dataviz.addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n\t        }\n\n\t        this.chart.trigger("navigatorFilter", args);\n\t    },\n\n\t    _zoom: function(e) {\n\t        var ref = this;\n\t        var axis = ref.chart._plotArea.categoryAxis;\n\t        var selection = ref.selection;\n\t        var ref_options = ref.options;\n\t        var select = ref_options.select;\n\t        var liveDrag = ref_options.liveDrag;\n\t        var mainAxis = this.mainAxis();\n\t        var delta = e.delta;\n\n\t        if (!selection) {\n\t            return;\n\t        }\n\n\t        var fromIx = mainAxis.categoryIndex(selection.options.from);\n\t        var toIx = mainAxis.categoryIndex(selection.options.to);\n\n\t        e.originalEvent.preventDefault();\n\n\t        if (Math.abs(delta) > 1) {\n\t            delta *= ZOOM_ACCELERATION;\n\t        }\n\n\t        if (toIx - fromIx > 1) {\n\t            selection.expand(delta);\n\t            this.readSelection();\n\t        } else {\n\t            axis.options.min = select.from;\n\t            select.from = axis.scaleRange(-e.delta).min;\n\t        }\n\n\t        if (liveDrag) {\n\t            this.filterAxes();\n\t            this.redrawSlaves();\n\t        }\n\n\t        selection.set(select.from, select.to);\n\n\t        this.showHint(this.options.select.from, this.options.select.to);\n\t    },\n\n\t    _zoomEnd: function(e) {\n\t        this._dragEnd(e);\n\t    },\n\n\t    showHint: function(from, to) {\n\t        var plotArea = this.chart._plotArea;\n\n\t        if (this.hint) {\n\t            this.hint.show(from, to, plotArea.backgroundBox());\n\t        }\n\t    },\n\n\t    _selectStart: function(e) {\n\t        return this.chart._selectStart(e);\n\t    },\n\n\t    _select: function(e) {\n\t        this.showHint(e.from, e.to);\n\n\t        return this.chart._select(e);\n\t    },\n\n\t    _selectEnd: function(e) {\n\t        if (this.hint) {\n\t            this.hint.hide();\n\t        }\n\n\t        this.readSelection();\n\t        this.filterAxes();\n\t        this.filter();\n\t        this.redrawSlaves();\n\n\t        return this.chart._selectEnd(e);\n\t    },\n\n\t    mainAxis: function() {\n\t        var plotArea = this.chart._plotArea;\n\n\t        if (plotArea) {\n\t            return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\t        }\n\t    },\n\n\t    select: function(from, to) {\n\t        var select = this.options.select;\n\n\t        if (from && to) {\n\t            select.from = this.parseDate(from);\n\t            select.to = this.parseDate(to);\n\n\t            this.filterAxes();\n\t            this.filter();\n\t            this.redrawSlaves();\n\n\t            this.selection.set(from, to);\n\t        }\n\n\t        return {\n\t            from: select.from,\n\t            to: select.to\n\t        };\n\t    }\n\t});\n\n\tNavigator.setup = function(options, themeOptions) {\n\t    if (options === void 0) { options = {}; }\n\t    if (themeOptions === void 0) { themeOptions = {}; }\n\n\t    if (options.__navi) {\n\t        return;\n\t    }\n\t    options.__navi = true;\n\n\t    var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n\t    var panes = options.panes = [].concat(options.panes);\n\t    var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n\t    if (!naviOptions.visible) {\n\t        paneOptions.visible = false;\n\t        paneOptions.height = 0.1;\n\t    }\n\n\t    panes.push(paneOptions);\n\n\t    Navigator.attachAxes(options, naviOptions);\n\t    Navigator.attachSeries(options, naviOptions, themeOptions);\n\t};\n\n\tNavigator.attachAxes = function(options, naviOptions) {\n\t    var series = naviOptions.series || [];\n\t    var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n\t    var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n\t    var equallySpacedSeries = dataviz.filterSeriesByType(series, datavizConstants.EQUALLY_SPACED_SERIES);\n\t    var justifyAxis = equallySpacedSeries.length === 0;\n\n\t    var base = deepExtend({\n\t        type: "date",\n\t        pane: NAVIGATOR_PANE,\n\t        roundToBaseUnit: !justifyAxis,\n\t        justified: justifyAxis,\n\t        _collapse: false,\n\t        majorTicks: { visible: true },\n\t        tooltip: { visible: false },\n\t        labels: { step: 1 },\n\t        autoBind: naviOptions.autoBindElements,\n\t        autoBaseUnitSteps: {\n\t            minutes: [ 1 ],\n\t            hours: [ 1, 2 ],\n\t            days: [ 1, 2 ],\n\t            weeks: [],\n\t            months: [ 1 ],\n\t            years: [ 1 ]\n\t        }\n\t    });\n\t    var user = naviOptions.categoryAxis;\n\n\t    categoryAxes.push(\n\t        deepExtend({}, base, {\n\t            maxDateGroups: 200\n\t        }, user, {\n\t            name: NAVIGATOR_AXIS,\n\t            title: null,\n\t            baseUnit: "fit",\n\t            baseUnitStep: "auto",\n\t            labels: { visible: false },\n\t            majorTicks: { visible: false }\n\t        }), deepExtend({}, base, user, {\n\t            name: NAVIGATOR_AXIS + "_labels",\n\t            maxDateGroups: 20,\n\t            baseUnitStep: "auto",\n\t            labels: { position: "" },\n\t            plotBands: [],\n\t            autoBaseUnitSteps: {\n\t                minutes: []\n\t            },\n\t            _overlap: true\n\t        }), deepExtend({}, base, user, {\n\t            name: NAVIGATOR_AXIS + "_ticks",\n\t            maxDateGroups: 200,\n\t            majorTicks: {\n\t                width: 0.5\n\t            },\n\t            plotBands: [],\n\t            title: null,\n\t            labels: { visible: false, mirror: true },\n\t            _overlap: true\n\t        })\n\t    );\n\n\t    valueAxes.push(deepExtend({\n\t        name: NAVIGATOR_AXIS,\n\t        pane: NAVIGATOR_PANE,\n\t        majorGridLines: {\n\t            visible: false\n\t        },\n\t        visible: false\n\t    }, naviOptions.valueAxis));\n\t};\n\n\tNavigator.attachSeries = function(options, naviOptions, themeOptions) {\n\t    var series = options.series = options.series || [];\n\t    var navigatorSeries = [].concat(naviOptions.series || []);\n\t    var seriesColors = themeOptions.seriesColors;\n\t    var defaults = naviOptions.seriesDefaults;\n\n\t    for (var idx = 0; idx < navigatorSeries.length; idx++) {\n\t        series.push(\n\t            deepExtend({\n\t                color: seriesColors[idx % seriesColors.length],\n\t                categoryField: naviOptions.dateField,\n\t                visibleInLegend: false,\n\t                tooltip: {\n\t                    visible: false\n\t                }\n\t            }, defaults, navigatorSeries[idx], {\n\t                axis: NAVIGATOR_AXIS,\n\t                categoryAxis: NAVIGATOR_AXIS,\n\t                autoBind: naviOptions.autoBindElements\n\t            })\n\t        );\n\t    }\n\t};\n\n\tfunction ClonedObject() { }\n\tfunction clone(obj) {\n\t    ClonedObject.prototype = obj;\n\t    return new ClonedObject();\n\t}\n\n\tvar AUTO_CATEGORY_WIDTH = 28;\n\n\tvar StockChart = Chart.extend({\n\t    applyDefaults: function(options, themeOptions) {\n\t        var width = dataviz.elementSize(this.element).width || datavizConstants.DEFAULT_WIDTH;\n\t        var theme = themeOptions;\n\n\t        var stockDefaults = {\n\t            seriesDefaults: {\n\t                categoryField: options.dateField\n\t            },\n\t            axisDefaults: {\n\t                categoryAxis: {\n\t                    name: "default",\n\t                    majorGridLines: {\n\t                        visible: false\n\t                    },\n\t                    labels: {\n\t                        step: 2\n\t                    },\n\t                    majorTicks: {\n\t                        visible: false\n\t                    },\n\t                    maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n\t                }\n\t            }\n\t        };\n\n\t        if (theme) {\n\t            theme = deepExtend({}, theme, stockDefaults);\n\t        }\n\n\t        Navigator.setup(options, theme);\n\n\t        Chart.fn.applyDefaults.call(this, options, theme);\n\t    },\n\n\t    _setElementClass: function(element) {\n\t        dataviz.addClass(element, \'k-chart k-stockchart\');\n\t    },\n\n\t    setOptions: function(options) {\n\t        this.destroyNavigator();\n\t        Chart.fn.setOptions.call(this, options);\n\t    },\n\n\t    noTransitionsRedraw: function() {\n\t        var transitions = this.options.transitions;\n\n\t        this.options.transitions = false;\n\t        this._fullRedraw();\n\t        this.options.transitions = transitions;\n\t    },\n\n\t    _resize: function() {\n\t        this.noTransitionsRedraw();\n\t    },\n\n\t    _redraw: function() {\n\t        var navigator = this.navigator;\n\n\t        if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n\t            navigator.redrawSlaves();\n\t        } else {\n\t            this._fullRedraw();\n\t        }\n\t    },\n\n\t    _dirty: function() {\n\t        var options = this.options;\n\t        var series = [].concat(options.series, options.navigator.series);\n\t        var seriesCount = dataviz.grep(series, function(s) { return s && s.visible; }).length;\n\t        var dirty = this._seriesCount !== seriesCount;\n\t        this._seriesCount = seriesCount;\n\n\t        return dirty;\n\t    },\n\n\t    _fullRedraw: function() {\n\t        var navigator = this.navigator;\n\n\t        if (!navigator) {\n\t            navigator = this.navigator = new Navigator(this);\n\t            this.trigger("navigatorCreated", { navigator: navigator });\n\t        }\n\n\t        navigator.clean();\n\t        navigator.setRange();\n\n\t        Chart.fn._redraw.call(this);\n\n\t        navigator.initSelection();\n\t    },\n\n\t    _trackSharedTooltip: function(coords) {\n\t        var plotArea = this._plotArea;\n\t        var pane = plotArea.paneByPoint(coords);\n\n\t        if (pane && pane.options.name === NAVIGATOR_PANE) {\n\t            this._unsetActivePoint();\n\t        } else {\n\t            Chart.fn._trackSharedTooltip.call(this, coords);\n\t        }\n\t    },\n\n\t    bindCategories: function() {\n\t        Chart.fn.bindCategories.call(this);\n\t        this.copyNavigatorCategories();\n\t    },\n\n\t    copyNavigatorCategories: function() {\n\t        var definitions = [].concat(this.options.categoryAxis);\n\t        var categories;\n\n\t        for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n\t            var axis = definitions[axisIx];\n\t            if (axis.name === NAVIGATOR_AXIS) {\n\t                categories = axis.categories;\n\t            } else if (categories && axis.pane === NAVIGATOR_PANE) {\n\t                axis.categories = categories;\n\t            }\n\t        }\n\t    },\n\n\t    destroyNavigator: function() {\n\t        if (this.navigator) {\n\t            this.navigator.destroy();\n\t            this.navigator = null;\n\t        }\n\t    },\n\n\t    destroy: function() {\n\t        this.destroyNavigator();\n\t        Chart.fn.destroy.call(this);\n\t    },\n\n\t    _stopChartHandlers: function(e) {\n\t        var coords = this._eventCoordinates(e);\n\t        var pane = this._plotArea.paneByPoint(coords);\n\n\t        return Chart.fn._stopChartHandlers.call(this, e) || (pane && pane.options.name === NAVIGATOR_PANE);\n\t    },\n\n\t    _toggleDragZoomEvents: function() {\n\t        if (!this._dragZoomEnabled) {\n\t            this.element.style.touchAction = "none";\n\n\t            this._dragZoomEnabled = true;\n\t        }\n\t    }\n\t});\n\n\tdataviz.setDefaultOptions(StockChart, {\n\t    dateField: "date",\n\t    axisDefaults: {\n\t        categoryAxis: {\n\t            type: "date",\n\t            baseUnit: "fit",\n\t            justified: true\n\t        },\n\t        valueAxis: {\n\t            narrowRange: true,\n\t            labels: {\n\t                format: "C"\n\t            }\n\t        }\n\t    },\n\t    navigator: {\n\t        select: {},\n\t        seriesDefaults: {\n\t            markers: {\n\t                visible: false\n\t            },\n\t            tooltip: {\n\t                visible: true\n\t            },\n\t            line: {\n\t                width: 2\n\t            }\n\t        },\n\t        hint: {},\n\t        visible: true\n\t    },\n\t    tooltip: {\n\t        visible: true\n\t    },\n\t    legend: {\n\t        visible: false\n\t    }\n\t});\n\n\tkendo.deepExtend(kendo.dataviz, {\n\t    constants: constants,\n\t    Navigator: Navigator,\n\t    NavigatorHint: NavigatorHint,\n\t    StockChart: StockChart\n\t});\n\n\t})();\n\n\t}, __webpack_require__(3));\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/stock/kendo-stock-chart.js?')},"./node_modules/@progress/kendo-ui/js/dataviz/stock/stock-chart.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/stock/stock-chart.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(914);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 914:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(915)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function ($) {\n\n\t    var kendo = window.kendo;\n\t    var dataviz = kendo.dataviz;\n\t    var ChartInstanceObserver = dataviz.ChartInstanceObserver;\n\t    var Chart = dataviz.ui.Chart;\n\t    var KendoStockChart = dataviz.StockChart;\n\t    var constants = dataviz.constants;\n\t    var NAVIGATOR_AXIS = constants.NAVIGATOR_AXIS;\n\t    var NAVIGATOR_PANE = constants.NAVIGATOR_PANE;\n\t    var deepExtend = kendo.deepExtend;\n\t    var defined = dataviz.defined;\n\t    var proxy = $.proxy;\n\n\t    var CHANGE = "change";\n\n\t    var StockInstanceObserver = ChartInstanceObserver.extend({\n\t        handlerMap: {\n\t            navigatorFilter: \'_onNavigatorFilter\',\n\t            navigatorCreated: \'_onNavigatorCreated\'\n\t        }\n\t    });\n\n\t    var StockChart = Chart.extend({\n\n\t        options: {\n\t            name: "StockChart",\n\t            dateField: "date",\n\t            axisDefaults: {\n\t                categoryAxis: {\n\t                    type: "date",\n\t                    baseUnit: "fit",\n\t                    justified: true\n\t                },\n\t                valueAxis: {\n\t                    narrowRange: true,\n\t                    labels: {\n\t                        format: "C"\n\t                    }\n\t                }\n\t            },\n\t            navigator: {\n\t                select: {},\n\t                seriesDefaults: {\n\t                    markers: {\n\t                        visible: false\n\t                    },\n\t                    tooltip: {\n\t                        visible: true,\n\t                        template: "#= kendo.toString(category, \'d\') #"\n\t                    },\n\t                    line: {\n\t                        width: 2\n\t                    }\n\t                },\n\t                hint: {},\n\t                visible: true\n\t            },\n\t            tooltip: {\n\t                visible: true\n\t            },\n\t            legend: {\n\t                visible: false\n\t            },\n\t            persistSeriesVisibility: true\n\t        },\n\n\t        _createChart: function(options, themeOptions) {\n\t            this._initNavigatorOptions(options);\n\t            this._instance = new KendoStockChart(this.element[0], options, themeOptions, {\n\t                observer: new StockInstanceObserver(this),\n\t                sender: this,\n\t                rtl: this._isRtl()\n\t            });\n\t        },\n\n\t        _initNavigatorOptions: function(options) {\n\t            var navigatorOptions = options.navigator || {};\n\t            var support = kendo.support;\n\t            var isTouch = support.touch;\n\t            var isFirefox = support.browser.mozilla;\n\n\t            deepExtend(navigatorOptions, {\n\t                autoBindElements: !navigatorOptions.dataSource,\n\t                partialRedraw: navigatorOptions.dataSource,\n\t                liveDrag: !isTouch && !isFirefox\n\t            });\n\t        },\n\n\t        _initDataSource: function(userOptions) {\n\t            var options = userOptions || {},\n\t                dataSource = options.dataSource,\n\t                hasServerFiltering = dataSource && dataSource.serverFiltering,\n\t                mainAxis = [].concat(options.categoryAxis)[0],\n\t                naviOptions = options.navigator || {},\n\t                select = naviOptions.select,\n\t                hasSelect = select && select.from && select.to;\n\n\t            if (hasServerFiltering && hasSelect) {\n\t                var filter = [].concat(dataSource.filter || []);\n\n\t                var from = kendo.parseDate(select.from);\n\t                var to = kendo.parseDate(select.to);\n\t                var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n\t                    baseUnit: "fit"\n\t                }, mainAxis, {\n\t                    categories: [from, to]\n\t                }), kendo);\n\n\t                dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n\t            }\n\n\t            Chart.fn._initDataSource.call(this, userOptions);\n\t        },\n\n\t        _onNavigatorCreated: function(e) {\n\t            this._instance = e.sender;\n\t            this.options = e.sender.options;\n\t            this._navigator = this.navigator = e.navigator;\n\t            this._initNavigatorDataSource();\n\t        },\n\n\t        _initNavigatorDataSource: function() {\n\t            var navigatorOptions = this.options.navigator;\n\t            var autoBind = navigatorOptions.autoBind;\n\t            var dsOptions = navigatorOptions.dataSource;\n\n\t            if (dsOptions) {\n\t                this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || proxy(this._onNavigatorDataChanged, this);\n\t                this._navigatorDataSource = kendo.data.DataSource\n\t                    .create(dsOptions)\n\t                    .bind(CHANGE, this._navigatorDataChangedHandler);\n\n\t                if (!defined(autoBind)) {\n\t                   autoBind = this.options.autoBind;\n\t                }\n\n\t                if (autoBind) {\n\t                    this._navigatorDataSource.fetch();\n\t                }\n\t            }\n\t        },\n\n\t        _bindNavigatorSeries: function(series, data) {\n\t            var seriesIx, currentSeries,\n\t                seriesLength = series.length;\n\n\t            for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n\t                currentSeries = series[seriesIx];\n\n\t                if (currentSeries.axis == NAVIGATOR_AXIS && this._isBindable(currentSeries)) {\n\t                    currentSeries.data = data;\n\t                }\n\t            }\n\t        },\n\n\t        _onNavigatorDataChanged: function() {\n\t            var chart = this,\n\t                instance = chart._instance,\n\t                categoryAxes = chart.options.categoryAxis,\n\t                axisIx,\n\t                axesLength = categoryAxes.length,\n\t                data = chart._navigatorDataSource.view(),\n\t                currentAxis,\n\t                naviCategories;\n\n\t            this._bindNavigatorSeries(chart.options.series, data);\n\t            if (chart._sourceSeries) {\n\t                this._bindNavigatorSeries(chart._sourceSeries, data);\n\t            }\n\n\t            for (axisIx = 0; axisIx < axesLength; axisIx++) {\n\t                currentAxis = categoryAxes[axisIx];\n\n\t                if (currentAxis.pane == NAVIGATOR_PANE) {\n\t                    if (currentAxis.name == NAVIGATOR_AXIS) {\n\t                        chart._bindCategoryAxis(currentAxis, data, axisIx);\n\t                        naviCategories = currentAxis.categories;\n\t                    } else {\n\t                        currentAxis.categories = naviCategories;\n\t                    }\n\t                }\n\t            }\n\n\t            if (instance._model) {\n\t                var navigator = this.navigator;\n\t                navigator.redraw();\n\t                navigator.setRange();\n\n\t                if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n\t                    navigator.redrawSlaves();\n\t                }\n\t            }\n\t        },\n\n\t        _bindCategories: function() {\n\t            Chart.fn._bindCategories.call(this);\n\t            if (this._instance) {\n\t                this._instance.copyNavigatorCategories();\n\t            }\n\t        },\n\n\t        _onDataChanged: function() {\n\t            Chart.fn._onDataChanged.call(this);\n\n\t            this._dataBound = true;\n\t        },\n\n\t        setOptions: function(options) {\n\t            this._removeNavigatorDataSource();\n\t            this._initNavigatorOptions(options);\n\t            this._instance.destroyNavigator();\n\t            Chart.fn.setOptions.call(this, options);\n\t        },\n\n\t        _onNavigatorFilter: function(e) {\n\t            this.dataSource.filter(buildFilter(e.from, e.to));\n\t        },\n\n\t        requiresHandlers: function(names) {\n\t            if (dataviz.inArray(\'navigatorFilter\', names)) {\n\t                var dataSource = this.dataSource;\n\t                var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n\t                return hasServerFiltering && this.options.navigator.dataSource;\n\t            }\n\n\t            return Chart.fn.requiresHandlers.call(this, names);\n\t        },\n\n\t        _removeNavigatorDataSource: function() {\n\t            var navigatorDataSource = this._navigatorDataSource;\n\t            if (navigatorDataSource) {\n\t                navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n\t                delete this._navigatorDataSource;\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            Chart.fn.destroy.call(this);\n\t            this._removeNavigatorDataSource();\n\t        }\n\t    });\n\n\t    dataviz.ui.plugin(StockChart);\n\n\t    function buildFilter(from, to) {\n\t        return [{\n\t            field: "Date", operator: "gte", value: from\n\t        }, {\n\t            field: "Date", operator: "lt", value: to\n\t        }];\n\t    }\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n/***/ }),\n\n/***/ 915:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo-stock-chart */ "./node_modules/@progress/kendo-ui/js/dataviz/stock/kendo-stock-chart.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/stock/stock-chart.js?')},"./node_modules/@progress/kendo-ui/js/dataviz/themes/auto-theme.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/themes/auto-theme.js ***!
  \*************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(916);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 858:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../../kendo.dataviz.core */ "./node_modules/@progress/kendo-ui/js/kendo.dataviz.core.js");\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t     !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(858) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function($) {\n\t    var cache;\n\n\t    function autoTheme(force) {\n\t        if (!force && cache) {\n\t            return cache;\n\t        }\n\n\t        var theme = { chart: kendo.dataviz.chartBaseTheme() };\n\t        var hook = $(\n\t            \'<div style="display: none">\' +\n\t            \'  <div class="k-var--accent"></div>\' +\n\t            \'  <div class="k-var--accent-contrast"></div>\' +\n\t            \'  <div class="k-var--base"></div>\' +\n\t            \'  <div class="k-var--background"></div>\' +\n\t            \'  <div class="k-var--normal-background"></div>\' +\n\t            \'  <div class="k-var--normal-text-color"></div>\' +\n\t            \'  <div class="k-var--hover-background"></div>\' +\n\t            \'  <div class="k-var--hover-text-color"></div>\' +\n\t            \'  <div class="k-var--selected-background"></div>\' +\n\t            \'  <div class="k-var--selected-text-color"></div>\' +\n\t            \'  <div class="k-var--chart-error-bars-background"></div>\' +\n\t            \'  <div class="k-var--chart-notes-background"></div>\' +\n\t            \'  <div class="k-var--chart-notes-border"></div>\' +\n\t            \'  <div class="k-var--chart-notes-lines"></div>\' +\n\t            \'  <div class="k-var--chart-crosshair-background"></div>\' +\n\t            \'  <div class="k-var--chart-inactive"></div>\' +\n\t            \'  <div class="k-var--chart-major-lines"></div>\' +\n\t            \'  <div class="k-var--chart-minor-lines"></div>\' +\n\t            \'  <div class="k-var--chart-area-opacity"></div>\' +\n\t            \'  <div class="k-widget">\' +\n\t            \'      <div class="k-var--chart-font"></div>\' +\n\t            \'      <div class="k-var--chart-title-font"></div>\' +\n\t            \'      <div class="k-var--chart-label-font"></div>\' +\n\t            \'  </div>\' +\n\t            \'  <div class="k-var--series">\' +\n\t            \'    <div class="k-var--series-a"></div>\' +\n\t            \'    <div class="k-var--series-b"></div>\' +\n\t            \'    <div class="k-var--series-c"></div>\' +\n\t            \'    <div class="k-var--series-d"></div>\' +\n\t            \'    <div class="k-var--series-e"></div>\' +\n\t            \'    <div class="k-var--series-f"></div>\' +\n\t            \'  </div>\' +\n\t            \'  <div class="k-var--gauge-pointer"></div>\' +\n\t            \'  <div class="k-var--gauge-track"></div>\' +\n\t            \'</div>\').appendTo(document.body);\n\n\t        function mapColor(key, varName) {\n\t            set(key, queryStyle(varName, "backgroundColor"));\n\t        }\n\n\t        function queryStyle(varName, prop) {\n\t            return hook.find(".k-var--" + varName).css(prop);\n\t        }\n\n\t        function set(path, value) {\n\t            var store = theme;\n\t            var parts = path.split(\'.\');\n\t            var key = parts.shift();\n\n\t            while (parts.length > 0) {\n\t                store = store[key] = store[key] || {};\n\t                key = parts.shift();\n\t            }\n\n\t            store[key] = value;\n\t        }\n\n\t        (function setColors() {\n\t            mapColor("chart.axisDefaults.crosshair.color", "chart-crosshair-background");\n\t            mapColor("chart.axisDefaults.labels.color", "normal-text-color");\n\t            mapColor("chart.axisDefaults.line.color", "chart-major-lines");\n\t            mapColor("chart.axisDefaults.majorGridLines.color", "chart-major-lines");\n\t            mapColor("chart.axisDefaults.minorGridLines.color", "chart-minor-lines");\n\t            mapColor("chart.axisDefaults.notes.icon.background", "chart-notes-background");\n\t            mapColor("chart.axisDefaults.notes.icon.border.color", "chart-notes-border");\n\t            mapColor("chart.axisDefaults.notes.line.color", "chart-notes-lines");\n\t            mapColor("chart.axisDefaults.title.color", "normal-text-color");\n\t            mapColor(\'chart.chartArea.background\', \'background\');\n\t            mapColor("chart.legend.inactiveItems.labels.color", "chart-inactive");\n\t            mapColor("chart.legend.inactiveItems.markers.color", "chart-inactive");\n\t            mapColor("chart.legend.labels.color", "normal-text-color");\n\t            mapColor("chart.seriesDefaults.boxPlot.downColor", "chart-major-lines");\n\t            mapColor("chart.seriesDefaults.boxPlot.mean.color", "base");\n\t            mapColor("chart.seriesDefaults.boxPlot.median.color", "base");\n\t            mapColor("chart.seriesDefaults.boxPlot.whiskers.color", "accent");\n\t            mapColor("chart.seriesDefaults.bullet.target.color", "accent");\n\t            mapColor("chart.seriesDefaults.candlestick.downColor", "normal-text-color");\n\t            mapColor("chart.seriesDefaults.candlestick.line.color", "normal-text-color");\n\t            mapColor("chart.seriesDefaults.errorBars.color", "chart-error-bars-background");\n\t            mapColor("chart.seriesDefaults.horizontalWaterfall.line.color", "chart-major-lines");\n\t            mapColor("chart.seriesDefaults.icon.border.color", "chart-major-lines");\n\t            mapColor("chart.seriesDefaults.labels.background", "background");\n\t            mapColor("chart.seriesDefaults.labels.color", "normal-text-color");\n\t            mapColor("chart.seriesDefaults.notes.icon.background", "chart-notes-background");\n\t            mapColor("chart.seriesDefaults.notes.icon.border.color", "chart-notes-border");\n\t            mapColor("chart.seriesDefaults.notes.line.color", "chart-notes-lines");\n\t            mapColor("chart.seriesDefaults.verticalBoxPlot.downColor", "chart-major-lines");\n\t            mapColor("chart.seriesDefaults.verticalBoxPlot.mean.color", "base");\n\t            mapColor("chart.seriesDefaults.verticalBoxPlot.median.color", "base");\n\t            mapColor("chart.seriesDefaults.verticalBoxPlot.whiskers.color", "accent");\n\t            mapColor("chart.seriesDefaults.verticalBullet.target.color", "accent");\n\t            mapColor("chart.seriesDefaults.waterfall.line.color", "chart-major-lines");\n\t            mapColor("chart.title.color", "normal-text-color");\n\n\t            set("chart.seriesDefaults.labels.opacity", queryStyle("chart-area-opacity", "opacity"));\n\n\t            mapColor("diagram.shapeDefaults.fill.color", "accent");\n\t            mapColor("diagram.shapeDefaults.content.color", "accent-contrast");\n\t            mapColor("diagram.shapeDefaults.connectorDefaults.fill.color", "normal-text-color");\n\t            mapColor("diagram.shapeDefaults.connectorDefaults.stroke.color", "accent-contrast");\n\t            mapColor("diagram.shapeDefaults.connectorDefaults.hover.fill.color", "accent-contrast");\n\t            mapColor("diagram.shapeDefaults.connectorDefaults.hover.stroke.color", "normal-text-color");\n\t            mapColor("diagram.editable.resize.handles.stroke.color", "normal-text-color");\n\t            mapColor("diagram.editable.resize.handles.fill.color", "normal-background");\n\t            mapColor("diagram.editable.resize.handles.hover.stroke.color", "normal-text-color");\n\t            mapColor("diagram.editable.resize.handles.hover.fill.color", "normal-text-color");\n\t            mapColor("diagram.selectable.stroke.color", "normal-text-color");\n\t            mapColor("diagram.connectionDefaults.stroke.color", "normal-text-color");\n\t            mapColor("diagram.connectionDefaults.content.color", "normal-text-color");\n\t            mapColor("diagram.connectionDefaults.selection.handles.fill.color", "accent-contrast");\n\t            mapColor("diagram.connectionDefaults.selection.handles.stroke.color", "normal-text-color");\n\t            mapColor("diagram.connectionDefaults.selection.stroke.color", "normal-text-color");\n\n\t            mapColor("gauge.pointer.color", "gauge-pointer");\n\t            mapColor("gauge.scale.labels.color", "normal-text-color");\n\t            mapColor("gauge.scale.minorTicks.color", "normal-text-color");\n\t            mapColor("gauge.scale.majorTicks.color", "normal-text-color");\n\t            mapColor("gauge.scale.line.color", "normal-text-color");\n\t            mapColor("gauge.scale.rangePlaceholderColor", "gauge-track");\n\t        })();\n\n\t        (function setFonts() {\n\t            function font(varName) {\n\t                return queryStyle(varName, "fontSize") + " " +\n\t                       queryStyle(varName, "fontFamily");\n\t            }\n\n\t            var defaultFont = font("chart-font");\n\t            var titleFont = font("chart-title-font");\n\t            var labelFont = font("chart-label-font");\n\n\t            set("chart.axisDefaults.labels.font", labelFont);\n\t            set("chart.axisDefaults.notes.label.font", defaultFont);\n\t            set("chart.axisDefaults.title.font", defaultFont);\n\t            set("chart.legend.labels.font", defaultFont);\n\t            set("chart.seriesDefaults.labels.font", labelFont);\n\t            set("chart.seriesDefaults.notes.label.font", defaultFont);\n\t            set("chart.title.font", titleFont);\n\t        })();\n\n\t        (function setSeriesColors() {\n\t            function letterPos(letter) {\n\t                return letter.toLowerCase().charCodeAt(0) - "a".charCodeAt(0);\n\t            }\n\n\t            function seriesPos(name) {\n\t                return letterPos(name.match(/series-([a-z])$/)[1]);\n\t            }\n\n\t            var series = $(".k-var--series div").toArray();\n\t            var seriesColors = series.reduce(\n\t              function(arr, el) {\n\t                var pos = seriesPos(el.className);\n\t                arr[pos] = $(el).css("backgroundColor");\n\n\t                return arr;\n\t              },\n\t              [] // Will populate the series colors in this array\n\t            );\n\n\t            set("chart.seriesColors", seriesColors);\n\t        })();\n\n\t        hook.remove();\n\n\t        cache = theme;\n\n\t        return theme;\n\t    }\n\n\t    kendo.dataviz.autoTheme = autoTheme;\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/themes/auto-theme.js?')},"./node_modules/@progress/kendo-ui/js/dataviz/themes/chart-base-theme.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/dataviz/themes/chart-base-theme.js ***!
  \*******************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(917);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ }),\n\n/***/ 858:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../../kendo.dataviz.core */ \"./node_modules/@progress/kendo-ui/js/kendo.dataviz.core.js\");\n\n/***/ }),\n\n/***/ 917:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/***********************************************************************\n\t * WARNING: this file is auto-generated.  If you change it directly,\n\t * your modifications will eventually be lost.  The source code is in\n\t * `kendo-charts` repository, you should make your changes there and\n\t * run `src-modules/sync.sh` in this repository.\n\t */\n\t(function(f, define){\n\t     !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(858) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function () {\n\n\twindow.kendo.dataviz = window.kendo.dataviz || {};\n\n\tvar BAR_GAP = 1.5;\n\tvar BAR_SPACING = 0.4;\n\tvar BLACK = '#000';\n\tvar SANS = 'Arial, Helvetica, sans-serif';\n\tvar SANS11 = \"11px \" + SANS;\n\tvar SANS12 = '12px ' + SANS;\n\tvar SANS16 = '16px ' + SANS;\n\tvar TRANSPARENT = 'transparent';\n\tvar WHITE = '#fff';\n\n\tvar notes = function () { return ({\n\t    icon: {\n\t        border: {\n\t            width: 1\n\t        }\n\t    },\n\t    label: {\n\t        font: SANS12,\n\t        padding: 3\n\t    },\n\t    line: {\n\t        length: 10,\n\t        width: 2\n\t    },\n\t    visible: true\n\t}); };\n\n\tvar axisDefaults = function () { return ({\n\t    labels: {\n\t        font: SANS12\n\t    },\n\t    notes: notes(),\n\t    title: {\n\t        font: SANS16,\n\t        margin: 5\n\t    }\n\t}); };\n\n\tvar areaSeries = function () { return ({\n\t    highlight: {\n\t        markers: {\n\t            border: {}\n\t        }\n\t    },\n\t    line: {\n\t        opacity: 1,\n\t        width: 0\n\t    },\n\t    markers: {\n\t        size: 6,\n\t        visible: false\n\t    },\n\t    opacity: 0.4\n\t}); };\n\n\tvar rangeAreaSeries = function () { return ({\n\t    highlight: {\n\t        markers: {\n\t            border: {}\n\t        }\n\t    },\n\t    line: {\n\t        opacity: 1,\n\t        width: 0\n\t    },\n\t    markers: {\n\t        size: 6,\n\t        visible: false\n\t    },\n\t    opacity: 0.4\n\t}); };\n\n\tvar barSeries = function () { return ({\n\t    gap: BAR_GAP,\n\t    spacing: BAR_SPACING\n\t}); };\n\n\tvar boxPlotSeries = function () { return ({\n\t    outliersField: \"\",\n\t    meanField: \"\",\n\t    border: {\n\t        _brightness: 0.8,\n\t        width: 1\n\t    },\n\t    downColor: WHITE,\n\t    gap: 1,\n\t    highlight: {\n\t        border: {\n\t            opacity: 1,\n\t            width: 2\n\t        },\n\t        whiskers: {\n\t            width: 3\n\t        },\n\t        mean: {\n\t            width: 2\n\t        },\n\t        median: {\n\t            width: 2\n\t        }\n\t    },\n\t    mean: {\n\t        width: 2\n\t    },\n\t    median: {\n\t        width: 2\n\t    },\n\t    spacing: 0.3,\n\t    whiskers: {\n\t        width: 2\n\t    }\n\t}); };\n\n\tvar bubbleSeries = function () { return ({\n\t    border: {\n\t        width: 0\n\t    },\n\t    labels: {\n\t        background: TRANSPARENT\n\t    },\n\t    opacity: 0.6\n\t}); };\n\n\tvar bulletSeries = function () { return ({\n\t    gap: BAR_GAP,\n\t    spacing: BAR_SPACING,\n\t    target: {\n\t        color: \"#ff0000\"\n\t    }\n\t}); };\n\n\tvar candlestickSeries = function () { return ({\n\t    border: {\n\t        _brightness: 0.8,\n\t        width: 1\n\t    },\n\t    downColor: WHITE,\n\t    gap: 1,\n\t    highlight: {\n\t        border: {\n\t            opacity: 1,\n\t            width: 2\n\t        },\n\t        line: {\n\t            width: 2\n\t        }\n\t    },\n\t    line: {\n\t        color: BLACK,\n\t        width: 1\n\t    },\n\t    spacing: 0.3\n\t}); };\n\n\tvar columnSeries = function () { return ({\n\t    gap: BAR_GAP,\n\t    spacing: BAR_SPACING\n\t}); };\n\n\tvar donutSeries = function () { return ({\n\t    margin: 1\n\t}); };\n\n\tvar lineSeries = function () { return ({\n\t    width: 2\n\t}); };\n\n\tvar ohlcSeries = function () { return ({\n\t    gap: 1,\n\t    highlight: {\n\t        line: {\n\t            opacity: 1,\n\t            width: 3\n\t        }\n\t    },\n\t    line: {\n\t        width: 1\n\t    },\n\t    spacing: 0.3\n\t}); };\n\n\tvar radarAreaSeries = function () { return ({\n\t    line: {\n\t        opacity: 1,\n\t        width: 0\n\t    },\n\t    markers: {\n\t        size: 6,\n\t        visible: false\n\t    },\n\t    opacity: 0.5\n\t}); };\n\n\tvar radarLineSeries = function () { return ({\n\t    markers: {\n\t        visible: false\n\t    },\n\t    width: 2\n\t}); };\n\n\tvar rangeBarSeries = function () { return ({\n\t    gap: BAR_GAP,\n\t    spacing: BAR_SPACING\n\t}); };\n\n\tvar rangeColumnSeries = function () { return ({\n\t    gap: BAR_GAP,\n\t    spacing: BAR_SPACING\n\t}); };\n\n\tvar scatterLineSeries = function () { return ({\n\t    width: 1\n\t}); };\n\n\tvar waterfallSeries = function () { return ({\n\t    gap: 0.5,\n\t    line: {\n\t        color: BLACK,\n\t        width: 1\n\t    },\n\t    spacing: BAR_SPACING\n\t}); };\n\n\tvar pieSeries = function () { return ({\n\t    labels: {\n\t        background: '',\n\t        color: '',\n\t        padding: {\n\t            top: 5,\n\t            bottom: 5,\n\t            left: 7,\n\t            right: 7\n\t        }\n\t    }\n\t}); };\n\n\tvar funnelSeries = function () { return ({\n\t    labels: {\n\t        background: '',\n\t        color: '',\n\t        padding: {\n\t            top: 5,\n\t            bottom: 5,\n\t            left: 7,\n\t            right: 7\n\t        }\n\t    }\n\t}); };\n\n\tvar seriesDefaults = function (options) { return ({\n\t    visible: true,\n\t    labels: {\n\t        font: SANS11\n\t    },\n\t    overlay: options.gradients ? {} : {\n\t        gradient: \"none\"\n\t    },\n\t    area: areaSeries(),\n\t    rangeArea: rangeAreaSeries(),\n\t    verticalRangeArea: rangeAreaSeries(),\n\t    bar: barSeries(),\n\t    boxPlot: boxPlotSeries(),\n\t    bubble: bubbleSeries(),\n\t    bullet: bulletSeries(),\n\t    candlestick: candlestickSeries(),\n\t    column: columnSeries(),\n\t    pie: pieSeries(),\n\t    donut: donutSeries(),\n\t    funnel: funnelSeries(),\n\t    horizontalWaterfall: waterfallSeries(),\n\t    line: lineSeries(),\n\t    notes: notes(),\n\t    ohlc: ohlcSeries(),\n\t    radarArea: radarAreaSeries(),\n\t    radarLine: radarLineSeries(),\n\t    polarArea: radarAreaSeries(),\n\t    polarLine: radarLineSeries(),\n\t    rangeBar: rangeBarSeries(),\n\t    rangeColumn: rangeColumnSeries(),\n\t    scatterLine: scatterLineSeries(),\n\t    verticalArea: areaSeries(),\n\t    verticalBoxPlot: boxPlotSeries(),\n\t    verticalBullet: bulletSeries(),\n\t    verticalLine: lineSeries(),\n\t    waterfall: waterfallSeries()\n\t}); };\n\n\tvar title = function () { return ({\n\t    font: SANS16\n\t}); };\n\n\tvar legend = function () { return ({\n\t    labels: {\n\t        font: SANS12\n\t    }\n\t}); };\n\n\tvar baseTheme = function (options) {\n\t    if (options === void 0) { options = {}; }\n\n\t    return ({\n\t    axisDefaults: axisDefaults(),\n\t    categoryAxis: {\n\t        majorGridLines: {\n\t            visible: true\n\t        }\n\t    },\n\t    navigator: {\n\t        pane: {\n\t            height: 90,\n\t            margin: {\n\t                top: 10\n\t            }\n\t        }\n\t    },\n\t    seriesDefaults: seriesDefaults(options),\n\t    title: title(),\n\t    legend: legend()\n\t});\n\t};\n\n\tkendo.deepExtend(kendo.dataviz, {\n\t    chartBaseTheme: baseTheme\n\t});\n\n\t})();\n\n\t}, __webpack_require__(3));\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/dataviz/themes/chart-base-theme.js?")}}]);