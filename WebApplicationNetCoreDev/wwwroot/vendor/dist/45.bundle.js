(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{"./node_modules/@progress/kendo-ui/js/kendo.draganddrop.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.draganddrop.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1143);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.userevents */ "./node_modules/@progress/kendo-ui/js/kendo.userevents.js");\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018), __webpack_require__(1056) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "draganddrop",\n\t    name: "Drag & drop",\n\t    category: "framework",\n\t    description: "Drag & drop functionality for any DOM element.",\n\t    depends: [ "core", "userevents" ]\n\t};\n\n\t(function ($, undefined) {\n\t    var kendo = window.kendo,\n\t        support = kendo.support,\n\t        document = window.document,\n\t        $window = $(window),\n\t        Class = kendo.Class,\n\t        Widget = kendo.ui.Widget,\n\t        Observable = kendo.Observable,\n\t        UserEvents = kendo.UserEvents,\n\t        proxy = $.proxy,\n\t        extend = $.extend,\n\t        getOffset = kendo.getOffset,\n\t        draggables = {},\n\t        dropTargets = {},\n\t        dropAreas = {},\n\t        lastDropTarget,\n\t        elementUnderCursor = kendo.elementUnderCursor,\n\t        KEYUP = "keyup",\n\t        CHANGE = "change",\n\n\t        // Draggable events\n\t        DRAGSTART = "dragstart",\n\t        HOLD = "hold",\n\t        DRAG = "drag",\n\t        DRAGEND = "dragend",\n\t        DRAGCANCEL = "dragcancel",\n\t        HINTDESTROYED = "hintDestroyed",\n\n\t        // DropTarget events\n\t        DRAGENTER = "dragenter",\n\t        DRAGLEAVE = "dragleave",\n\t        DROP = "drop";\n\n\t    function contains(parent, child) {\n\t        try {\n\t            return $.contains(parent, child) || parent == child;\n\t        } catch (e) {\n\t            return false;\n\t        }\n\t    }\n\n\t    function numericCssPropery(element, property) {\n\t        return parseInt(element.css(property), 10) || 0;\n\t    }\n\n\t    function within(value, range) {\n\t        return Math.min(Math.max(value, range.min), range.max);\n\t    }\n\n\t    function containerBoundaries(container, element) {\n\t        var offset = getOffset(container),\n\t            outerWidth = kendo._outerWidth,\n\t            outerHeight = kendo._outerHeight,\n\t            minX = offset.left + numericCssPropery(container, "borderLeftWidth") + numericCssPropery(container, "paddingLeft"),\n\t            minY = offset.top + numericCssPropery(container, "borderTopWidth") + numericCssPropery(container, "paddingTop"),\n\t            maxX = minX + container.width() - outerWidth(element, true),\n\t            maxY = minY + container.height() - outerHeight(element, true);\n\n\t        return {\n\t            x: { min: minX, max: maxX },\n\t            y: { min: minY, max: maxY }\n\t        };\n\t    }\n\n\t    function checkTarget(target, targets, areas) {\n\t        var theTarget, theFilter, i = 0,\n\t            targetLen = targets && targets.length,\n\t            areaLen = areas && areas.length;\n\n\t        while (target && target.parentNode) {\n\t            for (i = 0; i < targetLen; i ++) {\n\t                theTarget = targets[i];\n\t                if (theTarget.element[0] === target) {\n\t                    return { target: theTarget, targetElement: target };\n\t                }\n\t            }\n\n\t            for (i = 0; i < areaLen; i ++) {\n\t                theFilter = areas[i];\n\t                if ($.contains(theFilter.element[0], target) && support.matchesSelector.call(target, theFilter.options.filter)) {\n\t                    return { target: theFilter, targetElement: target };\n\t                }\n\t            }\n\n\t            target = target.parentNode;\n\t        }\n\n\t        return undefined;\n\t    }\n\n\t    var TapCapture = Observable.extend({\n\t        init: function(element, options) {\n\t            var that = this,\n\t                domElement = element[0];\n\n\t            that.capture = false;\n\n\t            if (domElement.addEventListener) {\n\t                $.each(kendo.eventMap.down.split(" "), function() {\n\t                    domElement.addEventListener(this, proxy(that._press, that), true);\n\t                });\n\t                $.each(kendo.eventMap.up.split(" "), function() {\n\t                    domElement.addEventListener(this, proxy(that._release, that), true);\n\t                });\n\t            } else {\n\t                $.each(kendo.eventMap.down.split(" "), function() {\n\t                    domElement.attachEvent(this, proxy(that._press, that));\n\t                });\n\t                $.each(kendo.eventMap.up.split(" "), function() {\n\t                    domElement.attachEvent(this, proxy(that._release, that));\n\t                });\n\t            }\n\n\t            Observable.fn.init.call(that);\n\n\t            that.bind(["press", "release"], options || {});\n\t        },\n\n\t        captureNext: function() {\n\t            this.capture = true;\n\t        },\n\n\t        cancelCapture: function() {\n\t            this.capture = false;\n\t        },\n\n\t        _press: function(e) {\n\t            var that = this;\n\t            that.trigger("press");\n\t            if (that.capture) {\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _release: function(e) {\n\t            var that = this;\n\t            that.trigger("release");\n\n\t            if (that.capture) {\n\t                e.preventDefault();\n\t                that.cancelCapture();\n\t            }\n\t        }\n\t    });\n\n\t    var PaneDimension = Observable.extend({\n\t        init: function(options) {\n\t            var that = this;\n\t            Observable.fn.init.call(that);\n\n\t            that.forcedEnabled = false;\n\n\t            $.extend(that, options);\n\n\t            that.scale = 1;\n\n\t            if (that.horizontal) {\n\t                that.measure = "offsetWidth";\n\t                that.scrollSize = "scrollWidth";\n\t                that.axis = "x";\n\t            } else {\n\t                that.measure = "offsetHeight";\n\t                that.scrollSize = "scrollHeight";\n\t                that.axis = "y";\n\t            }\n\t        },\n\n\t        makeVirtual: function() {\n\t            $.extend(this, {\n\t                virtual: true,\n\t                forcedEnabled: true,\n\t                _virtualMin: 0,\n\t                _virtualMax: 0\n\t            });\n\t        },\n\n\t        virtualSize: function(min, max) {\n\t            if (this._virtualMin !== min || this._virtualMax !== max) {\n\t                this._virtualMin = min;\n\t                this._virtualMax = max;\n\t                this.update();\n\t            }\n\t        },\n\n\t        outOfBounds: function(offset) {\n\t            return offset > this.max || offset < this.min;\n\t        },\n\n\t        forceEnabled: function() {\n\t            this.forcedEnabled = true;\n\t        },\n\n\t        getSize: function() {\n\t            return this.container[0][this.measure];\n\t        },\n\n\t        getTotal: function() {\n\t            return this.element[0][this.scrollSize];\n\t        },\n\n\t        rescale: function(scale) {\n\t            this.scale = scale;\n\t        },\n\n\t        update: function(silent) {\n\t            var that = this,\n\t                total = that.virtual ? that._virtualMax : that.getTotal(),\n\t                scaledTotal = total * that.scale,\n\t                size = that.getSize();\n\n\t            if (total === 0 && !that.forcedEnabled) {\n\t                return; // we are not visible.\n\t            }\n\n\t            that.max = that.virtual ? -that._virtualMin : 0;\n\t            that.size = size;\n\t            that.total = scaledTotal;\n\t            that.min = Math.min(that.max, size - scaledTotal);\n\t            that.minScale = size / total;\n\t            that.centerOffset = (scaledTotal - size) / 2;\n\n\t            that.enabled = that.forcedEnabled || (scaledTotal > size);\n\n\t            if (!silent) {\n\t                that.trigger(CHANGE, that);\n\t            }\n\t        }\n\t    });\n\n\t    var PaneDimensions = Observable.extend({\n\t        init: function(options) {\n\t            var that = this;\n\n\t            Observable.fn.init.call(that);\n\n\t            that.x = new PaneDimension(extend({horizontal: true}, options));\n\t            that.y = new PaneDimension(extend({horizontal: false}, options));\n\t            that.container = options.container;\n\t            that.forcedMinScale = options.minScale;\n\t            that.maxScale = options.maxScale || 100;\n\n\t            that.bind(CHANGE, options);\n\t        },\n\n\t        rescale: function(newScale) {\n\t            this.x.rescale(newScale);\n\t            this.y.rescale(newScale);\n\t            this.refresh();\n\t        },\n\n\t        centerCoordinates: function() {\n\t            return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };\n\t        },\n\n\t        refresh: function() {\n\t            var that = this;\n\t            that.x.update();\n\t            that.y.update();\n\t            that.enabled = that.x.enabled || that.y.enabled;\n\t            that.minScale = that.forcedMinScale || Math.min(that.x.minScale, that.y.minScale);\n\t            that.fitScale = Math.max(that.x.minScale, that.y.minScale);\n\t            that.trigger(CHANGE);\n\t        }\n\t    });\n\n\t    var PaneAxis = Observable.extend({\n\t        init: function(options) {\n\t            var that = this;\n\t            extend(that, options);\n\t            Observable.fn.init.call(that);\n\t        },\n\n\t        outOfBounds: function() {\n\t            return this.dimension.outOfBounds(this.movable[this.axis]);\n\t        },\n\n\t        dragMove: function(delta) {\n\t            var that = this,\n\t                dimension = that.dimension,\n\t                axis = that.axis,\n\t                movable = that.movable,\n\t                position = movable[axis] + delta;\n\n\t            if (!dimension.enabled) {\n\t                return;\n\t            }\n\n\t            if ((position < dimension.min && delta < 0) || (position > dimension.max && delta > 0)) {\n\t                delta *= that.resistance;\n\t            }\n\n\t            movable.translateAxis(axis, delta);\n\t            that.trigger(CHANGE, that);\n\t        }\n\t    });\n\n\t    var Pane = Class.extend({\n\n\t        init: function(options) {\n\t            var that = this,\n\t                x,\n\t                y,\n\t                resistance,\n\t                movable;\n\n\t            extend(that, {elastic: true}, options);\n\n\t            resistance = that.elastic ? 0.5 : 0;\n\t            movable = that.movable;\n\n\t            that.x = x = new PaneAxis({\n\t                axis: "x",\n\t                dimension: that.dimensions.x,\n\t                resistance: resistance,\n\t                movable: movable\n\t            });\n\n\t            that.y = y = new PaneAxis({\n\t                axis: "y",\n\t                dimension: that.dimensions.y,\n\t                resistance: resistance,\n\t                movable: movable\n\t            });\n\n\t            that.userEvents.bind(["press", "move", "end", "gesturestart", "gesturechange"], {\n\t                gesturestart: function(e) {\n\t                    that.gesture = e;\n\t                    that.offset = that.dimensions.container.offset();\n\t                },\n\n\t                press: function(e) {\n\t                    if ($(e.event.target).closest("a").is("[data-navigate-on-press=true]")) {\n\t                        e.sender.cancel();\n\t                    }\n\t                },\n\n\t                gesturechange: function(e) {\n\t                    var previousGesture = that.gesture,\n\t                        previousCenter = previousGesture.center,\n\n\t                        center = e.center,\n\n\t                        scaleDelta = e.distance / previousGesture.distance,\n\n\t                        minScale = that.dimensions.minScale,\n\t                        maxScale = that.dimensions.maxScale,\n\t                        coordinates;\n\n\t                    if (movable.scale <= minScale && scaleDelta < 1) {\n\t                        // Resist shrinking. Instead of shrinking from 1 to 0.5, it will shrink to 0.5 + (1 /* minScale */ - 0.5) * 0.8 = 0.9;\n\t                        scaleDelta += (1 - scaleDelta) * 0.8;\n\t                    }\n\n\t                    if (movable.scale * scaleDelta >= maxScale) {\n\t                        scaleDelta = maxScale / movable.scale;\n\t                    }\n\n\t                    var offsetX = movable.x + that.offset.left,\n\t                        offsetY = movable.y + that.offset.top;\n\n\t                    coordinates = {\n\t                        x: (offsetX - previousCenter.x) * scaleDelta + center.x - offsetX,\n\t                        y: (offsetY - previousCenter.y) * scaleDelta + center.y - offsetY\n\t                    };\n\n\t                    movable.scaleWith(scaleDelta);\n\n\t                    x.dragMove(coordinates.x);\n\t                    y.dragMove(coordinates.y);\n\n\t                    that.dimensions.rescale(movable.scale);\n\t                    that.gesture = e;\n\t                    e.preventDefault();\n\t                },\n\n\t                move: function(e) {\n\t                    if (e.event.target.tagName.match(/textarea|input/i)) {\n\t                        return;\n\t                    }\n\n\t                    if (x.dimension.enabled || y.dimension.enabled) {\n\t                        x.dragMove(e.x.delta);\n\t                        y.dragMove(e.y.delta);\n\t                        e.preventDefault();\n\t                    } else {\n\t                        e.touch.skip();\n\t                    }\n\t                },\n\n\t                end: function(e) {\n\t                    e.preventDefault();\n\t                }\n\t            });\n\t        }\n\t    });\n\n\t    var TRANSFORM_STYLE = support.transitions.prefix + "Transform",\n\t        translate;\n\n\n\t    if (support.hasHW3D) {\n\t        translate = function(x, y, scale) {\n\t            return "translate3d(" + x + "px," + y +"px,0) scale(" + scale + ")";\n\t        };\n\t    } else {\n\t        translate = function(x, y, scale) {\n\t            return "translate(" + x + "px," + y +"px) scale(" + scale + ")";\n\t        };\n\t    }\n\n\t    var Movable = Observable.extend({\n\t        init: function(element) {\n\t            var that = this;\n\n\t            Observable.fn.init.call(that);\n\n\t            that.element = $(element);\n\t            that.element[0].style.webkitTransformOrigin = "left top";\n\t            that.x = 0;\n\t            that.y = 0;\n\t            that.scale = 1;\n\t            that._saveCoordinates(translate(that.x, that.y, that.scale));\n\t        },\n\n\t        translateAxis: function(axis, by) {\n\t            this[axis] += by;\n\t            this.refresh();\n\t        },\n\n\t        scaleTo: function(scale) {\n\t            this.scale = scale;\n\t            this.refresh();\n\t        },\n\n\t        scaleWith: function(scaleDelta) {\n\t            this.scale *= scaleDelta;\n\t            this.refresh();\n\t        },\n\n\t        translate: function(coordinates) {\n\t            this.x += coordinates.x;\n\t            this.y += coordinates.y;\n\t            this.refresh();\n\t        },\n\n\t        moveAxis: function(axis, value) {\n\t            this[axis] = value;\n\t            this.refresh();\n\t        },\n\n\t        moveTo: function(coordinates) {\n\t            extend(this, coordinates);\n\t            this.refresh();\n\t        },\n\n\t        refresh: function() {\n\t            var that = this,\n\t                x = that.x,\n\t                y = that.y,\n\t                newCoordinates;\n\n\t            if (that.round) {\n\t                x = Math.round(x);\n\t                y = Math.round(y);\n\t            }\n\n\t            newCoordinates = translate(x, y, that.scale);\n\n\t            if (newCoordinates != that.coordinates) {\n\t                if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n\t                    that.element[0].style.position = "absolute";\n\t                    that.element[0].style.left = that.x + "px";\n\t                    that.element[0].style.top = that.y + "px";\n\n\t                } else {\n\t                    that.element[0].style[TRANSFORM_STYLE] = newCoordinates;\n\t                }\n\t                that._saveCoordinates(newCoordinates);\n\t                that.trigger(CHANGE);\n\t            }\n\t        },\n\n\t        _saveCoordinates: function(coordinates) {\n\t            this.coordinates = coordinates;\n\t        }\n\t    });\n\n\t    function destroyDroppable(collection, widget) {\n\t        var groupName = widget.options.group,\n\t        droppables = collection[groupName],\n\t        i;\n\n\t        Widget.fn.destroy.call(widget);\n\n\t        if (droppables.length > 1) {\n\t            for (i = 0; i < droppables.length; i++) {\n\t                if (droppables[i] == widget) {\n\t                    droppables.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t        } else {\n\t            droppables.length = 0; // WTF, porting this from the previous destroyGroup\n\t            delete collection[groupName];\n\t        }\n\t    }\n\n\t    var DropTarget = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            var group = that.options.group;\n\n\t            if (!(group in dropTargets)) {\n\t                dropTargets[group] = [ that ];\n\t            } else {\n\t                dropTargets[group].push( that );\n\t            }\n\t        },\n\n\t        events: [\n\t            DRAGENTER,\n\t            DRAGLEAVE,\n\t            DROP\n\t        ],\n\n\t        options: {\n\t            name: "DropTarget",\n\t            group: "default"\n\t        },\n\n\t        destroy: function() {\n\t            destroyDroppable(dropTargets, this);\n\t        },\n\n\t        _trigger: function(eventName, e) {\n\t            var that = this,\n\t                draggable = draggables[that.options.group];\n\n\t            if (draggable) {\n\t                return that.trigger(eventName, extend({}, e.event, {\n\t                           draggable: draggable,\n\t                           dropTarget: e.dropTarget\n\t                       }));\n\t            }\n\t        },\n\n\t        _over: function(e) {\n\t            this._trigger(DRAGENTER, e);\n\t        },\n\n\t        _out: function(e) {\n\t            this._trigger(DRAGLEAVE, e);\n\t        },\n\n\t        _drop: function(e) {\n\t            var that = this,\n\t                draggable = draggables[that.options.group];\n\n\t            if (draggable) {\n\t                draggable.dropped = !that._trigger(DROP, e);\n\t            }\n\t        }\n\t    });\n\n\t    DropTarget.destroyGroup = function(groupName) {\n\t        var group = dropTargets[groupName] || dropAreas[groupName],\n\t            i;\n\n\t        if (group) {\n\t            for (i = 0; i < group.length; i++) {\n\t                Widget.fn.destroy.call(group[i]);\n\t            }\n\n\t            group.length = 0;\n\t            delete dropTargets[groupName];\n\t            delete dropAreas[groupName];\n\t        }\n\t    };\n\n\t    DropTarget._cache = dropTargets;\n\n\t    var DropTargetArea = DropTarget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            var group = that.options.group;\n\n\t            if (!(group in dropAreas)) {\n\t                dropAreas[group] = [ that ];\n\t            } else {\n\t                dropAreas[group].push( that );\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            destroyDroppable(dropAreas, this);\n\t        },\n\n\t        options: {\n\t            name: "DropTargetArea",\n\t            group: "default",\n\t            filter: null\n\t        }\n\t    });\n\n\t    var Draggable = Widget.extend({\n\t        init: function (element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that._activated = false;\n\n\t            that.userEvents = new UserEvents(that.element, {\n\t                global: true,\n\t                allowSelection: true,\n\t                filter: that.options.filter,\n\t                threshold: that.options.distance,\n\t                start: proxy(that._start, that),\n\t                hold: proxy(that._hold, that),\n\t                move: proxy(that._drag, that),\n\t                end: proxy(that._end, that),\n\t                cancel: proxy(that._cancel, that),\n\t                select: proxy(that._select, that)\n\t            });\n\n\t            if (kendo.support.touch) {\n\t                that.element.find(that.options.filter).css(\'touch-action\', \'none\');\n\t            }\n\n\t            that._afterEndHandler = proxy(that._afterEnd, that);\n\t            that._captureEscape = proxy(that._captureEscape, that);\n\t        },\n\n\t        events: [\n\t            HOLD,\n\t            DRAGSTART,\n\t            DRAG,\n\t            DRAGEND,\n\t            DRAGCANCEL,\n\t            HINTDESTROYED\n\t        ],\n\n\t        options: {\n\t            name: "Draggable",\n\t            distance: ( kendo.support.touch ? 0 : 5),\n\t            group: "default",\n\t            cursorOffset: null,\n\t            axis: null,\n\t            container: null,\n\t            filter: null,\n\t            ignore: null,\n\t            holdToDrag: false,\n\t            autoScroll: false,\n\t            dropped: false\n\t        },\n\n\t        cancelHold: function() {\n\t            this._activated = false;\n\t        },\n\n\t        _captureEscape: function(e) {\n\t            var that = this;\n\n\t            if (e.keyCode === kendo.keys.ESC) {\n\t                that._trigger(DRAGCANCEL, { event: e });\n\t                that.userEvents.cancel();\n\t            }\n\t        },\n\n\t        _updateHint: function(e) {\n\t            var that = this,\n\t                coordinates,\n\t                options = that.options,\n\t                boundaries = that.boundaries,\n\t                axis = options.axis,\n\t                cursorOffset = that.options.cursorOffset;\n\n\t            if (cursorOffset) {\n\t               coordinates = { left: e.x.location + cursorOffset.left, top: e.y.location + cursorOffset.top };\n\t            } else {\n\t                that.hintOffset.left += e.x.delta;\n\t                that.hintOffset.top += e.y.delta;\n\t                coordinates = $.extend({}, that.hintOffset);\n\t            }\n\n\t            if (boundaries) {\n\t                coordinates.top = within(coordinates.top, boundaries.y);\n\t                coordinates.left = within(coordinates.left, boundaries.x);\n\t            }\n\n\t            if (axis === "x") {\n\t                delete coordinates.top;\n\t            } else if (axis === "y") {\n\t                delete coordinates.left;\n\t            }\n\n\t            that.hint.css(coordinates);\n\t        },\n\n\t        _shouldIgnoreTarget: function(target) {\n\t            var ignoreSelector = this.options.ignore;\n\t            return ignoreSelector && $(target).is(ignoreSelector);\n\t        },\n\n\t        _select: function(e) {\n\t            if (!this._shouldIgnoreTarget(e.event.target)) {\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _start: function(e) {\n\t            var that = this,\n\t                options = that.options,\n\t                container = options.container ? $(options.container): null,\n\t                hint = options.hint;\n\n\t            if (this._shouldIgnoreTarget(e.touch.initialTouch) || (options.holdToDrag && !that._activated)) {\n\t                that.userEvents.cancel();\n\t                return;\n\t            }\n\n\t            that.currentTarget = e.target;\n\t            that.currentTargetOffset = getOffset(that.currentTarget);\n\n\t            if (hint) {\n\t                if (that.hint) {\n\t                    that.hint.stop(true, true).remove();\n\t                }\n\n\t                that.hint = kendo.isFunction(hint) ? $(hint.call(that, that.currentTarget)) : hint;\n\n\t                var offset = getOffset(that.currentTarget);\n\t                that.hintOffset = offset;\n\n\t                that.hint.css( {\n\t                    position: "absolute",\n\t                    zIndex: 20000, // the Window\'s z-index is 10000 and can be raised because of z-stacking\n\t                    left: offset.left,\n\t                    top: offset.top\n\t                })\n\t                .appendTo(document.body);\n\n\t                that.angular("compile", function(){\n\t                    that.hint.removeAttr("ng-repeat");\n\t                    var scopeTarget = $(e.target);\n\n\t                    while (!scopeTarget.data("$$kendoScope") && scopeTarget.length) {\n\t                        scopeTarget = scopeTarget.parent();\n\t                    }\n\n\t                    return {\n\t                        elements: that.hint.get(),\n\t                        scopeFrom: scopeTarget.data("$$kendoScope")\n\t                    };\n\t                });\n\t            }\n\n\t            draggables[options.group] = that;\n\n\t            that.dropped = false;\n\n\t            if (container) {\n\t                that.boundaries = containerBoundaries(container, that.hint);\n\t            }\n\n\t            $(document).on(KEYUP, that._captureEscape);\n\n\t            if (that._trigger(DRAGSTART, e)) {\n\t                that.userEvents.cancel();\n\t                that._afterEnd();\n\t            }\n\n\t            that.userEvents.capture();\n\t        },\n\n\t        _hold: function(e) {\n\t            this.currentTarget = e.target;\n\n\t            if (this._trigger(HOLD, e)) {\n\t                this.userEvents.cancel();\n\t            } else {\n\t                this._activated = true;\n\t            }\n\t        },\n\n\t        _drag: function(e) {\n\t            e.preventDefault();\n\n\t            var cursorElement = this._elementUnderCursor(e);\n\n\t            if (this.options.autoScroll && this._cursorElement !== cursorElement) {\n\t                this._scrollableParent = findScrollableParent(cursorElement);\n\t                this._cursorElement = cursorElement;\n\t            }\n\n\t            this._lastEvent = e;\n\t            this._processMovement(e, cursorElement);\n\n\t            if (this.options.autoScroll) {\n\t                // chrome seems to trigger mousemove when mouse is moved outside of the window (over the Chrome), too.\n\t                if (this._scrollableParent[0]) {\n\t                    var velocity = autoScrollVelocity(e.x.location, e.y.location, scrollableViewPort(this._scrollableParent));\n\n\n\t                    this._scrollCompenstation = $.extend({}, this.hintOffset);\n\t                    this._scrollVelocity = velocity;\n\n\t                    if (velocity.y === 0 && velocity.x === 0) {\n\t                        clearInterval(this._scrollInterval);\n\t                        this._scrollInterval = null;\n\t                    } else if(!this._scrollInterval) {\n\t                        this._scrollInterval = setInterval($.proxy(this, "_autoScroll"), 50);\n\t                    }\n\t                }\n\t            }\n\n\t            if (this.hint) {\n\t                this._updateHint(e);\n\t            }\n\t        },\n\n\t        _processMovement: function(e, cursorElement) {\n\t            this._withDropTarget(cursorElement, function(target, targetElement) {\n\t                if (!target) {\n\t                    if (lastDropTarget) {\n\t                        lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n\t                        lastDropTarget = null;\n\t                    }\n\t                    return;\n\t                }\n\n\t                if (lastDropTarget) {\n\t                    if (targetElement === lastDropTarget.targetElement) {\n\t                        return;\n\t                    }\n\n\t                    lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n\t                }\n\n\t                target._trigger(DRAGENTER, extend(e, { dropTarget: $(targetElement) }));\n\t                lastDropTarget = extend(target, { targetElement: targetElement });\n\t            });\n\n\t            this._trigger(DRAG, extend(e, { dropTarget: lastDropTarget, elementUnderCursor: cursorElement }));\n\t        },\n\n\t        _autoScroll: function() {\n\t            var parent = this._scrollableParent[0],\n\t                velocity = this._scrollVelocity,\n\t                compensation = this._scrollCompenstation;\n\n\t            if (!parent) {\n\t                return;\n\t            }\n\n\t            var cursorElement = this._elementUnderCursor(this._lastEvent);\n\t            this._processMovement(this._lastEvent, cursorElement);\n\n\t            var yIsScrollable, xIsScrollable;\n\n\t            var isRootNode = parent === scrollableRoot()[0];\n\n\t            if (isRootNode) {\n\t                yIsScrollable = document.body.scrollHeight > $window.height();\n\t                xIsScrollable = document.body.scrollWidth > $window.width();\n\t            } else {\n\t                yIsScrollable = parent.offsetHeight <= parent.scrollHeight;\n\t                xIsScrollable = parent.offsetWidth <= parent.scrollWidth;\n\t            }\n\n\t            var yDelta = parent.scrollTop + velocity.y;\n\t            var yInBounds = yIsScrollable && yDelta > 0 && yDelta < parent.scrollHeight;\n\n\t            var xDelta = parent.scrollLeft + velocity.x;\n\t            var xInBounds = xIsScrollable && xDelta > 0 && xDelta < parent.scrollWidth;\n\n\t            if (yInBounds) {\n\t                parent.scrollTop += velocity.y;\n\t            }\n\n\t            if (xInBounds) {\n\t                parent.scrollLeft += velocity.x;\n\t            }\n\n\t            if (this.hint && isRootNode && (xInBounds || yInBounds)) {\n\t                if (yInBounds) {\n\t                    compensation.top += velocity.y;\n\t                }\n\n\t                if (xInBounds) {\n\t                    compensation.left += velocity.x;\n\t                }\n\n\t                this.hint.css(compensation);\n\t            }\n\t        },\n\n\t        _end: function(e) {\n\t            this._withDropTarget(this._elementUnderCursor(e), function(target, targetElement) {\n\t                if (target) {\n\t                    target._drop(extend({}, e, { dropTarget: $(targetElement) }));\n\t                    lastDropTarget = null;\n\t                }\n\t            });\n\n\t            this._cancel(this._trigger(DRAGEND, e));\n\t        },\n\n\t        _cancel: function(isDefaultPrevented) {\n\t            var that = this;\n\n\t            that._scrollableParent = null;\n\t            this._cursorElement = null;\n\t            clearInterval(this._scrollInterval);\n\t            that._activated = false;\n\n\t            if (that.hint && !that.dropped) {\n\t                setTimeout(function() {\n\t                    that.hint.stop(true, true);\n\n\t                    if (isDefaultPrevented) {\n\t                        that._afterEndHandler();\n\t                    } else {\n\t                        that.hint.animate(that.currentTargetOffset, "fast", that._afterEndHandler);\n\t                    }\n\t                }, 0);\n\n\t            } else {\n\t                that._afterEnd();\n\t            }\n\t        },\n\n\t        _trigger: function(eventName, e) {\n\t            var that = this;\n\n\t            return that.trigger(\n\t                eventName, extend(\n\t                {},\n\t                e.event,\n\t                {\n\t                    x: e.x,\n\t                    y: e.y,\n\t                    currentTarget: that.currentTarget,\n\t                    initialTarget: e.touch ? e.touch.initialTouch : null,\n\t                    dropTarget: e.dropTarget,\n\t                    elementUnderCursor: e.elementUnderCursor\n\t                }\n\t            ));\n\t        },\n\n\t        _elementUnderCursor: function(e) {\n\t            var target = elementUnderCursor(e),\n\t                hint = this.hint;\n\n\t            if (hint && contains(hint[0], target)) {\n\t                hint.hide();\n\t                target = elementUnderCursor(e);\n\t                // IE8 does not return the element in iframe from first attempt\n\t                if (!target) {\n\t                    target = elementUnderCursor(e);\n\t                }\n\t                hint.show();\n\t            }\n\n\t            return target;\n\t        },\n\n\t        _withDropTarget: function(element, callback) {\n\t            var result,\n\t                group = this.options.group,\n\t                targets = dropTargets[group],\n\t                areas = dropAreas[group];\n\n\t            if (targets && targets.length || areas && areas.length) {\n\t                result = checkTarget(element, targets, areas);\n\n\t                if (result) {\n\t                    callback(result.target, result.targetElement);\n\t                } else {\n\t                    callback();\n\t                }\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            Widget.fn.destroy.call(that);\n\n\t            that._afterEnd();\n\n\t            that.userEvents.destroy();\n\n\t            this._scrollableParent = null;\n\t            this._cursorElement = null;\n\t            clearInterval(this._scrollInterval);\n\n\t            that.currentTarget = null;\n\t        },\n\n\t        _afterEnd: function() {\n\t            var that = this;\n\n\t            if (that.hint) {\n\t                that.hint.remove();\n\t            }\n\n\t            delete draggables[that.options.group];\n\n\t            that.trigger("destroy");\n\t            that.trigger(HINTDESTROYED);\n\t            $(document).off(KEYUP, that._captureEscape);\n\t        }\n\t    });\n\n\t    kendo.ui.plugin(DropTarget);\n\t    kendo.ui.plugin(DropTargetArea);\n\t    kendo.ui.plugin(Draggable);\n\t    kendo.TapCapture = TapCapture;\n\t    kendo.containerBoundaries = containerBoundaries;\n\n\t    extend(kendo.ui, {\n\t        Pane: Pane,\n\t        PaneDimensions: PaneDimensions,\n\t        Movable: Movable\n\t    });\n\n\t    function scrollableViewPort(element) {\n\t        var root = scrollableRoot()[0],\n\t            offset,\n\t            top,\n\t            left;\n\n\t        if (element[0] === root) {\n\t            top = root.scrollTop;\n\t            left = root.scrollLeft;\n\n\t            return {\n\t                top: top,\n\t                left: left,\n\t                bottom: top + $window.height(),\n\t                right: left + $window.width()\n\t            };\n\t        } else {\n\t            offset = element.offset();\n\t            offset.bottom = offset.top + element.height();\n\t            offset.right =  offset.left + element.width();\n\t            return offset;\n\t        }\n\t    }\n\n\t    function scrollableRoot() {\n\t        return $(kendo.support.browser.edge || kendo.support.browser.safari ? document.body : document.documentElement);\n\t    }\n\n\t    function findScrollableParent(element) {\n\t        var root = scrollableRoot();\n\n\t        if (!element || element === document.body || element === document.documentElement) {\n\t            return root;\n\t        }\n\n\t        var parent = $(element)[0];\n\n\t        while (parent && !kendo.isScrollable(parent) && parent !== document.body) {\n\t            parent = parent.parentNode;\n\t        }\n\n\t        if (parent === document.body) {\n\t            return root;\n\t        }\n\n\t        return $(parent);\n\t    }\n\n\t    function autoScrollVelocity(mouseX, mouseY, rect) {\n\t        var velocity = { x: 0, y: 0 };\n\n\t        var AUTO_SCROLL_AREA = 50;\n\n\t        if (mouseX - rect.left < AUTO_SCROLL_AREA) {\n\t            velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));\n\t        } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {\n\t            velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);\n\t        }\n\n\t        if (mouseY - rect.top < AUTO_SCROLL_AREA) {\n\t            velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));\n\t        } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {\n\t            velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);\n\t        }\n\n\t        return velocity;\n\t    }\n\n\t    // export for testing\n\t    kendo.ui.Draggable.utils = {\n\t        autoScrollVelocity: autoScrollVelocity,\n\t        scrollableViewPort: scrollableViewPort,\n\t        findScrollableParent: findScrollableParent\n\t    };\n\n\t })(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.draganddrop.js?')},"./node_modules/@progress/kendo-ui/js/kendo.drawer.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.drawer.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1144);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.userevents */ "./node_modules/@progress/kendo-ui/js/kendo.userevents.js");\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1056) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "drawer",\n\t    name: "Drawer",\n\t    category: "web",\n\t    description: "The Kendo Drawer widget provides slide to reveal sidebar",\n\t    depends: [ "userevents" ]\n\t};\n\n\t(function ($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        SHOW = "show",\n\t        HIDE = "hide",\n\t        ITEMCLICK = "itemClick",\n\t        PUSH = "push",\n\t        OVERLAY = "overlay",\n\t        LEFT = "left",\n\t        RIGHT ="right";\n\n\t    var Drawer = kendo.ui.Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\t            var userEvents;\n\n\t            Widget.fn.init.call(this, element, options);\n\n\t            options = that.options;\n\n\t            that._element(element);\n\n\t            that._wrapper(element);\n\n\t            that.position();\n\n\t            that._mode();\n\n\t            if (options.mini) {\n\t                that._miniMode();\n\t            }\n\n\t            that._initDrawerItems();\n\n\t            if (options.mini && options.mode != PUSH) {\n\t                that._setBodyOffset();\n\t            }\n\n\t            userEvents = this.userEvents = new kendo.UserEvents(options.mode != PUSH ? $(document.body) : this.drawerContainer, { fastTap: true, allowSelection: true });\n\n\t            var tap = function(e) {\n\t                if ($.contains(that.drawerItemsWrapper[0], e.event.target)) {\n\t                    that._itemClick(e);\n\t                }\n\t                if (that.visible && !that.trigger("hide", { sender: this})) {\n\t                    that.hide();\n\t                    e.preventDefault();\n\t                }\n\t            };\n\n\t            if (this.options.swipeToOpen) {\n\t                userEvents.bind("start", function(e) { that._start(e); });\n\t                userEvents.bind("move", function(e) { that._update(e); });\n\t                userEvents.bind("end", function(e) {  that._end(e); });\n\t                userEvents.bind("tap", tap);\n\t            } else {\n\t                userEvents.bind("press", tap);\n\t            }\n\n\t            if (options.minHeight && options.mode == PUSH) {\n\t                that.drawerContainer.css("min-height", options.minHeight);\n\t            }\n\t        },\n\n\t        _element: function() {\n\t            var that = this;\n\n\t            var element = that.element;\n\t            var options = that.options;\n\t            var contentElement = that.contentElement = element.children().first();\n\t            that.drawerElement = $(options.template);\n\n\t            contentElement.addClass("k-drawer-content");\n\t            element.addClass("k-widget k-drawer");\n\t        },\n\n\t        _wrapper: function() {\n\t            var options = this.options;\n\t            var drawerElement = this.drawerElement;\n\t            var element = this.element;\n\t            var contentElement = this.contentElement;\n\t            var drawerItemsWrapper = this.drawerItemsWrapper =  drawerElement.wrap("<div class=\'k-drawer-items\'></div>").parent();\n\t            var drawerWrapper = this.drawerWrapper = drawerItemsWrapper.wrap("<div class=\'k-drawer-wrapper\'></div>").parent();\n\t            var drawerContainer = this.drawerContainer = element.wrap("<div class=\'k-drawer-container\'></div>").parent();\n\n\t            if (options.mini) {\n\t                if (options.mini.width) {\n\t                    drawerWrapper.width(options.mini.width);\n\t                }\n\t            } else {\n\t                drawerWrapper.width(0);\n\t            }\n\n\n\t            if (options.mode === PUSH) {\n\t                drawerContainer.append(contentElement);\n\t            }\n\t            else if (options.mode === OVERLAY) {\n\t                drawerContainer.after(contentElement);\n\t                $(document.body).prepend(drawerContainer);\n\t            }\n\n\t            element.append( drawerWrapper );\n\t        },\n\n\t        _setBodyOffset: function() {\n\t            var overlayMiniOffset = this.element.outerWidth();\n\n\t            if (this.leftPositioned) {\n\t                $(document.body).css("padding-left", overlayMiniOffset);\n\t            }\n\t            else {\n\t                $(document.body).css("padding-right", overlayMiniOffset);\n\t            }\n\t        },\n\n\t        _initDrawerItems: function() {\n\t            var drawerItemsWrapper = this.drawerItemsWrapper;\n\t            var drawerItems = drawerItemsWrapper.find("[data-role=\'drawer-item\']");\n\t            var separatorItems = drawerItemsWrapper.find("[data-role=\'drawer-separator\']");\n\n\t            drawerItems.addClass("k-drawer-item");\n\t            separatorItems.addClass("k-drawer-item k-drawer-separator");\n\n\t            if (this._selectedItemIndex >= 0) {\n\t                drawerItems.removeClass("k-state-selected");\n\t                drawerItems.eq(this._selectedItemIndex).addClass("k-state-selected");\n\t            }\n\n\t        },\n\n\t        _mode: function() {\n\t            var options = this.options;\n\t            var drawerContainer = this.drawerContainer;\n\t            var overlayContainer;\n\n\t            if (options.mode == PUSH) {\n\t                drawerContainer.addClass(\'k-drawer-\' + PUSH);\n\t            }\n\t            else {\n\t                drawerContainer.addClass(\'k-drawer-\' + OVERLAY);\n\t                overlayContainer = this.overlayContainer = $(\'<div class="k-overlay"></div>\');\n\t                overlayContainer.hide();\n\t                drawerContainer.prepend(overlayContainer);\n\t            }\n\t        },\n\n\t        _miniMode: function() {\n\t            var options = this.options;\n\t            var drawerContainer = this.drawerContainer;\n\t            var miniWidth = options.mini.width;\n\t            var miniTemplate = this._miniTemplate = options.mini.template && $(options.mini.template);\n\t            var drawerItemsWrapper = this.drawerItemsWrapper;\n\t            var drawerWrapper = this.drawerWrapper;\n\n\t            drawerContainer.addClass("k-drawer-mini");\n\n\t            if (miniTemplate) {\n\t                drawerItemsWrapper.html(miniTemplate);\n\t            }\n\n\t            if (miniWidth) {\n\t                drawerWrapper.width(miniWidth);\n\t            }\n\n\t            this.minWidth = options.mini.width || this.drawerWrapper.width();\n\t        },\n\n\t        show: function() {\n\t            var drawerWrapper = this.drawerWrapper;\n\t            var drawerContainer = this.drawerContainer;\n\t            var options = this.options;\n\t            var isExpanded = drawerContainer.hasClass("k-drawer-expanded");\n\t            var miniTemplate = this._miniTemplate;\n\t            var drawerElement = this.drawerElement;\n\t            var drawerItemsWrapper = this.drawerItemsWrapper;\n\n\t            if (!isExpanded) {\n\t                drawerContainer.addClass(\'k-drawer-expanded\');\n\t                this.visible = true;\n\t            }\n\n\t            if (miniTemplate) {\n\t                drawerItemsWrapper.html(drawerElement);\n\t                this._initDrawerItems();\n\t                this._selectItem();\n\t            }\n\n\t            drawerWrapper.width(options.width);\n\n\t            if (options.mode === OVERLAY) {\n\t                this.overlayContainer.show();\n\t                this.visible = true;\n\t            }\n\t        },\n\n\t        hide: function() {\n\t            var that = this;\n\t            var drawerWrapper = that.drawerWrapper;\n\t            var drawerContainer = that.drawerContainer;\n\t            var options = this.options;\n\t            var drawerItemsWrapper = this.drawerItemsWrapper;\n\t            var miniTemplate = this._miniTemplate;\n\t            var miniWidth = options.mini && options.mini.width;\n\n\t            if (this._miniTemplate) {\n\t                drawerItemsWrapper.html(miniTemplate);\n\t                that._initDrawerItems();\n\t                this._selectItem();\n\t            }\n\n\t            if(options.mini) {\n\t                if (miniWidth) {\n\t                    drawerWrapper.width(miniWidth);\n\t                } else {\n\t                    drawerWrapper.width("");\n\t                }\n\t            } else {\n\t                drawerWrapper.width(0);\n\t            }\n\n\t            if (this.visible) {\n\t                drawerContainer.removeClass(\'k-drawer-expanded\');\n\t                this.visible = false;\n\t            }\n\n\t            if (options.mode === OVERLAY) {\n\t                this.overlayContainer.hide();\n\t            }\n\t        },\n\n\t        position: function(value) {\n\t            var that = this;\n\t            var options = that.options;\n\t            var position = value || options.position;\n\t            var drawerContainer = that.drawerContainer;\n\n\t            if (position == RIGHT) {\n\t                drawerContainer.removeClass(\'k-drawer-\'+ LEFT);\n\t                drawerContainer.addClass(\'k-drawer-\'+ RIGHT);\n\t            }\n\t            else {\n\t                drawerContainer.removeClass(\'k-drawer-\'+ RIGHT);\n\t                drawerContainer.addClass(\'k-drawer-\'+ LEFT);\n\t            }\n\n\t            this.leftPositioned = position === LEFT;\n\t        },\n\n\t        _start: function(e) {\n\t            var that = this;\n\t            var options = this.options;\n\t            var drawerWrapper = this.drawerWrapper;\n\t            var drawerItemsWrapper = this.drawerItemsWrapper;\n\t            var userEvents = e.sender;\n\n\n\t            // ignore non-horizontal swipes\n\t            if (Math.abs(e.x.velocity) < Math.abs(e.y.velocity) || kendo.triggeredByInput(e.event)) {\n\t                userEvents.cancel();\n\t                return;\n\t            }\n\n\n\t            if (this.drawerMini) {\n\t                drawerItemsWrapper.html(that.drawerElement);\n\t            }\n\n\t            drawerWrapper.css("transition", "none");\n\n\t            if (options.mode != PUSH) {\n\t                this.overlayContainer.show();\n\t            }\n\t        },\n\n\t        _update: function(e) {\n\t            var options = this.options;\n\t            var mode = options.mode;\n\n\t                if (mode == PUSH) {\n\t                    this._push(e);\n\t                }\n\t                else {\n\t                    this._overlay(e);\n\t                }\n\t        },\n\n\t        _end: function(e) {\n\t            var velocity = e.x.velocity;\n\t            var options = this.options;\n\t            var drawerWrapper = this.drawerWrapper;\n\t            var elementWidth = drawerWrapper.width();\n\t            var pastHalf = elementWidth > options.width / 2;\n\t            var velocityThreshold = 0.8;\n\t            var shouldShow;\n\n\t            drawerWrapper.css("transition", "all .3s ease-out");\n\n\t            if (this.leftPositioned) {\n\t                shouldShow = velocity > -velocityThreshold && (velocity > velocityThreshold || pastHalf);\n\t            }\n\t             else {\n\t                shouldShow = velocity < velocityThreshold && (velocity < -velocityThreshold || pastHalf);\n\t            }\n\n\t            if(shouldShow) {\n\t                if (this.trigger("show", { sender: this})) {\n\t                    e.preventDefault();\n\t                    this.hide();\n\t                } else {\n\t                    this.show();\n\t                }\n\t            } else {\n\t                if (this.trigger("hide", { sender: this})) {\n\t                    e.preventDefault();\n\t                    this.show();\n\t                } else {\n\t                    this.hide();\n\t                }\n\t            }\n\t        },\n\n\t        _overlay: function(moveEventArgs) {\n\t            var options = this.options;\n\t            var minWidth = (options.mini && options.mini.width) || this.minWidth || 0;\n\t            var drawerWrapper = this.drawerWrapper;\n\t            var elementWidth = drawerWrapper.width();\n\t            var limitedPosition;\n\t            var updatedPosition;\n\n\t            updatedPosition = elementWidth + (this.leftPositioned ? moveEventArgs.x.delta : -moveEventArgs.x.delta);\n\n\t            limitedPosition = Math.min(Math.max(updatedPosition, minWidth), options.width);\n\n\t            moveEventArgs.event.preventDefault();\n\t            moveEventArgs.event.stopPropagation();\n\n\t            drawerWrapper.width(limitedPosition);\n\t        },\n\n\t        _push: function(moveEventArgs) {\n\t            var options = this.options;\n\t            var minWidth = (options.mini && options.mini.width) || this.minWidth || 0;\n\t            var drawerWrapper = this.drawerWrapper;\n\t            var elementWidth = drawerWrapper.width();\n\t            var limitedPosition;\n\t            var updatedPosition;\n\n\t            updatedPosition = elementWidth + (this.leftPositioned ? moveEventArgs.x.delta : -moveEventArgs.x.delta);\n\n\t            limitedPosition = Math.min(Math.max(updatedPosition, minWidth), options.width);\n\n\t            moveEventArgs.event.preventDefault();\n\t            moveEventArgs.event.stopPropagation();\n\n\t            drawerWrapper.width(limitedPosition);\n\t        },\n\n\t        _selectItem: function(item) {\n\t            var selectedItemIndex;\n\n\t            if (item) {\n\t                item.addClass("k-state-selected");\n\t                this.trigger("itemClick", {item: item, sender: this});\n\t                this._selectedItemIndex = item.index();\n\t                return;\n\t            }\n\n\t            selectedItemIndex = this._selectedItemIndex;\n\n\t            if (selectedItemIndex) {\n\t                this.drawerItemsWrapper.find("[data-role=\'drawer-item\']").eq(selectedItemIndex).addClass("k-state-selected");\n\t            }\n\t        },\n\n\t        _itemClick: function(e) {\n\t            var that = this;\n\t            var item;\n\t            if ($(e.event.target).find(".k-drawer-item").length > 0) {\n\t                item = $(e.event.target).find(".k-drawer-item");\n\t            }\n\t            else if ($(e.event.target).closest(".k-drawer-item").length > 0) {\n\t                item = $(e.event.target).closest(".k-drawer-item");\n\t            }\n\t            else if ($(e.event.target).hasClass(".k-drawer-item")) {\n\t                item = $(e.event.target);\n\t            }\n\t            that.drawerItemsWrapper.find(".k-drawer-item").removeClass("k-state-selected");\n\t            that._selectItem(item);\n\t        },\n\n\t        destroy: function() {\n\t            var options = this.options;\n\n\t            if (options.mode != PUSH) {\n\t                if (this.leftPositioned) {\n\t                    $(document.body).css("padding-left", 0);\n\t                }\n\t                else {\n\t                    $(document.body).css("padding-right", 0);\n\t                }\n\t            }\n\n\t            Widget.fn.destroy.call(this);\n\n\t            this.userEvents.destroy();\n\n\t            kendo.destroy(this.element);\n\t            this.element = this.drawerWrapper = this.drawerElement = this.drawerContainer = this.drawerItemsWrapper = this._miniTemplate = null;\n\t        },\n\n\t        options: {\n\t            name: "Drawer",\n\t            position: LEFT,\n\t            mode: "overlay",\n\t            swipeToOpen: true,\n\t            width: 280,\n\t            mini: false,\n\t            template: ""\n\t        },\n\n\t        events: [\n\t            HIDE,\n\t            SHOW,\n\t            ITEMCLICK\n\t        ]\n\n\t    });\n\t    kendo.ui.plugin(Drawer);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.drawer.js?')},"./node_modules/@progress/kendo-ui/js/kendo.drawing.js":
/*!*************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.drawing.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1145);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(1146),\n\t        __webpack_require__(1147),\n\t        __webpack_require__(1148),\n\t        __webpack_require__(1149),\n\t        __webpack_require__(1150)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t    var __meta__ = { // jshint ignore:line\n\t        id: "drawing",\n\t        name: "Drawing API",\n\t        category: "framework",\n\t        description: "The Kendo UI low-level drawing API",\n\t        depends: [ "core", "color", "popup" ]\n\t    };\n\n\t}, __webpack_require__(3));\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./drawing/util */ "./node_modules/@progress/kendo-ui/js/drawing/util.js");\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./drawing/kendo-drawing */ "./node_modules/@progress/kendo-ui/js/drawing/kendo-drawing.js");\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./drawing/surface-tooltip */ "./node_modules/@progress/kendo-ui/js/drawing/surface-tooltip.js");\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./drawing/surface */ "./node_modules/@progress/kendo-ui/js/drawing/surface.js");\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./drawing/html */ "./node_modules/@progress/kendo-ui/js/drawing/html.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.drawing.js?')}}]);