(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{"./node_modules/@progress/kendo-ui/js/kendo.pdf.js":
/*!*********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.pdf.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1299);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.drawing */ "./node_modules/@progress/kendo-ui/js/kendo.drawing.js");\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1299:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018), __webpack_require__(1014), __webpack_require__(1300), __webpack_require__(1301) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\t}) (function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "pdf",\n\t    name: "PDF export",\n\t    description: "PDF Generation framework",\n\t    mixin: true,\n\t    category: "framework",\n\t    depends: [ "core", "drawing" ]\n\t};\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1300:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdf/core */ "./node_modules/@progress/kendo-ui/js/pdf/core.js");\n\n/***/ }),\n\n/***/ 1301:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdf/mixins */ "./node_modules/@progress/kendo-ui/js/pdf/mixins.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.pdf.js?')},"./node_modules/@progress/kendo-ui/js/kendo.pdfviewer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.pdfviewer.js ***!
  \***************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1302);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.mobile.scroller */ "./node_modules/@progress/kendo-ui/js/kendo.mobile.scroller.js");\n\n/***/ }),\n\n/***/ 1302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(1037),\n\t        __webpack_require__(1303),\n\t        __webpack_require__(1304),\n\t        __webpack_require__(1305),\n\t        __webpack_require__(1306),\n\t        __webpack_require__(1307),\n\t        __webpack_require__(1308),\n\t        __webpack_require__(1309)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "pdfviewer",\n\t    name: "PDFViewer",\n\t    category: "web",\n\t    description: "PDFViewer to display pdfs in the browser",\n\t    depends: ["core", "window", "dialog", "toolbar", "mobile.scroller", "upload", "combobox", "drawing", "binder", "dropdownlist", "numerictextbox"]\n\t};\n\n\t(function($, undefined) {\n\t    var NS = ".kendoPDFViewer",\n\t        kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        proxy = $.proxy,\n\t        extend = $.extend,\n\t        drawing = kendo.drawing,\n\t        keys = $.extend({PLUS: 187, MINUS: 189, ZERO: 48, NUMPAD_ZERO: 96 }, kendo.keys),\n\t        Page,\n\t        Widget = ui.Widget,\n\t        progress = kendo.ui.progress,\n\t        SCROLL = "scroll",\n\t        RENDER = "render",\n\t        OPEN = "open",\n\t        ERROR = "error",\n\t        FOCUS = "focus" + NS,\n\t        KEYDOWN = "keydown" + NS,\n\t        MOUSEWHEEL = "DOMMouseScroll" + NS + " mousewheel" + NS,\n\t        UPDATE = "update",\n\t        ZOOM_SCALE = 1.25,\n\t        PAGE_CHANGE = "pagechange",\n\t        ZOOMSTART = "zoomStart",\n\t        ZOOMEND = "zoomEnd",\n\t        ZOOMCOMMAND = "ZoomCommand",\n\t        WHITECOLOR = "#ffffff",\n\t        TABINDEX = "tabindex",\n\t        PROCESSORS = {\n\t            pdfjs: "pdfjs",\n\t            dpl: "dpl"\n\t        },\n\t        styles = {\n\t            viewer: "k-pdf-viewer k-widget",\n\t            scroller: "k-canvas k-list-scroller",\n\t            enableTextSelection: "k-enable-text-select",\n\t            enablePanning: "k-enable-panning",\n\t            highlightClass: "k-search-highlight",\n\t            charClass: "k-text-char"\n\t        };\n\n\t    var PDFViewer = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, kendo.deepExtend({}, this.options, options));\n\n\t            that._wrapper();\n\n\t            if (that.options.toolbar) {\n\t                that._renderToolbar();\n\t            }\n\n\t            that._initProcessor(options || {});\n\t            that._renderPageContainer();\n\t            that._loadDocument();\n\n\t            that._tabindex();\n\t            kendo.notify(that, kendo.ui);\n\t        },\n\n\t        events: [\n\t            RENDER,\n\t            OPEN,\n\t            ERROR,\n\t            ZOOMSTART,\n\t            ZOOMEND\n\t        ],\n\n\t        options: {\n\t            name: "PDFViewer",\n\t            view: {\n\t                type: "canvas"\n\t            },\n\t            pdfjsProcessing: {\n\t                file: null\n\t            },\n\t            dplProcessing: {\n\t                read: {\n\t                    url: null,\n\t                    type: "GET",\n\t                    dataType: "json",\n\t                    pageField: "pageNumber"\n\t                },\n\t                upload: {\n\t                    url: null,\n\t                    saveField: "file"\n\t                },\n\t                download: {\n\t                    url: null\n\t                },\n\t                loadOnDemand: false\n\t            },\n\t            toolbar: {\n\t                items: []\n\t            },\n\t            width: 1000,\n\t            height: 1200,\n\t            page: 1,\n\t            defaultPageSize: {\n\t                width: 794,\n\t                height: 1123\n\t            },\n\t            scale: null,\n\t            zoomMin: 0.5,\n\t            zoomMax: 4,\n\t            zoomRate: 0.25,\n\t            messages: {\n\t                defaultFileName: "Document",\n\t                toolbar: {\n\t                    zoom: {\n\t                        zoomOut: "Zoom Out",\n\t                        zoomIn: "Zoom In",\n\t                        actualWidth: "Actual Width",\n\t                        autoWidth: "Automatic Width",\n\t                        fitToWidth: "Fit to Width",\n\t                        fitToPage: "Fit to Page"\n\t                    },\n\t                    open: "Open",\n\t                    exportAs: "Export",\n\t                    download: "Download",\n\t                    pager:  {\n\t                        first: "Go to the first page",\n\t                        previous: "Go to the previous page",\n\t                        next: "Go to the next page",\n\t                        last: "Go to the last page",\n\t                        of: " of {0} ",\n\t                        page: "page",\n\t                        pages: "pages"\n\t                    },\n\t                    print: "Print",\n\t                    toggleSelection: "Enable Selection",\n\t                    togglePan: "Enable Panning",\n\t                    search: "Search"\n\t                },\n\t                errorMessages: {\n\t                    notSupported: "Only pdf files allowed.",\n\t                    parseError: "PDF file fails to process.",\n\t                    notFound: "File is not found.",\n\t                    popupBlocked: "Popup is blocked."\n\t                },\n\t                dialogs: {\n\t                    exportAsDialog: {\n\t                        title: "Export...",\n\t                        defaultFileName: "Document",\n\t                        pdf: "Portable Document Format (.pdf)",\n\t                        png: "Portable Network Graphics (.png)",\n\t                        svg: "Scalable Vector Graphics (.svg)",\n\t                        labels: {\n\t                            fileName: "File name",\n\t                            saveAsType: "Save as",\n\t                            page: "Page"\n\t                        }\n\t                    },\n\t                    okText: "OK",\n\t                    save: "Save",\n\t                    cancel: "Cancel",\n\t                    search: {\n\t                        inputLabel: "Search Text",\n\t                        matchCase: "Match Case",\n\t                        next: "Next Match",\n\t                        previous: "Previous Match",\n\t                        close: "Close",\n\t                        of: "of"\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _wrapper: function () {\n\t            var that = this,\n\t                options = that.options;\n\n\t            that.wrapper = that.element;\n\n\t            that.wrapper\n\t                    .width(options.width)\n\t                    .height(options.height)\n\t                    .addClass(styles.viewer)\n\t                    .on(FOCUS, proxy(that._focus, that))\n\t                    .on(KEYDOWN, proxy(that._keydown, that));\n\n\t            that._allowResize = that.options.scale === null;\n\t            that._autoZoomScale = ZOOM_SCALE;\n\t            that.zoomScale = that.options.scale || that._autoZoomScale;\n\n\t            that._resizeHandler = kendo.onResize(function() {\n\t                that.resize();\n\t            });\n\n\t            that._pageNum = that.options.page;\n\t        },\n\n\t        _focus: function (e) {\n\t            if (this.toolbar) {\n\t                this.toolbar.wrapper.focus();\n\t            } else {\n\t                this.pageContainer.focus();\n\t            }\n\t            e.preventDefault();\n\t        },\n\n\t        _keydown: function (e) {\n\t            var plusShortcuts = [keys.PLUS, keys.NUMPAD_PLUS],\n\t                minusShortcuts = [keys.MINUS, keys.NUMPAD_MINUS],\n\t                zeroShortcuts = [keys.ZERO, keys.NUMPAD_ZERO],\n\t                shouldExecute = false,\n\t                args = {\n\t                    command: ZOOMCOMMAND,\n\t                    options: { updateComboBox: true }\n\t                };\n\n\t            if (!e.ctrlKey || this._blankPage || this.processingLib === PROCESSORS.dpl) {\n\t                return;\n\t            }\n\n\t            if (plusShortcuts.includes(e.keyCode)) {\n\t                args.options.zoomIn = true;\n\t                shouldExecute = true;\n\t            } else if (minusShortcuts.includes(e.keyCode)) {\n\t                args.options.zoomOut = true;\n\t                shouldExecute = true;\n\t            } else if (zeroShortcuts.includes(e.keyCode)) {\n\t                args.options.scale = ZOOM_SCALE;\n\t                shouldExecute = true;\n\t            }\n\n\t            if (shouldExecute) {\n\t                this.execute(args);\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _initProcessor: function (options) {\n\t            var that = this,\n\t                processingOptions;\n\n\t            processingOptions = options.dplProcessing ? that.options.dplProcessing : that.options.pdfjsProcessing;\n\t            that.processingLib = options.dplProcessing ? PROCESSORS.dpl : PROCESSORS.pdfjs;\n\n\t            that.processor = new kendo.pdfviewer[that.processingLib].processor(processingOptions, that);\n\t            Page = kendo.pdfviewer[that.processingLib].Page;\n\t        },\n\n\t        _renderToolbar: function () {\n\t            var that = this,\n\t                options = that.options;\n\n\t            var toolbarOptions = {\n\t                pager: {\n\t                    messages: options.messages.toolbar.pager\n\t                },\n\t                scale: options.scale,\n\t                resizable: true,\n\t                items: options.toolbar.items,\n\t                width: options.width,\n\t                action: that.execute.bind(that),\n\t                messages: options.messages.toolbar,\n\t                viewer: this\n\t            };\n\n\t            var toolbarElement = $("<div />");\n\t            toolbarElement.appendTo(that.element);\n\t            that.toolbar = new kendo.pdfviewer.Toolbar(toolbarElement, toolbarOptions);\n\t        },\n\n\t        _initErrorDialog: function (options) {\n\t            var that = this;\n\n\t            if (!that._errorDialog) {\n\t                options = extend(options, {\n\t                    messages: that.options.messages\n\t                });\n\t                var dialogInstance = new kendo.pdfviewer.dialogs.ErrorDialog(options);\n\t                that._errorDialog = dialogInstance._dialog;\n\t            }\n\t            return that._errorDialog;\n\t        },\n\n\t        _renderPageContainer: function () {\n\t            var that = this;\n\n\t            if (!that.pageContainer) {\n\t                that.pageContainer = $("<div />");\n\t                that.pageContainer.addClass(styles.scroller);\n\t                that.pageContainer.attr(TABINDEX, 0);\n\t                that.wrapper.append(that.pageContainer);\n\t            }\n\t        },\n\n\t        _triggerError: function (options) {\n\t            var dialog = this._initErrorDialog();\n\t            extend(options, {\n\t                dialog: dialog\n\t            });\n\t            if (this.pageContainer) {\n\t                progress(this.pageContainer, false);\n\t            }\n\n\t            if (this.trigger(ERROR, options))\n\t            {\n\t                return;\n\t            }\n\n\t            dialog.open().content(options.message);\n\t        },\n\n\t        _renderPages: function () {\n\t            var that = this,\n\t                document = that.document,\n\t                pagesData;\n\n\t            that.pages = [];\n\n\t            if (!document || !document.total) {\n\t                that._renderBlankPage();\n\t                return;\n\t            }\n\n\t            pagesData = document.pages;\n\n\t            for (var i = 1; i <= document.total; i++) {\n\t                var viewerPage,\n\t                    pageData = {\n\t                        processor: that.processor,\n\t                        number: i\n\t                    };\n\n\t                if (pagesData && pagesData.length) {\n\t                    pageData = extend(pageData, pagesData[i - 1]);\n\t                }\n\n\t                viewerPage = new Page(pageData, that);\n\t                that.pages.push(viewerPage);\n\t                that.pageContainer.append(viewerPage.element);\n\t            }\n\n\t            that._attachContainerEvents();\n\t            that._getVisiblePagesCount();\n\t        },\n\n\t        _renderBlankPage: function () {\n\t            this._blankPage = new Page(this.options.defaultPageSize, this);\n\n\t            this.pageContainer.append(this._blankPage.element);\n\n\t            this.trigger(UPDATE, { isBlank: true });\n\t        },\n\n\t        _resize: function () {\n\t            var that = this,\n\t                containerWidth,\n\t                ratio;\n\n\t            if (!that._allowResize) {\n\t                return;\n\t            }\n\n\t            if (!that.pages || !that.pages.length) {\n\t                if (that._blankPage) {\n\t                    ratio = containerWidth / that._blankPage.element.width();\n\t                    that._blankPage.resize(ratio);\n\t                }\n\t                return;\n\t            }\n\n\t            if (that.toolbar) {\n\t                that.toolbar.resize(true);\n\t            }\n\n\t            if (that._resizeHandler) {\n\t                clearTimeout(that._resizeHandler);\n\t            }\n\t            that._resizeHandler = setTimeout(that._resizePages.bind(that), 100);\n\t        },\n\n\t        _resizePages: function () {\n\t            var that = this,\n\t                containerWidth = that.pageContainer[0].clientWidth,\n\t                ratio = 0;\n\n\t            that.pages.forEach(function (page) {\n\t                var currentRatio = containerWidth / page.element.width();\n\n\t                if (currentRatio > ratio) {\n\t                    ratio = currentRatio;\n\t                }\n\t            });\n\n\t            if(that._autoFit) {\n\t                that.zoom(that._autoFit, true);\n\t                return;\n\t            }\n\n\t            ratio = Math.min(Math.max(ratio, that.options.zoomMin), ZOOM_SCALE);\n\t            if (ratio != that.zoomScale) {\n\t                that.zoom(ratio, true);\n\t                that.zoomScale = ratio;\n\t                that._allowResize = true;\n\t            }\n\t        },\n\n\t        _attachContainerEvents: function () {\n\t            var that = this;\n\n\t            that._wheel = kendo.throttle(\n\t                that._wheel.bind(that),\n\t                300\n\t            );\n\n\t            if(that.processingLib !== PROCESSORS.dpl) {\n\t                that.pageContainer.on(MOUSEWHEEL, function (e) {\n\t                    if (!e.ctrlKey) {\n\t                        return;\n\t                    }\n\n\t                    if (document.activeElement !== that.pageContainer[0]) {\n\t                        that.pageContainer.focus();\n\t                    }\n\n\t                    that._wheel(e);\n\t                    e.preventDefault();\n\t                });\n\t            }\n\n\t            that._scroller = new kendo.mobile.ui.Scroller(that.pageContainer, {\n\t                zoom: false,\n\t                elastic: true\n\t            });\n\n\t            that._scroller.scrollElement.addClass(styles.enablePanning);\n\t            that._scroller.bind(SCROLL, proxy(that._scroll, this));\n\t        },\n\n\t        _scroll: function (e) {\n\t            var that = this,\n\t                containerScrollHeight = that.pageContainer[0].scrollHeight,\n\t                containerHeight = that.pageContainer.height(),\n\t                containerScrollTop = e.scrollTop,\n\t                containerOffsetTop = that.pageContainer.offset().top,\n\t                total = that.pages.length,\n\t                pageNum = that._pageNum,\n\t                pageIndex = pageNum - 1,\n\t                pageToLoadNum = pageNum,\n\t                pageToLoad,\n\t                currentPage, currentPageTop, currentPageHeight,\n\t                previousPage, prevPageTop, prevPageHeight,\n\t                scrollDirection = containerScrollTop - that._prevScrollTop > 0 ? 1 : -1;\n\n\t                if (that._preventScroll || !total) {\n\t                    that._preventScroll = false;\n\t                    return;\n\t                }\n\n\t                that._scrollingStarted = true;\n\n\t                currentPage = that.pages[pageIndex];\n\t                currentPageTop = currentPage.element.offset().top - containerOffsetTop;\n\t                currentPageHeight = currentPage.element.height();\n\n\t                if (scrollDirection == -1 && that.pages[pageIndex + scrollDirection]) {\n\t                    previousPage = that.pages[pageIndex - that._visiblePagesCount] || that.pages[pageIndex + scrollDirection];\n\t                    prevPageTop = previousPage.element.offset().top - containerOffsetTop;\n\t                    prevPageHeight = previousPage.element.height();\n\t                }\n\n\t                if (Math.abs(containerScrollTop - (that._prevScrollTop || 0)) > containerHeight * that.zoomScale) {\n\t                    pageToLoadNum = Math.floor(containerScrollTop * (1 / (containerScrollHeight / total))) + 1;\n\t                } else if (currentPageTop < 0 && Math.abs(currentPageTop) >= currentPageHeight / 2 && scrollDirection === 1) {\n\t                    pageToLoadNum++;\n\t                } else if (previousPage && Math.abs(prevPageTop) <= prevPageHeight / 2) {\n\t                    pageToLoadNum--;\n\t                }\n\n\t                if (pageNum !== pageToLoadNum && pageToLoadNum >= 1 && pageToLoadNum <= total) {\n\t                    pageToLoad = that.pages[pageToLoadNum - 1].element;\n\n\t                    if (pageToLoad.offset().top > containerHeight) {\n\t                        return;\n\t                    }\n\n\t                    that._pageNum = pageToLoadNum;\n\t                    that._loadVisiblePages();\n\n\t                    that.trigger(UPDATE, { action: PAGE_CHANGE, page: pageToLoadNum, total: total });\n\t                }\n\n\t                that._prevScrollTop = containerScrollTop;\n\t        },\n\n\t        _wheel: function (e) {\n\t            var originalEvent = e.originalEvent,\n\t                delta = originalEvent.wheelDelta ? -originalEvent.wheelDelta : originalEvent.detail,\n\t                zoomIn = delta < 0;\n\n\t            this.execute({\n\t                command: ZOOMCOMMAND,\n\t                options: {\n\t                    zoomIn: zoomIn,\n\t                    zoomOut: !zoomIn,\n\t                    updateComboBox: true\n\t                }\n\t            });\n\n\t            e.preventDefault();\n\t        },\n\n\t        zoom: function (scale, preventComboBoxChange) {\n\t            var that = this;\n\t            if (!scale) {\n\t                return that.zoomScale;\n\t            }\n\n\t            return that.execute({\n\t                command: ZOOMCOMMAND,\n\t                options: {\n\t                    scale: scale,\n\t                    updateComboBox: !preventComboBoxChange\n\t                }\n\t            });\n\t        },\n\n\t        execute: function (options) {\n\t            var commandOptions = extend({ viewer: this }, options.options);\n\t            var command = new kendo.pdfviewer[options.command](commandOptions);\n\t            return command.exec();\n\t        },\n\n\t        _loadDocument: function () {\n\t            var that = this;\n\t            var page = that.options.page;\n\n\t            progress(that.pageContainer, true);\n\t            that.processor.fetchDocument().done(function (document) {\n\t                that._clearPages();\n\t                that.document = document;\n\n\t                that._renderPages();\n\t                that.resize(true);\n\n\t                if (document) {\n\t                    page = page >= 1 && page <= document.total ? page : 1;\n\t                    that.activatePage(page);\n\t                }\n\n\t                progress(that.pageContainer, false);\n\t            });\n\t        },\n\n\t        loadPage: function (number) {\n\t            var page = this.pages && this.pages[number - 1];\n\n\t            if (page) {\n\t                return page.load(this.zoomScale);\n\t            }\n\t        },\n\n\t        activatePage: function (number) {\n\t            var page = this.pages && this.pages[number - 1],\n\t                scroller = this._scroller,\n\t                scrollerTopPosition,\n\t                scrollerTopOffset,\n\t                pageTopOffset,\n\t                pageMargin;\n\n\t            if (!page) {\n\t                return;\n\t            }\n\n\t            scrollerTopPosition = scroller.scrollTop;\n\t            scrollerTopOffset = scroller.element.offset().top;\n\t            pageTopOffset = page.element.offset().top;\n\t            pageMargin = !this._autoFit ? parseInt(page.element.css("marginTop"), 10) : 0;\n\n\t            this._pageNum = number;\n\t            this._loadVisiblePages();\n\n\t            this._preventScroll = true;\n\n\t            this._scroller.scrollTo(0, -scrollerTopPosition - pageTopOffset + scrollerTopOffset + pageMargin);\n\t            this.trigger(UPDATE, { action: PAGE_CHANGE, page: number, total: this.pages.length });\n\t        },\n\n\t        _getVisiblePagesCount: function () {\n\t            var that = this,\n\t                loadedPagesHeight = 0,\n\t                updatedVisiblePagesCount = 0,\n\t                containerHeight = that.pageContainer[0].clientHeight,\n\t                index = 0;\n\n\t            while(loadedPagesHeight <= containerHeight && index < that.pages.length)\n\t            {\n\t                loadedPagesHeight += that.pages[index].element.height();\n\t                updatedVisiblePagesCount++;\n\t                index++;\n\t            }\n\n\t            that._visiblePagesCount = updatedVisiblePagesCount;\n\t        },\n\n\t        _loadVisiblePages: function () {\n\t            var pagesCount = this.pages && this.pages.length,\n\t                minVisiblePageNum =  Math.max(this._pageNum - this._visiblePagesCount, 1),\n\t                maxVisiblePageNum = Math.min(this._pageNum + this._visiblePagesCount, pagesCount);\n\n\t            this._visiblePages = this.pages.slice(minVisiblePageNum - 1, maxVisiblePageNum);\n\n\t            for (var i = minVisiblePageNum; i <= maxVisiblePageNum; i++)\n\t            {\n\t                this.loadPage(i);\n\t            }\n\t        },\n\n\t        _loadAllPages: function () {\n\t            var pagesCount = this.pages && this.pages.length;\n\t            var promises = [];\n\n\t            for (var i = 0; i <= pagesCount; i++)\n\t            {\n\t                promises.push(this.loadPage(i));\n\t            }\n\n\t            return promises;\n\t        },\n\n\t        fromFile: function (file) {\n\t            this.zoomScale = this.options.scale || ZOOM_SCALE;\n\t            this.trigger(UPDATE, { action: "zoom", zoom: this.options.scale || "auto" });\n\n\t            this.processor._updateDocument(file);\n\t            this._loadDocument();\n\t        },\n\n\t        exportImage: function (options) {\n\t            var that = this;\n\t            var pageNumber = options.page;\n\t            var page = that.pages[pageNumber - 1] || that._blankPage;\n\t            var rootGroup = new drawing.Group();\n\n\t            page.load();\n\n\t            var background = kendo.drawing.Path.fromRect(new kendo.geometry.Rect([0, 0], [page.width, page.height]), {\n\t                fill: {\n\t                    color: WHITECOLOR\n\t                },\n\t                stroke: null\n\t            });\n\n\t            progress(that.pageContainer, true);\n\t            rootGroup.append(background, page.group);\n\n\t            drawing.exportImage(rootGroup).done(function (data) {\n\t                progress(that.pageContainer, false);\n\t                kendo.saveAs({\n\t                    dataURI: data,\n\t                    fileName: options.fileName,\n\t                    proxyURL: options.proxyURL || "",\n\t                    forceProxy: options.forceProxy,\n\t                    proxyTarget: options.proxyTarget\n\t                });\n\t            });\n\t        },\n\n\t        exportSVG: function (options) {\n\t            var that = this;\n\t            var pageNumber = options.page;\n\t            var page = that.pages[pageNumber - 1] || that._blankPage;\n\n\t            progress(that.pageContainer, true);\n\n\t            page.load();\n\n\t            drawing.exportSVG(page.group).done(function (data) {\n\t                progress(that.pageContainer, false);\n\t                kendo.saveAs({\n\t                    dataURI: data,\n\t                    fileName: options.fileName,\n\t                    proxyURL: options.proxyURL || "",\n\t                    forceProxy: options.forceProxy,\n\t                    proxyTarget: options.proxyTarget\n\t                });\n\t            });\n\t        },\n\n\t        setOptions: function (options)\n\t        {\n\t            var that = this;\n\n\t            if (options.pdfjsProcessing || options.dplProcessing) {\n\t                that._initProcessor(options || {});\n\t            }\n\n\t            options = $.extend(that.options, options);\n\n\t            Widget.fn.setOptions.call(that, options);\n\n\t            if (options.page) {\n\t                that._pageNum = options.page;\n\t                that.activatePage(options.page);\n\t            }\n\n\t            if (options.width) {\n\t                that.element.width(options.width);\n\t            }\n\n\t            if (options.height) {\n\t                that.element.height(options.height);\n\t            }\n\t        },\n\n\t        destroy: function ()\n\t        {\n\t            if (this._resizeHandler)\n\t            {\n\t                kendo.unbindResize(this._resizeHandler);\n\t            }\n\n\t            //destroy nested components\n\t            if (this._errorDialog) {\n\t                this._errorDialog.destroy();\n\t            }\n\n\t            if (this._saveDialog) {\n\t                this._saveDialog.destroy();\n\t            }\n\n\t            if (this._upload) {\n\t                this._upload.destroy();\n\t            }\n\n\t            if (this.toolbar) {\n\t                this.toolbar.unbind();\n\t                this.toolbar.destroy();\n\t                this.toolbar = null;\n\t            }\n\n\t            if (this.pages && this.pages.length) {\n\t                this.pages.forEach(function (page) {\n\t                    page.destroy();\n\t                });\n\t                this.pages = [];\n\t            }\n\n\t            if (this._scroller) {\n\t                this._scroller.unbind();\n\t                this._scroller.destroy();\n\t            }\n\t            this.pageContainer.off(NS);\n\n\t            Widget.fn.destroy.call(this);\n\t        },\n\n\t        _clearPages: function () {\n\t            this.pages = [];\n\t            this.document = null;\n\t            this._pageNum = 1;\n\n\t            this.pageContainer.off(NS);\n\t            this.pageContainer.empty();\n\n\t            if (this._scroller)\n\t            {\n\t                this._scroller.reset();\n\t                this._scroller.unbind();\n\t                this._scroller.destroy();\n\t            }\n\t        },\n\n\t        _toggleSelection: function (enable) {\n\t            var that = this;\n\n\t            if(enable === undefined) {\n\t                enable = true;\n\t            }\n\n\t            that._scroller.userEvents._shouldNotMove = enable;\n\n\t            that._scroller.scrollElement.toggleClass(styles.enableTextSelection, enable);\n\t            that._scroller.scrollElement.toggleClass(styles.enablePanning, !enable);\n\t        },\n\n\n\t        _initSearchDOM: function () {\n\t            var that = this;\n\t            var promise = new Promise(function (resolve) {\n\t                Promise.all(that._loadAllPages()).then(function(){\n\t                    that._searchDOM = new kendo.pdfviewer.SearchDOM({\n\t                        target: that._getTextLayers(),\n\t                        highlightClass: styles.highlightClass,\n\t                        charClass: styles.charClass\n\t                    });\n\n\t                    resolve();\n\t                });\n\t            });\n\n\t            return promise;\n\t        },\n\n\t        _getTextLayers: function () {\n\t            return this.pages.map(function(page){\n\t                return page.textLayer;\n\t            });\n\t        }\n\t    });\n\n\t    ui.plugin(PDFViewer);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1303:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/processors/pdfjs-processor */ "./node_modules/@progress/kendo-ui/js/pdfviewer/processors/pdfjs-processor.js");\n\n/***/ }),\n\n/***/ 1304:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/processors/dpl-processor */ "./node_modules/@progress/kendo-ui/js/pdfviewer/processors/dpl-processor.js");\n\n/***/ }),\n\n/***/ 1305:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/toolbar */ "./node_modules/@progress/kendo-ui/js/pdfviewer/toolbar.js");\n\n/***/ }),\n\n/***/ 1306:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/page */ "./node_modules/@progress/kendo-ui/js/pdfviewer/page.js");\n\n/***/ }),\n\n/***/ 1307:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/search */ "./node_modules/@progress/kendo-ui/js/pdfviewer/search.js");\n\n/***/ }),\n\n/***/ 1308:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/dialogs */ "./node_modules/@progress/kendo-ui/js/pdfviewer/dialogs.js");\n\n/***/ }),\n\n/***/ 1309:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./pdfviewer/commands */ "./node_modules/@progress/kendo-ui/js/pdfviewer/commands.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.pdfviewer.js?')},"./node_modules/@progress/kendo-ui/js/kendo.pivot.configurator.js":
/*!************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.pivot.configurator.js ***!
  \************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1310);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.dom */ "./node_modules/@progress/kendo-ui/js/kendo.dom.js");\n\n/***/ }),\n\n/***/ 1310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1015) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "pivot.configurator",\n\t    name: "PivotConfigurator",\n\t    category: "web",\n\t    depends: [ "dropdownlist", "treeview", "pivot.fieldmenu" ],\n\t    hidden: true\n\t};\n\n\t/*jshint eqnull: true*/\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        Widget = ui.Widget,\n\t        ns = ".kendoPivotConfigurator",\n\t        HOVEREVENTS = "mouseenter" + ns + " mouseleave" + ns,\n\t        SETTING_CONTAINER_TEMPLATE = kendo.template(\'<p class="k-reset"><span class="k-icon #=icon#"></span>${name}</p>\' +\n\t                \'<div class="k-list-container k-reset"></div>\');\n\n\t    function addKPI(data) {\n\t        var found;\n\t        var idx = 0;\n\t        var length = data.length;\n\n\t        for (; idx < length; idx++) {\n\t            if (data[idx].type == 2) {\n\t                found = true;\n\t                break;\n\t            }\n\t        }\n\n\t        if (found) {\n\t            data.splice(idx + 1, 0, {\n\t                caption: "KPIs",\n\t                defaultHierarchy: "[KPIs]",\n\t                name: "KPIs",\n\t                uniqueName: "[KPIs]"\n\t            });\n\t        }\n\t    }\n\n\t    function kpiNode(node) {\n\t        return {\n\t            name: node.uniqueName,\n\t            type: node.type\n\t        };\n\t    }\n\n\t    function normalizeKPIs(data) {\n\t        for (var idx = 0, length = data.length; idx < length; idx++) {\n\t            data[idx].uniqueName = data[idx].name;\n\t            data[idx].type = "kpi";\n\t        }\n\n\t        return data;\n\t    }\n\n\t    function settingTargetFromNode(node) {\n\t        var target = $(node).closest(".k-pivot-setting");\n\n\t        if (target.length) {\n\t            return target.data("kendoPivotSettingTarget");\n\t        }\n\t        return null;\n\t    }\n\n\t    var PivotConfigurator = Widget.extend({\n\t        init: function(element, options) {\n\t            Widget.fn.init.call(this, element, options);\n\n\t            this.element.addClass("k-widget k-fieldselector k-alt k-edit-form-container");\n\n\t            this._dataSource();\n\n\t            this._layout();\n\n\t            this.refresh();\n\n\t            kendo.notify(this);\n\t        },\n\n\t        events: [],\n\n\t        options: {\n\t            name: "PivotConfigurator",\n\t            filterable: false,\n\t            sortable: false,\n\t            messages: {\n\t                measures: "Drop Data Fields Here",\n\t                columns: "Drop Column Fields Here",\n\t                rows: "Drop Rows Fields Here",\n\t                measuresLabel: "Measures",\n\t                columnsLabel: "Columns",\n\t                rowsLabel: "Rows",\n\t                fieldsLabel: "Fields"\n\t            }\n\t        },\n\n\t        _dataSource: function() {\n\t            var that = this;\n\n\t            if (that.dataSource && that._refreshHandler) {\n\t                that.dataSource.unbind("change", that._refreshHandler)\n\t                               .unbind("error", that._errorHandler)\n\t                               .unbind("progress", that._progressHandler);\n\t            } else {\n\t                that._errorHandler = $.proxy(that._error, that);\n\t                that._refreshHandler = $.proxy(that.refresh, that);\n\t                that._progressHandler = $.proxy(that._requestStart, that);\n\t            }\n\n\t            that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n\t            that.dataSource.bind("change", that._refreshHandler)\n\t                           .bind("error", that._errorHandler)\n\t                           .bind("progress", that._progressHandler);\n\t        },\n\n\t        setDataSource: function(dataSource) {\n\t            this.options.dataSource = dataSource;\n\n\t            this._dataSource();\n\n\t            if (this.measures) {\n\t                this.measures.setDataSource(dataSource);\n\t            }\n\n\t            if (this.rows) {\n\t                this.rows.setDataSource(dataSource);\n\t            }\n\n\t            if (this.columns) {\n\t                this.columns.setDataSource(dataSource);\n\t            }\n\n\t            this.refresh();\n\t        },\n\n\t        _treeViewDataSource: function() {\n\t            var that = this;\n\n\t            return kendo.data.HierarchicalDataSource.create({\n\t                schema: {\n\t                    model: {\n\t                        id: "uniqueName",\n\t                        hasChildren: function(item) {\n\t                            return !("hierarchyUniqueName" in item) && !("aggregator" in item);\n\t                        }\n\t                    }\n\t                },\n\t                transport: {\n\t                    read: function(options) {\n\t                        var promise;\n\t                        var node;\n\t                        var kpi;\n\n\t                        if ($.isEmptyObject(options.data)) {\n\t                            promise = that.dataSource.schemaDimensions();\n\n\t                            promise.done(function(data) {\n\t                                        if (!that.dataSource.cubeBuilder) {\n\t                                            addKPI(data);\n\t                                        }\n\t                                        options.success(data);\n\t                                    })\n\t                                    .fail(options.error);\n\t                        } else {\n\t                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n\t                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n\t                            if (node.uniqueName === "[KPIs]") {\n\t                                kpi = true;\n\t                                promise = that.dataSource.schemaKPIs();\n\t                                promise.done(function (data) {\n\t                                            options.success(normalizeKPIs(data));\n\t                                       })\n\t                                       .fail(options.error);\n\t                            } else if (node.type == "kpi") {\n\t                                kpi = true;\n\t                                options.success(buildKPImeasures(node));\n\t                            }\n\n\t                            if (!kpi) {\n\t                                if (node.type == 2) { //measure\n\t                                    promise = that.dataSource.schemaMeasures();\n\t                                } else if (node.dimensionUniqueName) { // hierarchy\n\t                                    promise = that.dataSource.schemaLevels(options.data.uniqueName);\n\t                                } else { // dimension\n\t                                    promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n\t                                }\n\n\t                                promise.done(options.success)\n\t                                        .fail(options.error);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        },\n\n\t        _progress: function(toggle) {\n\t            kendo.ui.progress(this.element, toggle);\n\t        },\n\n\t        _error: function() {\n\t            this._progress(false);\n\t        },\n\n\t        _requestStart: function() {\n\t            this._progress(true);\n\t        },\n\n\t        _layout: function() {\n\t            this.form = $(\'<div class="k-columns k-state-default k-floatwrap"/>\').appendTo(this.element);\n\t            this._fields();\n\t            this._targets();\n\t        },\n\n\t        _fields: function() {\n\t            var container = $(\'<div class="k-state-default"><p class="k-reset"><span class="k-icon k-i-group"></span>\' + this.options.messages.fieldsLabel + \'</p></div>\').appendTo(this.form);\n\n\t            var template = \'# if (item.type == 2 || item.uniqueName == "[KPIs]") { #\' +\n\t                           \'<span class="k-icon k-i-#= (item.type == 2 ? \\"sum\\" : \\"kpi\\") #"></span>\' +\n\t                           \'# } else if (item.type && item.type !== "kpi") { #\' +\n\t                           \'<span class="k-icon k-i-arrows-dimensions"></span>\' +\n\t                           \'# } #\' +\n\t                           \'#: item.caption || item.name #\';\n\n\t            this.treeView = $("<div/>").appendTo(container)\n\t                .kendoTreeView({\n\t                    template: template,\n\t                    dataTextField: "caption",\n\t                    dragAndDrop: true,\n\t                    autoBind: false,\n\t                    dataSource: this._treeViewDataSource(),\n\t                    dragstart: function(e) {\n\t                        var dataItem = this.dataItem(e.sourceNode);\n\t                        if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === "[KPIs]") {\n\t                            e.preventDefault();\n\t                        }\n\t                    },\n\t                    drag: function(e) {\n\t                        var status = "k-i-cancel";\n\n\t                        var setting = settingTargetFromNode(e.dropTarget);\n\t                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n\t                            status = "k-i-plus";\n\t                        }\n\n\t                        e.setStatusClass(status);\n\t                    },\n\t                    drop: function(e) {\n\t                        e.preventDefault();\n\n\t                        var setting = settingTargetFromNode(e.dropTarget);\n\t                        var node = this.dataItem(e.sourceNode);\n\t                        var idx, length, measures;\n\t                        var name;\n\n\t                        if (setting && setting.validate(node)) {\n\t                            name = node.defaultHierarchy || node.uniqueName;\n\n\t                            if (node.type === "kpi") {\n\t                                measures = buildKPImeasures(node);\n\t                                length = measures.length;\n\t                                name = [];\n\n\t                                for (idx = 0; idx < length; idx++) {\n\t                                    name.push(kpiNode(measures[idx]));\n\t                                }\n\t                            } else if (node.kpi) {\n\t                                name = [kpiNode(node)];\n\t                            }\n\n\t                            setting.add(name);\n\t                        }\n\t                    }\n\t                 })\n\t                .data("kendoTreeView");\n\t        },\n\n\t        _createTarget: function(element, options) {\n\t            var template = \'<li class="k-item k-header" data-\' + kendo.ns + \'name="${data.name}">${data.name}\';\n\t            var sortable = options.sortable;\n\t            var icons = "";\n\n\t            if (sortable) {\n\t                icons += \'#if (data.sortIcon) {#\';\n\t                icons += \'<span class="k-icon ${data.sortIcon}-sm"></span>\';\n\t                icons += \'#}#\';\n\t            }\n\n\t            if (options.filterable || sortable) {\n\t                icons += \'<span class="k-icon k-i-more-vertical k-setting-fieldmenu"></span>\';\n\t            }\n\n\t            icons += \'<span class="k-icon k-i-close k-setting-delete"></span>\';\n\t            template += \'<span class="k-field-actions">\' + icons + \'</span></li>\';\n\n\t            return new kendo.ui.PivotSettingTarget(element, $.extend({\n\t                dataSource: this.dataSource,\n\t                hint: function(element) {\n\t                    var wrapper = $(\'<div class="k-fieldselector"><ul class="k-list k-reset"></ul></div>\');\n\n\t                    wrapper.find(".k-list").append(element.clone());\n\n\t                    return wrapper;\n\t                },\n\t                template: template,\n\t                emptyTemplate: \'<li class="k-item k-empty">${data}</li>\'\n\t            }, options));\n\t        },\n\n\t        _targets: function() {\n\t            var container = $(\'<div class="k-state-default"/>\').appendTo(this.form);\n\n\t            var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: "k-i-columns" })).appendTo(container);\n\t            var columns = $(\'<ul class="k-pivot-configurator-settings k-list k-reset" />\').appendTo(columnsContainer.last());\n\n\t            var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: "k-i-rows" })).appendTo(container);\n\t            var rows = $(\'<ul class="k-pivot-configurator-settings k-list k-reset" />\').appendTo(rowsContainer.last());\n\n\t            var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: "k-i-sum"})).appendTo(container);\n\t            var measures = $(\'<ul class="k-pivot-configurator-settings k-list k-reset" />\').appendTo(measuresContainer.last());\n\n\t            var options = this.options;\n\n\t            this.columns = this._createTarget(columns, {\n\t                filterable: options.filterable,\n\t                sortable: options.sortable,\n\t                connectWith: rows,\n\t                messages: {\n\t                    empty: options.messages.columns,\n\t                    fieldMenu: options.messages.fieldMenu\n\t                }\n\t            });\n\n\t            this.rows = this._createTarget(rows, {\n\t                filterable: options.filterable,\n\t                sortable: options.sortable,\n\t                setting: "rows",\n\t                connectWith: columns,\n\t                messages: {\n\t                    empty: this.options.messages.rows,\n\t                    fieldMenu: this.options.messages.fieldMenu\n\t                }\n\t            });\n\n\t            this.measures = this._createTarget(measures, {\n\t                setting: "measures",\n\t                messages: {\n\t                    empty: options.messages.measures\n\t                }\n\t            });\n\n\t            columns\n\t                .add(rows)\n\t                .add(measures)\n\t                .on(HOVEREVENTS, ".k-item:not(.k-empty)", this._toggleHover);\n\t        },\n\n\t        _toggleHover: function(e) {\n\t            $(e.currentTarget).toggleClass("k-state-hover", e.type === "mouseenter");\n\t        },\n\n\t        _resize: function() {\n\t            var element = this.element;\n\t            var height = this.options.height;\n\t            var border, fields;\n\t            var outerHeight = kendo._outerHeight;\n\n\t            if (!height) {\n\t                return;\n\t            }\n\n\t            element.height(height);\n\n\t            if (element.is(":visible")) {\n\t                fields = element.children(".k-columns")\n\t                                .children("div.k-state-default");\n\n\t                height = element.innerHeight();\n\n\t                border = (outerHeight(element) - height) / 2;\n\t                height = height - (outerHeight(fields, true) - fields.height()) - border;\n\n\t                fields.height(height);\n\t            }\n\t        },\n\n\t        refresh: function() {\n\t            var dataSource = this.dataSource;\n\n\t            if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n\t                this.treeView.dataSource.fetch();\n\t            }\n\n\t            this._catalog = this.dataSource.catalog();\n\t            this._cube = this.dataSource.cube();\n\n\t            this._resize();\n\n\t            this._progress(false);\n\t        },\n\n\t        destroy: function() {\n\t            Widget.fn.destroy.call(this);\n\n\t            this.dataSource.unbind("change", this._refreshHandler);\n\n\t            this.form.find(".k-list").off(ns);\n\n\t            this.rows.destroy();\n\t            this.columns.destroy();\n\t            this.measures.destroy();\n\t            this.treeView.destroy();\n\n\t            this.element = null;\n\t            this._refreshHandler = null;\n\t        }\n\t    });\n\n\t    function kpiMeasure(name, measure, type) {\n\t        return {\n\t            hierarchyUniqueName: name,\n\t            uniqueName: measure,\n\t            caption: measure,\n\t            measure: measure,\n\t            name: measure,\n\t            type: type,\n\t            kpi: true\n\t        };\n\t    }\n\n\t    function buildKPImeasures(node) {\n\t        var name = node.name;\n\t        return [\n\t            kpiMeasure(name, node.value, "value"),\n\t            kpiMeasure(name, node.goal, "goal"),\n\t            kpiMeasure(name, node.status, "status"),\n\t            kpiMeasure(name, node.trend, "trend")\n\t        ];\n\t    }\n\n\t    ui.plugin(PivotConfigurator);\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.pivot.configurator.js?')},"./node_modules/@progress/kendo-ui/js/kendo.pivot.fieldmenu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.pivot.fieldmenu.js ***!
  \*********************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1311);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\n\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.dropdownlist */ "./node_modules/@progress/kendo-ui/js/kendo.dropdownlist.js");\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.menu */ "./node_modules/@progress/kendo-ui/js/kendo.menu.js");\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.window */ "./node_modules/@progress/kendo-ui/js/kendo.window.js");\n\n/***/ }),\n\n/***/ 1311:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1312), __webpack_require__(1060), __webpack_require__(1159), __webpack_require__(1313), __webpack_require__(1022) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "pivot.fieldmenu",\n\t    name: "PivotFieldMenu",\n\t    category: "web",\n\t    description: "The PivotFieldMenu widget allows the user to filter on fields displayed in PivotGrid",\n\t    depends: [ "menu", "window", "treeview", "dropdownlist" ],\n\t    advanced: true\n\t};\n\n\t/*jshint eqnull: true*/\n\t(function($, undefined) {\n\t    var kendo = window.kendo;\n\t    var ui = kendo.ui;\n\t    var MENU = "kendoContextMenu";\n\t    var proxy = $.proxy;\n\t    var NS = ".kendoPivotFieldMenu";\n\t    var Widget = ui.Widget;\n\t    var FILTER_ITEM = "k-filter-item";\n\t    var ARIA_LABEL = "aria-label";\n\n\t    var PivotFieldMenu = Widget.extend({\n\t        init: function(element, options) {\n\t            Widget.fn.init.call(this, element, options);\n\n\t            this._dataSource();\n\n\t            this._layout();\n\n\t            kendo.notify(this);\n\t        },\n\n\t        events: [],\n\n\t        options: {\n\t            name: "PivotFieldMenu",\n\t            filter: null,\n\t            filterable: true,\n\t            sortable: true,\n\t            messages: {\n\t                info: "Show items with value that:",\n\t                sortAscending: "Sort Ascending",\n\t                sortDescending: "Sort Descending",\n\t                filterFields: "Fields Filter",\n\t                filter: "Filter",\n\t                include: "Include Fields...",\n\t                title: "Fields to include",\n\t                clear: "Clear",\n\t                ok: "OK",\n\t                cancel: "Cancel",\n\t                operators: {\n\t                    contains: "Contains",\n\t                    doesnotcontain: "Does not contain",\n\t                    startswith: "Starts with",\n\t                    endswith: "Ends with",\n\t                    eq: "Is equal to",\n\t                    neq: "Is not equal to"\n\t                }\n\t            }\n\t        },\n\n\t        _layout: function() {\n\t            var options = this.options;\n\n\t            this.wrapper = $(kendo.template(MENUTEMPLATE)({\n\t                ns: kendo.ns,\n\t                filterable: options.filterable,\n\t                sortable: options.sortable,\n\t                messages: options.messages\n\t            }));\n\n\t            this.menu = this.wrapper[MENU]({\n\t                filter: options.filter,\n\t                target: this.element,\n\t                orientation: "vertical",\n\t                showOn: "click",\n\t                closeOnClick: false,\n\t                open: proxy(this._menuOpen, this),\n\t                select: proxy(this._select, this),\n\t                copyAnchorStyles: false\n\t            }).data(MENU);\n\n\t            this._createWindow();\n\n\t            if (options.filterable) {\n\t                this._initFilterForm();\n\t            }\n\t        },\n\n\t        _initFilterForm: function() {\n\t            var filterForm = this.menu.element.find("." + FILTER_ITEM);\n\t            var filterProxy = proxy(this._filter, this);\n\n\t            this._filterOperator = new kendo.ui.DropDownList(filterForm.find("select"));\n\t            this._filterValue = filterForm.find(".k-textbox");\n\t            this._updateFilterAriaLabel();\n\n\t            filterForm\n\t                .on("submit" + NS, filterProxy)\n\t                .on("click" + NS, ".k-button-filter", filterProxy)\n\t                .on("click" + NS, ".k-button-clear", proxy(this._reset, this));\n\t        },\n\n\t        _setFilterForm: function(expression) {\n\t            var filterOperator = this._filterOperator;\n\t            var operator = "";\n\t            var value = "";\n\n\t            if (expression) {\n\t                operator = expression.operator;\n\t                value = expression.value;\n\t            }\n\n\t            filterOperator.value(operator);\n\t            if (!filterOperator.value()) {\n\t                filterOperator.select(0);\n\t            }\n\n\t            this._filterValue.val(value);\n\t        },\n\n\t        _clearFilters: function(member) {\n\t            var filter = this.dataSource.filter() || {};\n\t            var expressions;\n\t            var idx = 0;\n\t            var length;\n\n\t            filter.filters = filter.filters || [];\n\t            expressions = findFilters(filter, member);\n\n\t            for (length = expressions.length; idx < length; idx++) {\n\t                filter.filters.splice(filter.filters.indexOf(expressions[idx]), 1);\n\t            }\n\n\t            return filter;\n\t        },\n\n\t        _convert: function(value) {\n\t            var schema = this.dataSource.options.schema;\n\t            var field = ((schema.model || {}).fields || {})[this.currentMember];\n\n\t            if (field) {\n\t                if (field.type === "number") {\n\t                    value = parseFloat(value);\n\t                } else if (field.type === "boolean") {\n\t                    value = Boolean($.parseJSON(value));\n\t                }\n\t            }\n\n\t            return value;\n\t        },\n\n\t        _filter: function(e) {\n\t            var that = this;\n\t            var value = that._convert(that._filterValue.val());\n\n\t            e.preventDefault();\n\n\t            if (value === "") {\n\t                that.menu.close();\n\t                return;\n\t            }\n\n\t            var expression = {\n\t                field: that.currentMember,\n\t                operator: that._filterOperator.value(),\n\t                value: value\n\t            };\n\t            var filter = that._clearFilters(that.currentMember);\n\n\t            filter.filters.push(expression);\n\n\t            that.dataSource.filter(filter);\n\t            that.menu.close();\n\t        },\n\n\t        _updateFilterAriaLabel: function () {\n\t            var filterForm = this.menu.element.find("." + FILTER_ITEM);\n\t            var selectedOperator = this._filterOperator.value();\n\t            var selectedOperatorName = this.options.messages.operators[selectedOperator];\n\n\t            filterForm.find("select").attr(ARIA_LABEL, selectedOperatorName);\n\t        },\n\n\t        _reset: function(e) {\n\t            var that = this;\n\t            var filter = that._clearFilters(that.currentMember);\n\n\t            e.preventDefault();\n\n\t            if (!filter.filters[0]) {\n\t                filter = {};\n\t            }\n\n\t            that.dataSource.filter(filter);\n\t            that._setFilterForm(null);\n\t            that.menu.close();\n\t        },\n\n\t        _sort: function(dir) {\n\t            var field = this.currentMember;\n\t            var expressions = (this.dataSource.sort() || []);\n\n\t            expressions = removeExpr(expressions, field);\n\t            expressions.push({\n\t                field: field,\n\t                dir: dir\n\t            });\n\n\t            this.dataSource.sort(expressions);\n\t            this.menu.close();\n\t        },\n\n\t        setDataSource: function(dataSource) {\n\t            this.options.dataSource = dataSource;\n\n\t            this._dataSource();\n\t        },\n\n\t        _dataSource: function() {\n\t            this.dataSource = kendo.data.PivotDataSource.create(this.options.dataSource);\n\t        },\n\n\t        _createWindow: function() {\n\t            var messages = this.options.messages;\n\n\t            this.includeWindow = $(kendo.template(WINDOWTEMPLATE)({\n\t                messages: messages\n\t            }))\n\t            .on("click" + NS, ".k-button-ok", proxy(this._applyIncludes, this))\n\t            .on("click" + NS, ".k-button-cancel", proxy(this._closeWindow, this));\n\n\t            this.includeWindow = new ui.Window(this.includeWindow, {\n\t                title: messages.title,\n\t                visible: false,\n\t                resizable: false,\n\t                open: proxy(this._windowOpen, this)\n\t            });\n\t        },\n\n\t        _applyIncludes: function(e) {\n\t            var checkedNodes = [];\n\t            var resultExpression;\n\t            var view = this.treeView.dataSource.view();\n\t            var rootChecked = view[0].checked;\n\t            var filter = this.dataSource.filter();\n\t            var existingExpression = findFilters(filter, this.currentMember, "in")[0];\n\n\t            checkedNodeIds(view, checkedNodes);\n\n\t            if (existingExpression) {\n\t                if (rootChecked) {\n\t                    filter.filters.splice(filter.filters.indexOf(existingExpression), 1);\n\t                    if (!filter.filters.length) {\n\t                        filter = {};\n\t                    }\n\t                } else {\n\t                    existingExpression.value = checkedNodes.join(",");\n\t                }\n\n\t                resultExpression = filter;\n\t            }\n\n\t            if (checkedNodes.length) {\n\t                if (!resultExpression && !rootChecked) {\n\t                    resultExpression = {\n\t                        field: this.currentMember,\n\t                        operator: "in",\n\t                        value: checkedNodes.join(",")\n\t                    };\n\n\t                    if (filter) {\n\t                        filter.filters.push(resultExpression);\n\t                        resultExpression = filter;\n\t                    }\n\t                }\n\t            }\n\n\t            if (resultExpression) {\n\t                this.dataSource.filter(resultExpression);\n\t            }\n\n\t            this._closeWindow(e);\n\t        },\n\n\t        _closeWindow: function(e) {\n\t            e.preventDefault();\n\n\t            this.includeWindow.close();\n\t        },\n\n\t        _treeViewDataSource: function() {\n\t            var that = this;\n\n\t            return kendo.data.HierarchicalDataSource.create({\n\t                schema: {\n\t                    model: {\n\t                        id: "uniqueName",\n\t                        hasChildren: function(item) {\n\t                            return parseInt(item.childrenCardinality, 10) > 0;\n\t                        }\n\t                    }\n\t                },\n\t                transport: {\n\t                    read: function(options) {\n\t                        var restrictions = {};\n\t                        var node = that.treeView.dataSource.get(options.data.uniqueName);\n\t                        var name = options.data.uniqueName;\n\n\t                        if (!name) {\n\t                            restrictions.levelUniqueName = that.currentMember + ".[(ALL)]";\n\t                        } else {\n\t                            restrictions.memberUniqueName = node.uniqueName.replace(/\\&/g, "&amp;");\n\t                            restrictions.treeOp = 1;\n\t                        }\n\n\t                        that.dataSource\n\t                            .schemaMembers(restrictions)\n\t                            .done(function (data) {\n\t                                checkNodes(that.dataSource.filter(), that.currentMember, data);\n\n\t                                options.success(data);\n\t                            })\n\t                            .fail(options.error);\n\t                    }\n\t                }\n\t            });\n\t        },\n\n\t        _createTreeView: function(element) {\n\t            var that = this;\n\n\t            that.treeView =  new ui.TreeView(element, {\n\t                autoBind: false,\n\t                dataSource: that._treeViewDataSource(),\n\t                dataTextField: "caption",\n\t                template: "#: data.item.caption || data.item.name #",\n\t                checkboxes: {\n\t                    checkChildren: true\n\t                },\n\t                dataBound: function() {\n\t                    ui.progress(that.includeWindow.element, false);\n\t                }\n\t            });\n\t        },\n\n\t        _menuOpen: function(e) {\n\t            if (!e.event) {\n\t                return;\n\t            }\n\n\t            var attr = kendo.attr("name");\n\n\t            this.currentMember = $(e.event.target).closest("[" + attr + "]").attr(attr);\n\n\t            if (this.options.filterable) {\n\t                this._setFilterForm(findFilters(this.dataSource.filter(), this.currentMember)[0]);\n\t            }\n\t        },\n\n\t        _select: function(e) {\n\t            var item = $(e.item);\n\n\t            $(".k-pivot-filter-window").not(this.includeWindow.element).kendoWindow("close");\n\n\t            if (item.hasClass("k-include-item")) {\n\t                this.includeWindow.center().open();\n\t            } else if (item.hasClass("k-sort-asc")) {\n\t                this._sort("asc");\n\t            } else if (item.hasClass("k-sort-desc")) {\n\t                this._sort("desc");\n\t            } else if (item.hasClass(FILTER_ITEM)) {\n\t                this._updateFilterAriaLabel();\n\t            }\n\t        },\n\n\t        _windowOpen: function() {\n\t            if (!this.treeView) {\n\t                this._createTreeView(this.includeWindow.element.find(".k-treeview"));\n\t            }\n\n\t            ui.progress(this.includeWindow.element, true);\n\t            this.treeView.dataSource.read();\n\t        },\n\n\t        destroy: function() {\n\t            Widget.fn.destroy.call(this);\n\n\t            if (this.menu) {\n\t                this.menu.destroy();\n\t                this.menu = null;\n\t            }\n\n\t            if (this.treeView) {\n\t                this.treeView.destroy();\n\t                this.treeView = null;\n\t            }\n\n\t            if (this.includeWindow) {\n\t                this.includeWindow.destroy();\n\t                this.includeWindow = null;\n\t            }\n\n\t            this.wrapper = null;\n\t            this.element = null;\n\t        }\n\t    });\n\n\t    function removeExpr(expressions, name) {\n\t        var result = [];\n\n\t        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n\t            if (expressions[idx].field !== name) {\n\t                result.push(expressions[idx]);\n\t            }\n\t        }\n\n\t        return result;\n\t    }\n\n\t    function findFilters(filter, member, operator) {\n\t        if (!filter) {\n\t            return [];\n\t        }\n\n\t        filter = filter.filters;\n\n\t        var idx = 0;\n\t        var result = [];\n\t        var length = filter.length;\n\t        var filterOperator;\n\n\t        for ( ; idx < length; idx++) {\n\t            filterOperator = filter[idx].operator;\n\n\t            if (((!operator && filterOperator !== "in") || (filterOperator === operator)) && filter[idx].field === member) {\n\t                result.push(filter[idx]);\n\t            }\n\t        }\n\n\t        return result;\n\t    }\n\n\t    function checkNodes(filter, member, nodes) {\n\t        var values, idx = 0, length = nodes.length;\n\t        filter = findFilters(filter, member, "in")[0];\n\n\t        if (!filter) {\n\t            for (; idx < length; idx++) {\n\t                nodes[idx].checked = true;\n\t            }\n\t        } else {\n\t            values = filter.value.split(",");\n\t            for (; idx < length; idx++) {\n\t                nodes[idx].checked = $.inArray(nodes[idx].uniqueName, values) >= 0;\n\t            }\n\t        }\n\t    }\n\n\t    function checkedNodeIds(nodes, checkedNodes) {\n\t        var idx, length = nodes.length;\n\n\t        for (idx = 0; idx < length; idx++) {\n\t            if (nodes[idx].checked && nodes[idx].level() !== 0) {\n\t                checkedNodes.push(nodes[idx].uniqueName);\n\t            }\n\n\t            if (nodes[idx].hasChildren) {\n\t                checkedNodeIds(nodes[idx].children.view(), checkedNodes);\n\t            }\n\t        }\n\t    }\n\n\t    var LABELMENUTEMPLATE =\n\t        \'<div class="k-filterable k-content" tabindex="-1" data-role="fieldmenu">\' +\n\t            \'<form class="k-filter-menu">\' +\n\t                \'<div class="k-filter-menu-container">\' +\n\t                    \'<div class="k-filter-help-text">#=messages.info#</div>\'+\n\t                    \'<select>\'+\n\t                        \'#for(var op in messages.operators){#\'+\n\t                            \'<option value="#=op#">#=messages.operators[op]#</option>\' +\n\t                        \'#}#\'+\n\t                    \'</select>\'+\n\t                    \'<input class="k-textbox" type="text" \' + ARIA_LABEL + \'="#=messages.filter#" title="#=messages.filter#" />\'+\n\t                    \'<div class="k-action-buttons">\'+\n\t                    \'<a class="k-button k-primary k-button-filter" href="\\\\#">#=messages.filter#</a>\'+\n\t                    \'<a class="k-button k-button-clear" href="\\\\#">#=messages.clear#</a>\'+\n\t                    \'</div>\'+\n\t                \'</div>\' +\n\t            \'</form>\' +\n\t        \'</div>\';\n\n\t    var MENUTEMPLATE = \'<ul class="k-pivot-fieldmenu">\'+\n\t                        \'# if (sortable) {#\'+\n\t                        \'<li class="k-item k-menu-item k-sort-asc">\'+\n\t                            \'<span class="k-link k-menu-link">\'+\n\t                                \'<span class="k-icon k-i-sort-asc-sm"></span>\'+\n\t                                \'${messages.sortAscending}\'+\n\t                            \'</span>\'+\n\t                        \'</li>\'+\n\t                        \'<li class="k-item k-menu-item k-sort-desc">\'+\n\t                            \'<span class="k-link k-menu-link">\'+\n\t                                \'<span class="k-icon k-i-sort-desc-sm"></span>\'+\n\t                                \'${messages.sortDescending}\'+\n\t                            \'</span>\'+\n\t                        \'</li>\'+\n\t                            \'# if (filterable) {#\'+\n\t                            \'<li class="k-separator"></li>\'+\n\t                            \'# } #\'+\n\t                        \'# } #\'+\n\t                        \'# if (filterable) {#\'+\n\t                        \'<li class="k-item k-menu-item k-include-item">\'+\n\t                            \'<span class="k-link k-menu-link">\'+\n\t                                \'<span class="k-icon k-i-filter"></span>\'+\n\t                                \'${messages.include}\'+\n\t                            \'</span>\'+\n\t                        \'</li>\'+\n\t                        \'<li class="k-separator"></li>\'+\n\t                        \'<li class="k-item k-menu-item \' + FILTER_ITEM + \'">\'+\n\t                            \'<span class="k-link k-menu-link">\'+\n\t                                \'<span class="k-icon k-i-filter"></span>\'+\n\t                                \'${messages.filterFields}\'+\n\t                            \'</span>\'+\n\t                            \'<ul>\'+\n\t                                \'<li>\' + LABELMENUTEMPLATE + \'</li>\'+\n\t                            \'</ul>\'+\n\t                        \'</li>\'+\n\t                        \'# } #\'+\n\t                    \'</ul>\';\n\n\t    var WINDOWTEMPLATE = \'<div class="k-popup-edit-form k-pivot-filter-window"><div class="k-edit-form-container">\'+\n\t                            \'<div class="k-treeview"></div>\'+\n\t                            \'<div class="k-edit-buttons k-state-default">\'+\n\t                            \'<a class="k-button k-primary k-button-ok" href="\\\\#">\'+\n\t                                \'${messages.ok}\'+\n\t                            \'</a>\'+\n\t                            \'<a class="k-button k-button-cancel" href="\\\\#">\'+\n\t                                \'${messages.cancel}\'+\n\t                            \'</a>\'+\n\t                        \'</div></div>\';\n\n\t    ui.plugin(PivotFieldMenu);\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 1312:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.pivotgrid */ "./node_modules/@progress/kendo-ui/js/kendo.pivotgrid.js");\n\n/***/ }),\n\n/***/ 1313:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.treeview */ "./node_modules/@progress/kendo-ui/js/kendo.treeview.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.pivot.fieldmenu.js?')}}]);