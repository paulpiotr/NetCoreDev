(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{"./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-command.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-command.js ***!
  \****************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(990);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define) {\n\t   !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(991)], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function() {\n\n\t(function($, undefined) {\n\n\tvar kendo = window.kendo,\n\t    Editor = kendo.ui.editor,\n\t    EditorUtils = Editor.EditorUtils,\n\t    RangeUtils = Editor.RangeUtils,\n\t    dom = Editor.Dom,\n\t    registerTool = EditorUtils.registerTool,\n\t    ToolTemplate = Editor.ToolTemplate,\n\t    Command = Editor.Command;\n\n\tvar tableFormatFinder = new Editor.BlockFormatFinder([{tags:["table"]}]);\n\tvar cellsFormatFinder = new Editor.BlockFormatFinder([{tags:["td","th"]}]);\n\tvar reUnit = /([a-z]+|%)$/i;\n\n\tvar COL = "col";\n\tvar ROW = "row";\n\tvar COLGROUP = "colgroup";\n\tvar SCOPE = "scope";\n\tvar COL_INDEX = "col-index";\n\tvar TH = "th";\n\tvar TD = "td";\n\tvar THEAD = "thead";\n\tvar HEADERS = "headers";\n\tvar TABLE = "table";\n\n\tvar TableWizardCommand = Command.extend({\n\t    exec: function() {\n\t        var cmd = this;\n\t        var editor = cmd.editor;\n\t        var range = cmd.range = cmd.lockRange();\n\t        var selectedTable = cmd._sourceTable = !cmd.options.insertNewTable ? cmd._selectedTable(range) : undefined;\n\t        var selectedCells = cmd._selectedTableCells = selectedTable ? cmd._selectedCells(range) : undefined;\n\t        var options = {\n\t            visible: false,\n\t            messages: editor.options.messages,\n\t            closeCallback: $.proxy(cmd.onDialogClose, cmd),\n\t            table: cmd.parseTable(selectedTable, selectedCells),\n\t            dialogOptions: editor.options.dialogOptions,\n\t            isRtl: kendo.support.isRtl(editor.wrapper)\n\t        };\n\n\t        var dialog = new Editor.TableWizardDialog(options);\n\t        dialog.open();\n\t    },\n\n\t    onDialogClose: function(data) {\n\t        var cmd = this;\n\t        cmd.releaseRange(cmd.range);\n\n\t        if (data) { //Ok button pressed\n\t            if (cmd.options.insertNewTable) {\n\t                cmd.insertTable(cmd.createNewTable(data));\n\t            } else {\n\t                cmd.updateTable(data, cmd._sourceTable, cmd._selectedTableCells);\n\t            }\n\t        }\n\t    },\n\t    releaseRange: function(range) {\n\t        var cmd = this;\n\t        var doc = cmd.editor.document;\n\t        dom.windowFromDocument(doc).focus();\n\t        Command.fn.releaseRange.call(cmd, range);\n\t    },\n\t    insertTable: function(table) {\n\t        var range = this.range;\n\n\t        range.insertNode(table);\n\t        range.collapse(true);\n\t        this.editor.selectRange(range);\n\n\t        this._ensureFocusableAfterTable(table);\n\t    },\n\t    _ensureFocusableAfterTable: function (table) {\n\t        var siblingNodes = $(table).parent().contents();\n\t        var lastSiblingIndex = siblingNodes.length - 1;\n\t        var lastSibling = siblingNodes.get(lastSiblingIndex);\n\n\t        while(lastSibling.nodeValue !== null && (lastSibling.nodeValue === " " || lastSibling.nodeValue === "")) {\n\t            lastSiblingIndex -= 1;\n\t            lastSibling = siblingNodes.get(lastSiblingIndex);\n\t        }\n\n\t        if(lastSibling === table) {\n\t            dom.insertAfter(dom.createEmptyNode(this.editor.document, "p"), table);\n\t        }\n\t    },\n\t    updateTable: function(data, table, selectedCells) {\n\t        var cmd = this;\n\t        var tableRows = $(table.rows).toArray();\n\t        var tableProp = data.tableProperties;\n\t        var rows = tableProp.rows;\n\t        var columns = tableProp.columns;\n\t        var tHead = table.tHead;\n\t        var last = function(collection) {\n\t            return collection[collection.length - 1];\n\t        };\n\n\t        //Leave only first selected cell\n\t        while (selectedCells.length > 1) {\n\t            selectedCells.pop();\n\t        }\n\n\t        var lastSelectedRow = selectedCells.length ? last(selectedCells).parentNode : last(tableRows);\n\t        var row, parent;\n\n\t        cmd._deleteTableRows(tableRows, tableRows.length - rows);\n\n\t        if (tableRows.length < rows) {\n\t            var rowIndex = $(lastSelectedRow).index();\n\t            var cellsLength = lastSelectedRow.cells.length;\n\t            var newRowsCount = rows - tableRows.length;\n\t            parent = lastSelectedRow.parentNode;\n\t            while (newRowsCount) {\n\t                row = parent.insertRow(rowIndex + 1);\n\t                cmd._insertCells(cellsLength - row.cells.length, row);\n\t                newRowsCount--;\n\t            }\n\t        }\n\n\t        if (tableRows[0].cells.length > columns) {\n\t            $(tableRows).each(function(i, row){\n\t                while(row.cells.length > columns) {\n\t                    row.deleteCell(-1);\n\t                }\n\t            });\n\t        }\n\n\t        if (tableRows[0].cells.length < columns) {\n\t            var cellIndex = $(last(selectedCells) || last(lastSelectedRow.cells)).index();\n\t            $(tableRows).each(function(i, row) {\n\t                cmd._insertCells(columns - row.cells.length, row, cellIndex + 1);\n\t            });\n\t        }\n\n\t        cmd._updateTableProperties(table, tableProp);\n\n\t        var cellProp = data.cellProperties;\n\t        if (selectedCells[0]) {\n\t            dom.attr(selectedCells[0], {id: cellProp.id || null});\n\t        }\n\t        (cellProp.selectAllCells ? $(tableRows).children() : $(selectedCells)).each(function(i, cell){\n\t            cmd._updateCellProperties(cell, cellProp);\n\t        });\n\n\t        cmd._updateCaption(table, tableProp);\n\t        dom.reMapTableColumns(table, COL_INDEX);\n\n\t        if(tHead) {\n\t            cmd._updateHeadersWithThead(table, data);\n\t        } else {\n\t            cmd._updateHeadersNoThead(table, data);\n\t        }\n\n\t        cmd._updateHeaderAssociates(table, tableProp);\n\t        dom.clearTableMappings(table, COL_INDEX);\n\t    },\n\t    _isHeadingRow: function(row) {\n\t        return dom.is(row.cells[0], TH) && dom.is(row.parentNode, THEAD);\n\t    },\n\t    _isHeadingCell: function(cell) {\n\t        return dom.is(cell, TH);\n\t    },\n\t    cellsWithHeadersAssociated: function(table) {\n\t        var cells = $(table.rows).children();\n\t        var headingIds = [];\n\t        var checkHeader = function(header){\n\t            return headingIds.indexOf(header) > -1;\n\t        };\n\n\t        cells.each(function(c, cell) {\n\t            if (cell.id && dom.is(cell, TH)) {\n\t                headingIds.push(cell.id);\n\t            }\n\t        });\n\n\t        var associatedCells = cells.filter(function(c, cell) {\n\t            var headersAttr = cell.getAttribute(HEADERS);\n\t            var headersArray;\n\n\t            if(headersAttr && !dom.is(cell, TH)) {\n\t                headersArray = headersAttr.split(" ");\n\n\t                if(headersArray && headersArray.length > 0) {\n\t                    return headersArray.some(checkHeader);\n\t                }\n\t            }\n\n\t            return false;\n\t        });\n\n\t        return !!associatedCells.length;\n\t    },\n\t    _insertCells: function(count, row, index) {\n\t        index = isNaN(index) ? -1 : index;\n\t        for (var i = 0, cell; i < count; i++) {\n\t            cell = row.insertCell(index);\n\t            cell.innerHTML = "&nbsp;";\n\t        }\n\t    },\n\t    _deleteTableRows: function(rows, count){\n\t        for (var i = 0, row, rowParent; i < count; i++) {\n\t            row = rows.pop();\n\t            rowParent = row.parentNode;\n\t            rowParent.removeChild(row);\n\t            if (!rowParent.rows.length) {\n\t                dom.remove(rowParent);\n\t            }\n\t        }\n\t    },\n\t    createNewTable: function(data) {\n\t        var cmd = this;\n\t        var doc = cmd.editor.document;\n\t        var tableProp = data.tableProperties;\n\t        var table = dom.create(doc, TABLE);\n\t        var rowIndex = 0;\n\t        var thead;\n\n\t        cmd._updateTableProperties(table, tableProp);\n\t        cmd._updateCaption(table, tableProp);\n\n\t        if(tableProp.headerRows && tableProp.headerRows > 0) {\n\t            thead = table.createTHead();\n\t            cmd._createTableRows(data, thead, rowIndex, true);\n\t            rowIndex += tableProp.headerRows;\n\t        }\n\n\t        var tbody = table.createTBody();\n\t        cmd._createTableRows(data, tbody, rowIndex, false);\n\n\t        dom.reMapTableColumns(table, COL_INDEX);\n\n\t        if (tableProp.cellsWithHeaders === "ids") {\n\t            dom.associateWithIds(table);\n\t        } else if(tableProp.cellsWithHeaders === "scope") {\n\t            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n\t        }\n\n\t        dom.clearTableMappings(table, COL_INDEX);\n\n\t        return table;\n\t    },\n\t    _createTableRows: function(data, container, initialIndex, headerRows) {\n\t        var cmd = this;\n\t        var tableProp = data.tableProperties;\n\t        var cellProp = data.cellProperties;\n\t        var columns = tableProp.columns;\n\t        var rows = headerRows ? tableProp.headerRows : tableProp.rows;\n\t        var cellPropToAll = cellProp.selectAllCells;\n\t        var headerColumns = tableProp.headerColumns;\n\n\t        for (var r = initialIndex, row; r < rows; r++) {\n\t            row = container.insertRow();\n\n\t            for (var c = 0, cell; c < columns; c++) {\n\t                if(headerRows || headerColumns > c) {\n\t                    cell = document.createElement(TH);\n\t                } else {\n\t                    cell = document.createElement(TD);\n\t                }\n\n\t                row.appendChild(cell);\n\t                cell.innerHTML = "&nbsp;";\n\t                if (r === 0 && c === 0 && cellProp.id) {\n\t                    cell.id = cellProp.id;\n\t                }\n\t                cmd._updateCellProperties(cell, (cellPropToAll || (r === 0 && c === 0)) ? cellProp : {});\n\t            }\n\t        }\n\t    },\n\t    _updateTableProperties: function(table, data){\n\t        var style = this._getStylesData(data);\n\t        dom.attr(table, {\n\t            cellSpacing: data.cellSpacing || null,\n\t            cellPadding: data.cellPadding || null,\n\t            className: data.className || null,\n\t            id: data.id || null,\n\t            summary: data.summary || null,\n\t            style: style || null\n\t        });\n\t        $(table).addClass("k-table");\n\t    },\n\t    _updateCellProperties: function(cell, data) {\n\t        var style = this._getStylesData(data);\n\t        style.padding = data.cellPadding || null;\n\t        style.margin = data.cellMargin || null;\n\t        dom.attr(cell, {\n\t            style: style || null,\n\t            className: data.className || null\n\t        });\n\t    },\n\t    _updateCaption: function(table, data){\n\t        if (table.caption && !data.captionContent) {\n\t            table.deleteCaption();\n\t        } else if (data.captionContent) {\n\t            var caption = table.createCaption();\n\t            caption.innerHTML = data.captionContent;\n\t            var alignment = this._getAlignmentData(data.captionAlignment);\n\t            dom.attr(caption, {\n\t                style: {\n\t                    textAlign: alignment.textAlign,\n\t                    verticalAlign: alignment.verticalAlign\n\t                }\n\t            });\n\t        }\n\t    },\n\t    _updateHeadersNoThead: function(table, data) {\n\t        var cmd = this;\n\t        var tableProp = data.tableProperties;\n\t        var rows = table.rows;\n\t        var row, cells, cell, i, j;\n\n\t        for(i = 0; i < rows.length; i++) {\n\t            row = rows[i];\n\t            cells = row.cells;\n\n\t            for(j = 0; j < cells.length; j++) {\n\t                cell = cells[j];\n\t                if(!cmd._isHeadingCell(cell) && (i < tableProp.headerRows || tableProp.headerColumns > cell.getAttribute(COL_INDEX))) {\n\t                    dom.changeTag(cell, TH, false);\n\t                } else if(cmd._isHeadingCell(cell) && i >= tableProp.headerRows && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n\t                    dom.changeTag(cell, TD, false);\n\t                }\n\t            }\n\t        }\n\t    },\n\t    _updateHeadersWithThead: function(table, data) {\n\t        var cmd = this;\n\t        var tableProp = data.tableProperties;\n\t        var thead = table.tHead;\n\t        var rowIndex = 0;\n\t        var tbody = table.tBodies[0];\n\t        var row, cell, i;\n\n\t        if (!tbody) {\n\t            tbody = table.createTBody();\n\t        }\n\n\t        if(tableProp.headerRows && tableProp.headerRows > 0) {\n\t            if (!thead) {\n\t                thead = table.createTHead();\n\t            }\n\n\t            while(thead.rows.length < tableProp.headerRows) {\n\t                thead.appendChild(tbody.rows[0]);\n\t            }\n\n\t            while(thead.rows.length > tableProp.headerRows) {\n\t                tbody.appendChild(thead.rows[0]);\n\t            }\n\n\t            cmd._swapToHeaderCells(thead);\n\t        } else if(thead) {\n\t            while(thead.rows.length > 0) {\n\t                tbody.appendChild(thead.rows[thead.rows.length - 1]);\n\t            }\n\n\t            table.deleteTHead();\n\t        }\n\n\t        while(tbody.rows.length > rowIndex) {\n\t            row = tbody.rows[rowIndex];\n\t            for(i = 0; i < row.cells.length; i++) {\n\t                cell = row.cells[i];\n\t                if (cmd._isHeadingCell(cell) && tableProp.headerColumns <= cell.getAttribute(COL_INDEX)) {\n\t                    dom.changeTag(cell, TD, false);\n\t                } else if(!cmd._isHeadingCell(cell) && tableProp.headerColumns > cell.getAttribute(COL_INDEX)) {\n\t                    dom.changeTag(cell, TH, false);\n\t                }\n\t            }\n\t            rowIndex += 1;\n\t        }\n\t    },\n\t    _updateHeaderAssociates: function(table, tableProp) {\n\t        var cmd = this;\n\n\t        if (tableProp.cellsWithHeaders === "ids") {\n\t            if(!cmd.cellsWithHeadersAssociated(table)) {\n\t                cmd._removeScopes(table);\n\t            }\n\t            dom.associateWithIds(table);\n\t        } else if (tableProp.cellsWithHeaders === "scope") {\n\t            if(cmd.cellsWithHeadersAssociated(table)) {\n\t                cmd._removeAssociates(table);\n\t            }\n\t            cmd._addScopes(table, tableProp.headerRows, tableProp.headerColumns);\n\t        } else {\n\t            if(cmd.cellsWithHeadersAssociated(table)) {\n\t                cmd._removeAssociates(table);\n\t            } else {\n\t                cmd._removeScopes(table);\n\t            }\n\t        }\n\t    },\n\t    _addScopes: function(table, headerRows, headerCols) {\n\t        var rows = table.rows;\n\t        var i, j, row, cell;\n\n\t        for(i = 0; i < rows.length; i++) {\n\t            row = rows[i];\n\n\t            for(j = 0; j < row.cells.length; j++) {\n\t                cell = row.cells[j];\n\n\t                if (i < headerRows) {\n\t                    cell.setAttribute(SCOPE, COL);\n\t                } else if(cell.getAttribute(COL_INDEX) < headerCols) {\n\t                    cell.setAttribute(SCOPE, ROW);\n\t                }\n\t            }\n\t        }\n\t    },\n\t    _removeScopes: function(table) {\n\t        $(table).find(TH).removeAttr(SCOPE);\n\t        $(table).find(COL).remove();\n\t        $(table).find(COLGROUP).remove();\n\t    },\n\t    _removeAssociates: function(table) {\n\t        $(table).find("th, td").removeAttr("id headers");\n\t    },\n\t    _swapToHeaderCells: function(thead) {\n\t        var tds = $(thead).find("td");\n\t        var swapCell = function(index, cell) {\n\t            dom.changeTag(cell, TH, false);\n\t        };\n\t        tds.each(swapCell);\n\t    },\n\t    _getStylesData: function(data) {\n\t        var alignment = this._getAlignmentData(data.alignment);\n\t        var whiteSpace = "wrapText" in data ? (data.wrapText ? "" : "nowrap") : null;\n\n\t        return {\n\t            width: data.width ? data.width + data.widthUnit : null,\n\t            height: data.height ? data.height + data.heightUnit : null,\n\t            textAlign: alignment.textAlign,\n\t            verticalAlign: alignment.verticalAlign,\n\t            backgroundColor: data.bgColor || "",\n\t            borderWidth: data.borderWidth,\n\t            borderStyle: data.borderStyle,\n\t            borderColor: data.borderColor || "",\n\t            borderCollapse: data.collapseBorders ? "collapse" : null,\n\t            whiteSpace: whiteSpace\n\t        };\n\t    },\n\t    _getAlignmentData: function(alignment) {\n\t        var textAlign = "";\n\t        var verticalAlign = textAlign;\n\n\t        if (alignment) {\n\t            if (alignment.indexOf(" ") != -1) {\n\t                var align = alignment.split(" ");\n\t                textAlign = align[0];\n\t                verticalAlign = align[1];\n\t            } else {\n\t                textAlign = alignment;\n\t            }\n\t        }\n\t        return {textAlign: textAlign, verticalAlign: verticalAlign};\n\t    },\n\t    parseTable: function(table, selectedCells) {\n\t        if (!table) {\n\t            return { tableProperties: {}, selectedCells: [] };\n\t        }\n\n\t        var cmd = this;\n\t        var tStyle = table.style;\n\t        var rows = table.rows;\n\t        var caption = table.caption;\n\t        var captionClone = $(caption ? caption.cloneNode(true) : undefined);\n\t        captionClone.find(".k-marker").remove();\n\n\t        var cssClass = table.className;\n\t        cssClass = cssClass.replace(/^k-table\\s|\\sk-table$/, "");\n\t        cssClass = cssClass.replace(/\\sk-table\\s/, " ");\n\t        cssClass = cssClass.replace(/^k-table$/, "");\n\n\t        var tableAlignment = cmd._getAlignment(table, true);\n\t        var captionAlignment = caption ? cmd._getAlignment(caption) : undefined;\n\t        var numberOfHeaderRows = dom._getNumberOfHeaderRows(table);\n\n\t        var cellsWithHeaders;\n\t        if(cmd.cellsWithHeadersAssociated(table)) {\n\t            cellsWithHeaders = "ids";\n\t        } else if ($(table).find("th[scope]").length > 0) {\n\t            cellsWithHeaders = "scope";\n\t        } else {\n\t            cellsWithHeaders = "none";\n\t        }\n\n\t        dom.reMapTableColumns(table, COL_INDEX);\n\t        var numberOfColumns = dom._getNumberOfColumns(table);\n\t        var numberOfHeaderColumns = dom._getNumberOfHeaderColumns(table, numberOfHeaderRows);\n\t        dom.clearTableMappings(table, COL_INDEX);\n\n\t        var tableJson = {\n\t            tableProperties: {\n\t                width: tStyle.width || table.width ? parseFloat(tStyle.width || table.width) : null,\n\t                height: tStyle.height || table.height ? parseFloat(tStyle.height || table.height) : null,\n\t                columns: numberOfColumns,\n\t                rows: rows.length,\n\t                widthUnit: cmd._getUnit(tStyle.width),\n\t                heightUnit: cmd._getUnit(tStyle.height),\n\t                cellSpacing: table.cellSpacing,\n\t                cellPadding: table.cellPadding,\n\t                alignment: tableAlignment.textAlign,\n\t                bgColor: tStyle.backgroundColor || table.bgColor,\n\t                className: cssClass,\n\t                id: table.id,\n\t                borderWidth: tStyle.borderWidth || table.border,\n\t                borderColor: tStyle.borderColor,\n\t                borderStyle: tStyle.borderStyle || "",\n\t                collapseBorders: !!tStyle.borderCollapse,\n\t                summary: table.summary,\n\t                captionContent: caption ? captionClone.html() : "",\n\t                captionAlignment: caption && captionAlignment.textAlign ? captionAlignment.textAlign + " " + captionAlignment.verticalAlign : "",\n\t                headerRows: numberOfHeaderRows,\n\t                headerColumns: numberOfHeaderColumns,\n\t                cellsWithHeaders: cellsWithHeaders\n\t            },\n\t            selectedCells: []\n\t        };\n\n\t        tableJson.rows = cmd.parseTableRows(rows, selectedCells, tableJson);\n\n\t        return tableJson;\n\t    },\n\t    parseTableRows: function(rows, selectedCells, tableJson) {\n\t        var cmd = this;\n\t        var data = [], row, rowData, cells, cell, cellData;\n\t        for (var i = 0; i < rows.length; i++) {\n\t            row = rows[i];\n\t            rowData = {cells: []};\n\t            cells = row.cells;\n\t            data.push(rowData);\n\t            for (var j = 0; j < cells.length; j++) {\n\t                cell = cells[j];\n\t                cellData = cmd.parseCell(cell);\n\t                if ($.inArray(cell, selectedCells) != -1) {\n\t                    tableJson.selectedCells.push(cellData);\n\t                }\n\t                rowData.cells.push(cellData);\n\t            }\n\t        }\n\t        return data;\n\t    },\n\t    parseCell: function(cell) {\n\t        var cmd = this;\n\t        var cStyle = cell.style;\n\t        var alignment = cmd._getAlignment(cell);\n\t        alignment = alignment.textAlign ? alignment.textAlign + " " + alignment.verticalAlign : "";\n\n\t        var data = {\n\t            width: cStyle.width || cell.width ? parseFloat(cStyle.width || cell.width) : null,\n\t            height: cStyle.height || cell.height ? parseFloat(cStyle.height || cell.height) : null,\n\t            widthUnit: cmd._getUnit(cStyle.width),\n\t            heightUnit: cmd._getUnit(cStyle.height),\n\t            cellMargin: cStyle.margin,\n\t            cellPadding: cStyle.padding,\n\t            alignment: alignment,\n\t            bgColor: cStyle.backgroundColor || cell.bgColor,\n\t            className: cell.className,\n\t            id: cell.id,\n\t            borderWidth: cStyle.borderWidth || cell.border,\n\t            borderColor: cStyle.borderColor,\n\t            borderStyle: cStyle.borderStyle,\n\t            wrapText: cStyle.whiteSpace != "nowrap"\n\t        };\n\n\t        return data;\n\t    },\n\t    _getAlignment: function(element, horizontalOnly) {\n\t        var style = element.style;\n\t        var hAlign = style.textAlign || element.align || "";\n\t        if (horizontalOnly) {\n\t            return {textAlign: hAlign};\n\t        }\n\t        var vAlign = style.verticalAlign || element.vAlign || "";\n\t        if(hAlign && vAlign) {\n\t            return {textAlign: hAlign, verticalAlign: vAlign};\n\t        }\n\t        if(!hAlign && vAlign) {\n\t            return {textAlign: "left", verticalAlign: vAlign};\n\t        }\n\t        if(hAlign && !vAlign) {\n\t            return {textAlign: hAlign, verticalAlign: "top"};\n\t        }\n\t        return {textAlign: "", verticalAlign: ""};\n\t    },\n\t    _getUnit: function(value) {\n\t        var unit = (value || "").match(reUnit);\n\t        return unit ? unit[0] : "px";\n\t    },\n\t    _selectedTable: function(range) {\n\t        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\t        return tableFormatFinder.findSuitable(nodes)[0];\n\t    },\n\t    _selectedCells: function(range) {\n\t        var nodes = dom.filterBy(RangeUtils.nodes(range), dom.htmlIndentSpace, true);\n\t        return cellsFormatFinder.findSuitable(nodes);\n\t    }\n\t});\n\n\tvar TableWizardTool = Editor.Tool.extend({\n\t    command: function (options) {\n\t        options.insertNewTable = this.options.insertNewTable;\n\t        return new TableWizardCommand(options);\n\t    }\n\t});\n\n\tvar TableWizardEditTool = TableWizardTool.extend({\n\t    update: function(ui, nodes) {\n\t        var isFormatted = !tableFormatFinder.isFormatted(nodes);\n\n\t        if (isFormatted === true) {\n\t            ui.parent().addClass("k-hidden k-state-disabled");\n\t            ui.attr("disabled", "disabled");\n\t            ui.addClass("k-state-disabled");\n\t        } else {\n\t            ui.parent().removeClass("k-hidden k-state-disabled");\n\t            ui.removeAttr("disabled");\n\t            ui.removeClass("k-state-disabled");\n\t        }\n\t    }\n\t});\n\n\tkendo.ui.editor.TableWizardTool = TableWizardTool;\n\tkendo.ui.editor.TableWizardCommand = TableWizardCommand;\n\n\tregisterTool("tableWizard", new TableWizardEditTool({ command: TableWizardCommand, insertNewTable: false, template: new ToolTemplate({template: EditorUtils.buttonTemplate, title: "Table Wizard"})}));\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./../plugins/tables */ "./node_modules/@progress/kendo-ui/js/editor/plugins/tables.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-command.js?')},"./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-dialog.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-dialog.js ***!
  \***************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(992);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define) {\n\t   !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(993), __webpack_require__(994)], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function() {\n\n\t(function($, undefined) {\n\n\tvar kendo = window.kendo,\n\t    numericTextBoxSettings = { format: "0", min: 0 },\n\t    units = ["px", "em"],\n\t    borderStyles = ["solid", "dotted", "dashed", "double", "groove", "ridge", "inset", "outset", "initial", "inherit", "none", "hidden"];\n\n\tvar DEFAULT_NUMBER_OF_COLS_AND_ROWS = 4;\n\n\tvar tableAlignmentDropDownSettings = {\n\t    dataSource: [{\n\t        className: "k-icon k-i-table-align-middle-left",\n\t        value: "left"\n\t    }, {\n\t        className: "k-icon k-i-table-align-middle-center",\n\t        value: "center"\n\t    }, {\n\t        className: "k-icon k-i-table-align-middle-right",\n\t        value: "right"\n\t    }, {\n\t        className: "k-icon k-i-align-remove",\n\t        value: ""\n\t    }],\n\t    dataTextField: "className",\n\t    dataValueField: "value",\n\t    template: "<span class=\'#: className #\' title=\'#: tooltip #\'></span>",\n\t    valueTemplate: "<span class=\'k-align-group #: className #\' title=\'#: tooltip #\'></span>"\n\t};\n\n\tvar cellAlignmentDropDownSettings = {\n\t    dataSource: [{\n\t        className: "k-icon k-i-table-align-top-left",\n\t        value: "left top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-top-center",\n\t        value: "center top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-top-right",\n\t        value: "right top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-middle-left",\n\t        value: "left middle"\n\t    }, {\n\t        className: "k-icon k-i-table-align-middle-center",\n\t        value: "center middle"\n\t    }, {\n\t        className: "k-icon k-i-table-align-middle-right",\n\t        value: "right middle"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-left",\n\t        value: "left bottom"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-center",\n\t        value: "center bottom"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-right",\n\t        value: "right bottom"\n\t    }, {\n\t        className: "k-icon k-i-align-remove",\n\t        value: ""\n\t    }],\n\t    dataTextField: "className",\n\t    dataValueField: "value",\n\t    template: "<span class=\'#: className #\' title=\'#: tooltip #\'></span>",\n\t    valueTemplate: "<span class=\'k-align-group #: className #\' title=\'#: tooltip #\'></span>"\n\t};\n\n\tvar accessibilityAlignmentDropDownSettings = {\n\t    dataSource: [{\n\t        className: "k-icon k-i-table-align-top-left",\n\t        value: "left top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-top-center",\n\t        value: "center top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-top-right",\n\t        value: "right top"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-left",\n\t        value: "left bottom"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-center",\n\t        value: "center bottom"\n\t    }, {\n\t        className: "k-icon k-i-table-align-bottom-right",\n\t        value: "right bottom"\n\t    }, {\n\t        className: "k-icon k-i-align-remove",\n\t        value: ""\n\t    }],\n\t    dataTextField: "className",\n\t    dataValueField: "value",\n\t    template: "<span class=\'#: className #\' title=\'#: tooltip #\'></span>",\n\t    valueTemplate: "<span class=\'k-align-group #: className #\' title=\'#: tooltip #\'></span>"\n\t};\n\n\tvar dialogTemplate =\n\t    \'<div class="k-editor-dialog k-editor-table-wizard-dialog k-action-window k-popup-edit-form">\' +\n\t        \'<div class="k-edit-form-container">\' +\n\t            \'<div id="k-table-wizard-tabs" class="k-root-tabs">\' +\n\t                \'<ul>\' +\n\t                    \'<li class="k-state-active">#= messages.tableTab #</li>\' +\n\t                    \'<li>#= messages.cellTab #</li>\' +\n\t                    \'<li>#= messages.accessibilityTab #</li>\' +\n\t                \'</ul>\' +\n\t                \'<div id="k-table-properties">\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-width">#= messages.width #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-width" />\' +\n\t                        \'<input id="k-editor-table-width-type" aria-label="#= messages.units #" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-height">#= messages.height #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-height" />\' +\n\t                        \'<input id="k-editor-table-height-type" aria-label="#= messages.units #" />\' +\n\t                    \'</div>\' +\n\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-columns">#= messages.columns #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-columns" />\' +\n\t                    \'</div>\' +\n\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-rows">#= messages.rows #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-rows" />\' +\n\t                    \'</div>\' +\n\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-cell-spacing">#= messages.cellSpacing #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-cell-spacing" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-cell-padding">#= messages.cellPadding #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-cell-padding" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-alignment">#= messages.alignment #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-table-alignment" class="k-align" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-bg">#= messages.background #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-table-bg" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-css-class">#= messages.cssClass #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-css-class" class="k-textbox" type="text" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-id">#= messages.id #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-id" class="k-textbox" type="text" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-border-width">#= messages.border #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-border-width" />\' +\n\t                        \'<input id="k-editor-border-color" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-border-style">#= messages.borderStyle #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-border-style" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">&nbsp;</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-collapse-borders" type="checkbox" class="k-checkbox" />\' +\n\t                        \'<label for="k-editor-collapse-borders" class="k-checkbox-label">#= messages.collapseBorders #</label>\' +\n\t                    \'</div>\' +\n\t                \'</div>\' +\n\n\t                \'<div id="k-cell-properties">\' +\n\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-selectAllCells" type="checkbox" class="k-checkbox" />\' +\n\t                        \'<label for="k-editor-selectAllCells" class="k-checkbox-label">#= messages.selectAllCells #</label>\' +\n\t                    \'</div>\' +\n\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-width">#= messages.width #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-cell-width" />\' +\n\t                        \'<input id="k-editor-cell-width-type" aria-label="#= messages.units #" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-height">#= messages.height #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-cell-height" />\' +\n\t                        \'<input id="k-editor-cell-height-type" aria-label="#= messages.units #" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-cell-margin">#= messages.cellMargin #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-cell-margin" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-cells-padding">#= messages.cellPadding #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-cells-padding" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-alignment">#= messages.alignment #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-cell-alignment" class="k-align" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-bg">#= messages.background #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-cell-bg" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-css-class">#= messages.cssClass #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-cell-css-class" class="k-textbox" type="text" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-id">#= messages.id #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-cell-id" class="k-textbox" type="text" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-border-width">#= messages.border #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-cell-border-width" />\' +\n\t                        \'<input id="k-editor-cell-border-color" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cell-border-style">#= messages.borderStyle #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-cell-border-style" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">&nbsp;</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-wrap-text" type="checkbox" class="k-checkbox" />\' +\n\t                        \'<label for="k-editor-wrap-text" class="k-checkbox-label">#= messages.wrapText #</label>\' +\n\t                    \'</div>\' +\n\t                \'</div>\' +\n\n\t                \'<div id="k-accessibility-properties">\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-header-rows">#= messages.headerRows #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-header-rows" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-header-columns">#= messages.headerColumns #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input type="numeric" id="k-editor-table-header-columns" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-table-caption">#= messages.caption #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-table-caption" class="k-textbox" type="text"/>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-accessibility-alignment">#= messages.alignment #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<input id="k-editor-accessibility-alignment" class="k-align" />\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-accessibility-summary">#= messages.summary #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<textarea id="k-editor-accessibility-summary" rows="5" class="k-textbox k-editor-accessibility-summary" placeholder="#= messages.tableSummaryPlaceholder #"></textarea>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-label">\' +\n\t                        \'<label for="k-editor-cells-headers">#= messages.associateCellsWithHeaders #</label>\' +\n\t                    \'</div>\' +\n\t                    \'<div class="k-edit-field">\' +\n\t                        \'<select id="k-editor-cells-headers">\' +\n\t                            \'<option value="none">#= messages.associateNone #</option>\' +\n\t                            \'<option value="scope">#= messages.associateScope #</option>\' +\n\t                            \'<option value="ids">#= messages.associateIds #</option>\' +\n\t                        \'</select>\' +\n\t                    \'</div>\' +\n\t                \'</div>\' +\n\t                \'</div>\' +\n\t                \'<div class="k-edit-buttons k-state-default">\' +\n\t                \'<button class="k-button k-primary k-dialog-ok">#= messages.dialogOk #</button>\' +\n\t                \'<button class="k-button k-dialog-close">#= messages.dialogCancel #</button>\' +\n\t            \'</div>\' +\n\t        \'</div>\' +\n\t    \'</div>\';\n\n\tvar TableWizardDialog = kendo.Class.extend({\n\t    init: function(options) {\n\t        this.options = options;\n\t    },\n\t    open: function() {\n\t        var that = this,\n\t            options = that.options,\n\t            dialogOptions = options.dialogOptions,\n\t            tableData = options.table,\n\t            dialog,\n\t            messages = options.messages,\n\t            isIE = kendo.support.browser.msie;\n\n\t        function close(e) {\n\t            e.preventDefault();\n\t            that.destroy();\n\t            dialog.destroy();\n\t        }\n\n\t        function okHandler(e) {\n\t            that.collectDialogValues(tableData);\n\n\t            close(e);\n\n\t            if (that.change) {\n\t                that.change();\n\t            }\n\n\t            options.closeCallback(tableData);\n\t        }\n\n\t        function closeHandler(e) {\n\t            close(e);\n\t            options.closeCallback();\n\t        }\n\n\t        dialogOptions.close = closeHandler;\n\t        dialogOptions.title = messages.tableWizard;\n\t        dialogOptions.visible = options.visible;\n\n\t        dialog = $(that._dialogTemplate(messages)).appendTo(document.body)\n\t            .kendoWindow(dialogOptions)\n\t            .closest(".k-window").toggleClass("k-rtl", options.isRtl).end()\n\t            .find(".k-dialog-ok").click(okHandler).end()\n\t            .find(".k-dialog-close").click(closeHandler).end()\n\t            .data("kendoWindow");\n\n\t        var element = dialog.element;\n\t        that._initTabStripComponent(element);\n\t        that._initTableViewComponents(element, tableData);\n\t        that._initCellViewComponents(element, tableData);\n\t        that._initAccessibilityViewComponents(element, tableData);\n\n\t        dialog.center();\n\t        dialog.open();\n\n\t        if(isIE) {\n\t            var dialogHeight = element.closest(".k-window").height();\n\t            element.css("max-height", dialogHeight);\n\t        }\n\t    },\n\n\t    _initTabStripComponent: function(element){\n\t        var components = this.components = {};\n\t        components.tabStrip = element.find("#k-table-wizard-tabs").kendoTabStrip({\n\t            animation: false\n\t        }).data("kendoTabStrip");\n\t    },\n\n\t    collectDialogValues: function() {\n\t        var that = this;\n\t        var data = that.options.table;\n\t        that._collectTableViewValues(data);\n\t        that._collectCellViewValues(data);\n\t        that._collectAccessibilityViewValues(data);\n\t    },\n\n\t    _collectTableViewValues: function(tableData) {\n\t        var tableView = this.components.tableView;\n\t        var tableProperties = tableData.tableProperties;\n\t        tableProperties.width = tableView.width.value();\n\t        tableProperties.widthUnit = tableView.widthUnit.value();\n\t        tableProperties.height = tableView.height.value();\n\t        tableProperties.columns = tableView.columns.value();\n\t        tableProperties.rows = tableView.rows.value();\n\t        tableProperties.heightUnit = tableView.heightUnit.value();\n\t        tableProperties.cellSpacing = tableView.cellSpacing.value();\n\t        tableProperties.cellPadding = tableView.cellPadding.value();\n\t        tableProperties.alignment = tableView.alignment.value();\n\t        tableProperties.bgColor = tableView.bgColor.value();\n\t        tableProperties.className = tableView.className.value;\n\t        tableProperties.id = tableView.id.value;\n\t        tableProperties.borderWidth = tableView.borderWidth.value();\n\t        tableProperties.borderColor = tableView.borderColor.value();\n\t        tableProperties.borderStyle = tableView.borderStyle.value();\n\t        tableProperties.collapseBorders = tableView.collapseBorders.checked;\n\t    },\n\n\t    _collectCellViewValues: function(table) {\n\t        var cellData = table.cellProperties = {};\n\t        var cellView = this.components.cellView;\n\n\t        cellData.selectAllCells = cellView.selectAllCells.checked;\n\t        cellData.width = cellView.width.value();\n\t        cellData.widthUnit = cellView.widthUnit.value();\n\t        cellData.height = cellView.height.value();\n\t        cellData.heightUnit = cellView.heightUnit.value();\n\t        cellData.cellMargin = cellView.cellMargin.value();\n\t        cellData.cellPadding = cellView.cellPadding.value();\n\t        cellData.alignment = cellView.alignment.value();\n\t        cellData.bgColor = cellView.bgColor.value();\n\t        cellData.className = cellView.className.value;\n\t        cellData.id = cellView.id.value;\n\t        cellData.borderWidth = cellView.borderWidth.value();\n\t        cellData.borderColor = cellView.borderColor.value();\n\t        cellData.borderStyle = cellView.borderStyle.value();\n\t        cellData.wrapText = cellView.wrapText.checked;\n\n\t        if (!cellData.width) {\n\t            cellData.selectAllCells = true;\n\t            cellData.width = 100 / table.tableProperties.columns;\n\t            cellData.widthUnit = "%";\n\t        }\n\t    },\n\n\t   _collectAccessibilityViewValues: function(table) {\n\t        var tableProperties = table.tableProperties;\n\t        var accessibilityView = this.components.accessibilityView;\n\t        tableProperties.captionContent = accessibilityView.captionContent.value;\n\t        tableProperties.captionAlignment = accessibilityView.captionAlignment.value();\n\t        tableProperties.summary = accessibilityView.summary.value;\n\t        tableProperties.cellsWithHeaders = accessibilityView.cellsWithHeaders.value();\n\n\t        tableProperties.headerRows = accessibilityView.headerRows.value();\n\t        tableProperties.headerColumns = accessibilityView.headerColumns.value();\n\t    },\n\t    _addUnit: function(units, value){\n\t        if (value && $.inArray(value, units) == -1) {\n\t            units.push(value);\n\t        }\n\t    },\n\t    _initTableViewComponents: function(element, table) {\n\t        var that = this;\n\t        var components = that.components;\n\t        var tableView = components.tableView = {};\n\t        var tableProperties = table.tableProperties = table.tableProperties || {};\n\t        tableProperties.borderStyle = tableProperties.borderStyle || "";\n\n\t        var onColumnsNumberChange = function(args) {\n\t            var accessibilityView = that.components.accessibilityView;\n\t            var headerColumnsNumeric = accessibilityView.headerColumns;\n\t            var currentNumberOfColumnsHeaders = headerColumnsNumeric.value();\n\t            var numberOfColumns = args.sender.value();\n\n\t            if(numberOfColumns < currentNumberOfColumnsHeaders) {\n\t                headerColumnsNumeric.value(numberOfColumns);\n\t            }\n\n\t            headerColumnsNumeric.max(numberOfColumns);\n\t        };\n\n\t        var onRowsNumberChange = function(args) {\n\t            var accessibilityView = that.components.accessibilityView;\n\t            var headerRowsNumeric = accessibilityView.headerRows;\n\t            var currentNumberOfRowHeaders = headerRowsNumeric.value();\n\t            var numberOfRows = args.sender.value();\n\n\t            if(numberOfRows < currentNumberOfRowHeaders) {\n\t                headerRowsNumeric.value(numberOfRows);\n\t            }\n\n\t            headerRowsNumeric.max(numberOfRows);\n\t        };\n\n\t        that._addUnit(units, tableProperties.widthUnit);\n\t        that._addUnit(units, tableProperties.heightUnit);\n\n\t        that._initNumericTextbox(element.find("#k-editor-table-width"), "width", tableProperties, tableView);\n\t        that._initNumericTextbox(element.find("#k-editor-table-height"), "height", tableProperties, tableView);\n\t        that._initNumericTextbox(element.find("#k-editor-table-columns"), "columns", tableProperties, tableView, {min: 1, value: DEFAULT_NUMBER_OF_COLS_AND_ROWS, change: onColumnsNumberChange});\n\t        that._initNumericTextbox(element.find("#k-editor-table-rows"), "rows", tableProperties, tableView, {min: 1, value: DEFAULT_NUMBER_OF_COLS_AND_ROWS, change: onRowsNumberChange});\n\t        that._initDropDownList(element.find("#k-editor-table-width-type"), "widthUnit", tableProperties, tableView, units);\n\t        that._initDropDownList(element.find("#k-editor-table-height-type"), "heightUnit", tableProperties, tableView, units);\n\t        that._initNumericTextbox(element.find("#k-editor-table-cell-spacing"), "cellSpacing", tableProperties, tableView);\n\t        that._initNumericTextbox(element.find("#k-editor-table-cell-padding"), "cellPadding", tableProperties, tableView);\n\t        that._initTableAlignmentDropDown(element.find("#k-editor-table-alignment"), tableProperties);\n\t        that._initColorPicker(element.find("#k-editor-table-bg"), "bgColor", tableProperties, tableView);\n\t        that._initInput(element.find("#k-editor-css-class"), "className", tableProperties, tableView);\n\t        that._initInput(element.find("#k-editor-id"), "id", tableProperties, tableView);\n\t        that._initNumericTextbox(element.find("#k-editor-border-width"), "borderWidth", tableProperties, tableView);\n\t        that._initColorPicker(element.find("#k-editor-border-color"), "borderColor", tableProperties, tableView);\n\t        that._initDropDownList(element.find("#k-editor-border-style"), "borderStyle", tableProperties, tableView, borderStyles);\n\t        that._initCheckbox(element.find("#k-editor-collapse-borders"), "collapseBorders", tableProperties, tableView);\n\t    },\n\n\t    _initCellViewComponents: function(element, table) {\n\t        var components = this.components;\n\t        var cellView = components.cellView = {};\n\t        table.selectedCells = table.selectedCells = table.selectedCells || [];\n\t        var cellProperties = table.selectedCells[0] || {borderStyle: "", wrapText: true};\n\t        this._addUnit(units, cellProperties.widthUnit);\n\t        this._addUnit(units, cellProperties.heightUnit);\n\n\t        this._initCheckbox(element.find("#k-editor-selectAllCells"), "selectAllCells", table.tableProperties, cellView);\n\t        this._initNumericTextbox(element.find("#k-editor-cell-width"), "width", cellProperties, cellView);\n\t        this._initNumericTextbox(element.find("#k-editor-cell-height"), "height", cellProperties, cellView);\n\t        this._initDropDownList(element.find("#k-editor-cell-width-type"), "widthUnit", cellProperties, cellView, units);\n\t        this._initDropDownList(element.find("#k-editor-cell-height-type"), "heightUnit", cellProperties, cellView, units);\n\t        this._initNumericTextbox(element.find("#k-editor-table-cell-margin"), "cellMargin", cellProperties, cellView);\n\t        this._initNumericTextbox(element.find("#k-editor-table-cells-padding"), "cellPadding", cellProperties, cellView);\n\t        this._initCellAlignmentDropDown(element.find("#k-editor-cell-alignment"), cellProperties);\n\t        this._initColorPicker(element.find("#k-editor-cell-bg"), "bgColor", cellProperties, cellView);\n\t        this._initInput(element.find("#k-editor-cell-css-class"), "className", cellProperties, cellView);\n\t        this._initInput(element.find("#k-editor-cell-id"), "id", cellProperties, cellView);\n\t        this._initNumericTextbox(element.find("#k-editor-cell-border-width"), "borderWidth", cellProperties, cellView);\n\t        this._initColorPicker(element.find("#k-editor-cell-border-color"), "borderColor", cellProperties, cellView);\n\t        this._initDropDownList(element.find("#k-editor-cell-border-style"), "borderStyle", cellProperties, cellView, borderStyles);\n\t        this._initCheckbox(element.find("#k-editor-wrap-text"), "wrapText", cellProperties, cellView);\n\t    },\n\n\t    _initAccessibilityViewComponents: function(element, table) {\n\t        var components = this.components;\n\t        var accessibilityView = components.accessibilityView = {};\n\t        var tableProperties = table.tableProperties;\n\n\t        this._initInput(element.find("#k-editor-table-caption"), "captionContent", tableProperties, accessibilityView);\n\t        this._initAccessibilityAlignmentDropDown(element.find("#k-editor-accessibility-alignment"), tableProperties);\n\t        this._initInput(element.find("#k-editor-accessibility-summary"), "summary", tableProperties, accessibilityView);\n\t        this._initAssociationDropDown(element.find("#k-editor-cells-headers"), "cellsWithHeaders", { valuePrimitive: true }, tableProperties, accessibilityView);\n\t        this._initNumericTextbox(element.find("#k-editor-table-header-rows"), "headerRows", tableProperties, accessibilityView, { max: tableProperties.rows || DEFAULT_NUMBER_OF_COLS_AND_ROWS });\n\t        this._initNumericTextbox(element.find("#k-editor-table-header-columns"), "headerColumns", tableProperties, accessibilityView, { max: tableProperties.columns || DEFAULT_NUMBER_OF_COLS_AND_ROWS });\n\t    },\n\n\t    _initNumericTextbox: function(element, property, data, storage, settings) {\n\t        var component = storage[property] = element.kendoNumericTextBox(\n\t                settings ? $.extend({}, numericTextBoxSettings, settings) : numericTextBoxSettings\n\t            ).data("kendoNumericTextBox");\n\t        if (property in data) {\n\t            component.value(parseInt(data[property], 10));\n\t        }\n\t    },\n\n\t    _initDropDownList: function(element, property, data, storage, dataSource) {\n\t        var component = storage[property] = element.kendoDropDownList({\n\t            dataSource: dataSource\n\t        }).data("kendoDropDownList");\n\t        this._setComponentValue(component, data, property);\n\t    },\n\n\t    _initTableAlignmentDropDown: function (element, data) {\n\t        var messages = this.options.messages;\n\t        var tableView =  this.components.tableView;\n\t        var dataSource = tableAlignmentDropDownSettings.dataSource;\n\t        dataSource[0].tooltip = messages.alignLeft;\n\t        dataSource[1].tooltip = messages.alignCenter;\n\t        dataSource[2].tooltip = messages.alignRight;\n\t        dataSource[3].tooltip = messages.alignRemove;\n\n\t        this._initAlignmentDropDown(element, tableAlignmentDropDownSettings, "alignment", data, tableView);\n\t    },\n\n\t    _initCellAlignmentDropDown: function (element, data) {\n\t        var messages = this.options.messages;\n\t        var cellView =  this.components.cellView;\n\t        var dataSource = cellAlignmentDropDownSettings.dataSource;\n\t        dataSource[0].tooltip = messages.alignLeftTop;\n\t        dataSource[1].tooltip = messages.alignCenterTop;\n\t        dataSource[2].tooltip = messages.alignRightTop;\n\t        dataSource[3].tooltip = messages.alignLeftMiddle;\n\t        dataSource[4].tooltip = messages.alignCenterMiddle;\n\t        dataSource[5].tooltip = messages.alignRightMiddle;\n\t        dataSource[6].tooltip = messages.alignLeftBottom;\n\t        dataSource[7].tooltip = messages.alignCenterBottom;\n\t        dataSource[8].tooltip = messages.alignRightBottom;\n\t        dataSource[9].tooltip = messages.alignRemove;\n\n\t        this._initAlignmentDropDown(element, cellAlignmentDropDownSettings, "alignment", data, cellView);\n\t    },\n\n\t    _initAccessibilityAlignmentDropDown: function (element, data) {\n\t        var messages = this.options.messages;\n\t        var accessibilityView =  this.components.accessibilityView;\n\t        var dataSource = accessibilityAlignmentDropDownSettings.dataSource;\n\t        dataSource[0].tooltip = messages.alignLeftTop;\n\t        dataSource[1].tooltip = messages.alignCenterTop;\n\t        dataSource[2].tooltip = messages.alignRightTop;\n\t        dataSource[3].tooltip = messages.alignLeftBottom;\n\t        dataSource[4].tooltip = messages.alignCenterBottom;\n\t        dataSource[5].tooltip = messages.alignRightBottom;\n\t        dataSource[6].tooltip = messages.alignRemove;\n\n\t        this._initAlignmentDropDown(element, accessibilityAlignmentDropDownSettings, "captionAlignment", data, accessibilityView);\n\t    },\n\t    _initAlignmentDropDown: function(element, settings, name, data, storage) {\n\t        var component = storage[name] =\n\t            element.kendoDropDownList(settings).data("kendoDropDownList");\n\n\t        component.list.addClass(\'k-align\').css(\'width\', \'110px\');\n\t        this._setComponentValue(component, data, name);\n\t    },\n\t    _initAssociationDropDown: function(element, name, settings, data, storage) {\n\t        var component = storage[name] =\n\t            element.kendoDropDownList(settings).data("kendoDropDownList");\n\n\t        this._setComponentValue(component, data, name);\n\t    },\n\t    _setComponentValue: function(component, data, property){\n\t        if (property in data) {\n\t            component.value(data[property]);\n\t        }\n\t    },\n\n\t    _initColorPicker: function(element, property, data, storage) {\n\t        var component = storage[property] =\n\t            element.kendoColorPicker({buttons: false, clearButton: true}).data("kendoColorPicker");\n\n\t        if (data[property]) {\n\t            component.value(data[property]);\n\t        }\n\t    },\n\t    _initInput: function(element, property, data, storage) {\n\t        var component = storage[property] = element.get(0);\n\t        if (property in data) {\n\t            component.value = data[property];\n\t        }\n\t    },\n\n\t    _initCheckbox: function(element, property, data, storage) {\n\t        var component = storage[property] = element.get(0);\n\t        if (property in data) {\n\t            component.checked = data[property];\n\t        }\n\t    },\n\n\t    destroy: function() {\n\t        this._destroyComponents(this.components.tableView);\n\t        this._destroyComponents(this.components.cellView);\n\t        this._destroyComponents(this.components.accessibilityView);\n\t        this._destroyComponents(this.components);\n\n\t        delete this.components;\n\t    },\n\t    _destroyComponents: function(components) {\n\t        for (var widget in components) {\n\t            if (components[widget].destroy) {\n\t                components[widget].destroy();\n\t            }\n\t            delete components[widget];\n\t        }\n\t    },\n\n\t    _dialogTemplate: function(messages) {\n\t        return kendo.template(dialogTemplate)({ messages: messages });\n\t    }\n\t});\n\n\tkendo.ui.editor.TableWizardDialog = TableWizardDialog;\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./table-wizard-command */ "./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-command.js");\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../../kendo.tabstrip */ "./node_modules/@progress/kendo-ui/js/kendo.tabstrip.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/editor/table-wizard/table-wizard-dialog.js?')}}]);