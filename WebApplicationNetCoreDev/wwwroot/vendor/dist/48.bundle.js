(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"./node_modules/@progress/kendo-ui/js/kendo.switch.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.switch.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1382);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1382:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1018) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "switch",\n\t    name: "Switch",\n\t    category: "web",\n\t    description: "The Switch widget is used to display two exclusive choices.",\n\t    depends: [ "core" ]\n\t};\n\n\t(function($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        NS = ".kendoSwitch",\n\t        Widget = ui.Widget,\n\t        support = kendo.support,\n\t        CHANGE = "change",\n\t        switchStyles = {\n\t            widget: "k-switch k-widget",\n\t            container: "k-switch-container",\n\t            handle: "k-switch-handle",\n\t            checked: "k-switch-on",\n\t            checkedLabel: "k-switch-label-on",\n\t            unchecked: "k-switch-off",\n\t            uncheckedLabel: "k-switch-label-off",\n\t            disabled: "k-state-disabled",\n\t            readonly: "k-state-readonly",\n\t            active: "k-state-active"\n\t        },\n\t        DISABLED = "disabled",\n\t        ARIA_DISABLED = "aria-disabled",\n\t        READONLY = "readonly",\n\t        ARIA_READONLY = "aria-readonly",\n\t        ARIA_CHECKED = "aria-checked",\n\t        CHECKED = "checked",\n\t        CLICK = support.click + NS,\n\t        TOUCHEND = support.pointers ? "pointerup" : "touchend",\n\t        KEYDOWN = "keydown" + NS,\n\t        LABELIDPART = "_label",\n\t        proxy = $.proxy;\n\n\t    var SWITCH_TEMPLATE = kendo.template(\'<span class="#=styles.widget#" role="switch"></span>\');\n\n\t    var SWITCH_CONTAINER_TEMPLATE = kendo.template("<span class=\'#=styles.container#\'>" +\n\t        "<span class=\'#=styles.checkedLabel#\'>#=checked#</span>" +\n\t        "<span class=\'#=styles.uncheckedLabel#\'>#=unchecked#</span>" +\n\t        "<span class=\'#=styles.handle#\'></span>" +\n\t        "</span>");\n\n\t    var Switch = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this,\n\t                wrapper;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            options = that.options;\n\t            element = that.element[0];\n\t            element.type = "checkbox";\n\n\t            wrapper = $(SWITCH_TEMPLATE({\n\t                styles: switchStyles\n\t            }));\n\n\t            that.wrapper = that.element.wrap(wrapper).parent();\n\n\t            that.wrapper\n\t                    .append($(SWITCH_CONTAINER_TEMPLATE({\n\t                        styles: switchStyles,\n\t                        checked: options.messages.checked,\n\t                        unchecked: options.messages.unchecked\n\t                    })))\n\t                    .addClass(element.className).removeClass(\'input-validation-error\');\n\n\t            that.wrapper\n\t                    .on(CLICK, proxy(that._click, that))\n\t                    .on(TOUCHEND, proxy(that._touchEnd, that))\n\t                    .on(KEYDOWN, proxy(that._keydown, that));\n\n\t            if (that.options.enabled) {\n\t                that._tabindex();\n\t            }\n\n\t            that._initSettings();\n\n\t            that._aria();\n\n\t            kendo.notify(that, kendo.ui);\n\t        },\n\n\t        setOptions: function (options) {\n\t            var that = this,\n\t                messages = options.messages,\n\t                checkedLabel,\n\t                uncheckedLabel;\n\n\t            that.options = $.extend(that.options, options);\n\n\t            if (messages && messages.checked !== undefined) {\n\t                checkedLabel = that.wrapper.find("." + switchStyles.checkedLabel);\n\t                checkedLabel.text(messages.checked);\n\t            }\n\n\t            if (messages && messages.unchecked !== undefined) {\n\t                uncheckedLabel = that.wrapper.find("." + switchStyles.uncheckedLabel);\n\t                uncheckedLabel.text(messages.unchecked);\n\t            }\n\n\t            if (options.width) {\n\t                that.wrapper.css({\n\t                    width: options.width\n\t                });\n\t            }\n\n\t            if (options.enabled !== undefined) {\n\t                that.enable(options.enabled);\n\t            }\n\n\t            if (options.readonly !== undefined) {\n\t                that.readonly(options.readonly);\n\t            }\n\n\t            that.check(options.checked);\n\t        },\n\n\t        _initSettings: function () {\n\t            var that = this,\n\t                element = that.element[0],\n\t                options = that.options;\n\n\t            if (options.width) {\n\t                that.wrapper.css({\n\t                    width: options.width\n\t                });\n\t            }\n\n\t            if (options.checked === null) {\n\t                options.checked = element.checked;\n\t            }\n\n\t            that.check(options.checked);\n\n\t            options.enabled = options.enabled && !that.element.attr(DISABLED);\n\t            that.enable(options.enabled);\n\n\t            options.readonly = options.readonly || !!that.element.attr(READONLY);\n\t            that.readonly(options.readonly);\n\t        },\n\n\t        _aria: function () {\n\t            var that = this,\n\t                element = that.element,\n\t                wrapper = that.wrapper,\n\t                id = element.attr("id"),\n\t                labelFor = $("label[for=\\"" + id  + "\\"]"),\n\t                ariaLabel = element.attr("aria-label"),\n\t                ariaLabelledBy = element.attr("aria-labelledby");\n\n\t            if (ariaLabel) {\n\t                wrapper.attr("aria-label", ariaLabel);\n\t            } else if (ariaLabelledBy){\n\t                wrapper.attr("aria-labelledby", ariaLabelledBy);\n\t            } else if (labelFor.length){\n\t                var labelId = labelFor.attr("id");\n\n\t                if (!labelId) {\n\t                    labelId = (id || kendo.guid()) + LABELIDPART;\n\t                    labelFor.attr("id", labelId);\n\t                }\n\n\t                wrapper.attr("aria-labelledby", labelId);\n\t            }\n\t        },\n\n\t        events: [\n\t            CHANGE\n\t        ],\n\n\t        options: {\n\t            name: "Switch",\n\t            messages: {\n\t                checked: "On",\n\t                unchecked: "Off"\n\t            },\n\t            width: null,\n\t            checked: null,\n\t            enabled: true,\n\t            readonly: false\n\t        },\n\n\t        check: function(checked) {\n\t            var that = this,\n\t                element = that.element[0];\n\n\t            if (checked === undefined) {\n\t                return element.checked;\n\t            }\n\n\t            if (element.checked !== checked) {\n\t                that.options.checked = element.checked = checked;\n\t            }\n\n\t            that.wrapper\n\t                    .attr(ARIA_CHECKED, checked)\n\t                    .toggleClass(switchStyles.checked, checked)\n\t                    .toggleClass(switchStyles.unchecked, !checked);\n\n\t            if (checked) {\n\t                that.element\n\t                        .attr(CHECKED, CHECKED);\n\t            } else {\n\t                that.element\n\t                        .removeAttr(CHECKED);\n\t            }\n\t        },\n\n\t        // alias for check, NG support\n\t        value: function(value) {\n\t            if (typeof value === "string") {\n\t            value = (value === "true");\n\t            }\n\t            return this.check.apply(this, [value]);\n\t        },\n\n\t        destroy: function() {\n\t            Widget.fn.destroy.call(this);\n\t            this.wrapper.off(NS);\n\t        },\n\n\t        toggle: function() {\n\t            var that = this;\n\n\t            that.check(!that.element[0].checked);\n\t        },\n\n\t        enable: function(enable) {\n\t            var element = this.element,\n\t                wrapper = this.wrapper;\n\n\t            if(typeof enable == "undefined") {\n\t                enable = true;\n\t            }\n\n\t            this.options.enabled = enable;\n\n\t            if(enable) {\n\t                element.removeAttr(DISABLED);\n\t                wrapper.removeAttr(ARIA_DISABLED);\n\t            } else {\n\t                element.attr(DISABLED, DISABLED);\n\t                wrapper.attr(ARIA_DISABLED, true);\n\t            }\n\n\t            wrapper.toggleClass(switchStyles.disabled, !enable);\n\t        },\n\n\t        readonly: function(readonly) {\n\t            var that = this,\n\t                element = that.element,\n\t                wrapper = that.wrapper;\n\n\t            if(typeof readonly == "undefined") {\n\t                readonly = true;\n\t            }\n\n\t            that.options.readonly = readonly;\n\n\t            if(readonly) {\n\t                element.attr(READONLY, true);\n\t                wrapper.attr(ARIA_READONLY, true);\n\t            } else {\n\t                element.removeAttr(READONLY);\n\t                wrapper.removeAttr(ARIA_READONLY);\n\t            }\n\n\t            wrapper.toggleClass(switchStyles.readonly, readonly);\n\t        },\n\n\t        _check: function () {\n\t            var that = this,\n\t                checked = that.element[0].checked = !that.element[0].checked;\n\n\t            that.wrapper.focus();\n\n\t            if (!that.options.enabled || that.options.readonly ||\n\t                that.trigger(CHANGE, { checked: checked })) {\n\t                that.element[0].checked = !checked;\n\t                return;\n\t            }\n\n\t            that.check(checked);\n\t        },\n\n\t        _keydown: function (e) {\n\t            if (e.keyCode === kendo.keys.SPACEBAR) {\n\t                this._check();\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _isTouch: function(event) {\n\t            return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n\t        },\n\n\t        _click: function (e) {\n\t            if (!this._isTouch(e) && e.which === 1) {\n\t                this._check();\n\t            }\n\t        },\n\n\t        _touchEnd: function (e) {\n\t            if (this._isTouch(e)) {\n\t                this._check();\n\t                e.preventDefault();\n\t            }\n\t        }\n\n\t    });\n\n\t    ui.plugin(Switch);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.switch.js?')},"./node_modules/@progress/kendo-ui/js/kendo.tabstrip.js":
/*!**************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.tabstrip.js ***!
  \**************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1383);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.data */ "./node_modules/@progress/kendo-ui/js/kendo.data.js");\n\n/***/ }),\n\n/***/ 1383:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(jQuery) {(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1027) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\tvar __meta__ = { // jshint ignore:line\n\t    id: "tabstrip",\n\t    name: "TabStrip",\n\t    category: "web",\n\t    description: "The TabStrip widget displays a collection of tabs with associated tab content.",\n\t    depends: [ "data" ],\n\t    features: [ {\n\t        id: "tabstrip-fx",\n\t        name: "Animation",\n\t        description: "Support for animation",\n\t        depends: [ "fx" ]\n\t    } ]\n\t};\n\n\t(function ($, undefined) {\n\t    var kendo = window.kendo,\n\t        ui = kendo.ui,\n\t        keys = kendo.keys,\n\t        map = $.map,\n\t        each = $.each,\n\t        trim = kendo.trim,\n\t        extend = $.extend,\n\t        isFunction = kendo.isFunction,\n\t        template = kendo.template,\n\t        outerWidth = kendo._outerWidth,\n\t        outerHeight = kendo._outerHeight,\n\t        Widget = ui.Widget,\n\t        excludedNodesRegExp = /^(a|div)$/i,\n\t        NS = ".kendoTabStrip",\n\t        IMG = "img",\n\t        HREF = "href",\n\t        PREV = "prev",\n\t        NEXT = "next",\n\t        SHOW = "show",\n\t        LINK = "k-link",\n\t        LAST = "k-last",\n\t        CLICK = "click",\n\t        ERROR = "error",\n\t        EMPTY = ":empty",\n\t        IMAGE = "k-image",\n\t        FIRST = "k-first",\n\t        SELECT = "select",\n\t        ACTIVATE = "activate",\n\t        CONTENT = "k-content",\n\t        CONTENTURL = "contentUrl",\n\t        MOUSEENTER = "mouseenter",\n\t        MOUSELEAVE = "mouseleave",\n\t        CONTENTLOAD = "contentLoad",\n\t        DISABLEDSTATE = "k-state-disabled",\n\t        DEFAULTSTATE = "k-state-default",\n\t        ACTIVESTATE = "k-state-active",\n\t        FOCUSEDSTATE = "k-state-focused",\n\t        HOVERSTATE = "k-state-hover",\n\t        TABONTOP = "k-tab-on-top",\n\t        NAVIGATABLEITEMS = ".k-item:not(." + DISABLEDSTATE + ")",\n\t        KEYBOARDNAVIGATABLEITEMS = ".k-item",\n\t        HOVERABLEITEMS = ".k-tabstrip-items > " + NAVIGATABLEITEMS + ":not(." + ACTIVESTATE + ")",\n\t        DEFAULTDISTANCE = 200,\n\n\t        templates = {\n\t            content: template(\n\t                "<div class=\'k-content\'#= contentAttributes(data) # role=\'tabpanel\'>#= content(item) #</div>"\n\t            ),\n\t            itemWrapper: template(\n\t                "<#= tag(item) # class=\'k-link\'#= contentUrl(item) ##= textAttributes(item) #>" +\n\t                    "#= image(item) ##= sprite(item) ##= text(item) #" +\n\t                "</#= tag(item) #>"\n\t            ),\n\t            item: template(\n\t                "<li class=\'#= wrapperCssClass(group, item) #\' role=\'tab\' #=item.active ? \\"aria-selected=\'true\'\\" : \'\'#>" +\n\t                    "#= itemWrapper(data) #" +\n\t                "</li>"\n\t            ),\n\t            image: template("<img class=\'k-image\' alt=\'\' src=\'#= imageUrl #\' />"),\n\t            sprite: template("<span class=\'k-sprite #= spriteCssClass #\'></span>"),\n\t            empty: template("")\n\t        },\n\n\t        rendering = {\n\t            wrapperCssClass: function (group, item) {\n\t                var result = "k-item",\n\t                    index = item.index;\n\n\t                if (item.enabled === false) {\n\t                    result += " k-state-disabled";\n\t                } else {\n\t                    result += " k-state-default";\n\t                }\n\n\t                if (index === 0) {\n\t                    result += " k-first";\n\t                }\n\n\t                if (index == group.length-1) {\n\t                    result += " k-last";\n\t                }\n\n\t                return result;\n\t            },\n\t            textAttributes: function(item) {\n\t                return item.url ? " href=\'" + item.url + "\'" : "";\n\t            },\n\t            text: function(item) {\n\t                return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n\t            },\n\t            tag: function(item) {\n\t                return item.url ? "a" : "span";\n\t            },\n\t            contentAttributes: function(content) {\n\t                return content.active !== true ? " style=\'display:none\' aria-hidden=\'true\' aria-expanded=\'false\'" : "";\n\t            },\n\t            content: function(item) {\n\t                return item.content ? item.content : item.contentUrl ? "" : "&nbsp;";\n\t            },\n\t            contentUrl: function(item) {\n\t                return item.contentUrl ? kendo.attr("content-url") + \'="\' + item.contentUrl + \'"\' : "";\n\t            }\n\t        };\n\n\t    function updateTabClasses (tabs) {\n\t        tabs.children(IMG)\n\t            .addClass(IMAGE);\n\n\t        tabs.children("a")\n\t            .addClass(LINK)\n\t            .children(IMG)\n\t            .addClass(IMAGE);\n\n\t        tabs.filter(":not([disabled]):not([class*=k-state-disabled])")\n\t            .addClass(DEFAULTSTATE);\n\n\t        tabs.filter("li[disabled]")\n\t            .addClass(DISABLEDSTATE)\n\t            .attr("aria-disabled", "true")\n\t            .removeAttr("disabled");\n\n\t        tabs.filter(":not([class*=k-state])")\n\t            .children("a")\n\t            .filter(":focus")\n\t            .parent()\n\t            .addClass(ACTIVESTATE + " " + TABONTOP);\n\n\t        tabs.attr("role", "tab");\n\t        tabs.filter("." + ACTIVESTATE)\n\t            .attr("aria-selected", true);\n\n\n\t        tabs.each(function() {\n\t            var item = $(this);\n\n\t            if (!item.children("." + LINK).length) {\n\t                item\n\t                    .contents()      // exclude groups, real links, templates and empty text nodes\n\t                    .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n\t                    .wrapAll("<span UNSELECTABLE=\'on\' class=\'" + LINK + "\'/>");\n\t            }\n\t        });\n\n\t    }\n\n\t    function updateFirstLast (tabGroup) {\n\t        var tabs = tabGroup.children(".k-item");\n\n\t        tabs.filter(".k-first:not(:first-child)").removeClass(FIRST);\n\t        tabs.filter(".k-last:not(:last-child)").removeClass(LAST);\n\t        tabs.filter(":first-child").addClass(FIRST);\n\t        tabs.filter(":last-child").addClass(LAST);\n\t    }\n\n\t    function scrollButtonHtml(buttonClass, iconClass) {\n\t        return "<span class=\'k-button k-button-icon k-flat k-tabstrip-" + buttonClass + "\' unselectable=\'on\'><span class=\'k-icon " + iconClass + "\'></span></span>";\n\t    }\n\n\t    var TabStrip = Widget.extend({\n\t        init: function(element, options) {\n\t            var that = this, value;\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that._animations(that.options);\n\n\t            options = that.options;\n\n\t            that._contentUrls = options.contentUrls || [];\n\n\t            that._wrapper();\n\n\t            that._isRtl = kendo.support.isRtl(that.wrapper);\n\n\t            that._tabindex();\n\n\t            that._updateClasses();\n\n\t            that._dataSource();\n\n\t            if (options.dataSource) {\n\t                that.dataSource.fetch();\n\t            }\n\n\t            that._tabPosition();\n\n\t            that._scrollable();\n\n\t            if (that._contentUrls.length) {\n\t                that.wrapper.find(".k-tabstrip-items > .k-item")\n\t                    .each(function(index, item) {\n\t                        var url = that._contentUrls[index];\n\n\t                        if (typeof url === \'string\') {\n\t                            $(item).find(">." + LINK).data(CONTENTURL, url);\n\t                        }\n\t                    });\n\t            } else {\n\t                that._contentUrls.length = that.tabGroup.find("li.k-item").length;\n\t            }\n\n\t            that.wrapper\n\t                .on(MOUSEENTER + NS + " " + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n\t                .on("focus" + NS, $.proxy(that._active, that))\n\t                .on("blur" + NS, function() { that._current(null); });\n\n\t            that._keyDownProxy = $.proxy(that._keydown, that);\n\n\t            if (options.navigatable) {\n\t                that.wrapper.on("keydown" + NS, that._keyDownProxy);\n\t            }\n\n\t            if (that.options.value) {\n\t                value = that.options.value;\n\t            }\n\n\t            that.wrapper.children(".k-tabstrip-items")\n\t                .on(CLICK + NS, ".k-state-disabled .k-link", false)\n\t                .on(CLICK + NS, " > " + NAVIGATABLEITEMS, function (e) {\n\t                    var wr = that.wrapper[0];\n\t                    if (wr !== document.activeElement) {\n\t                        var msie = kendo.support.browser.msie;\n\t                        if (msie) {\n\t                            try {\n\t                                // does not scroll to the active element\n\t                                wr.setActive();\n\t                            } catch (j) {\n\t                                wr.focus();\n\t                            }\n\t                        } else {\n\t                            wr.focus();\n\t                        }\n\t                    }\n\n\t                    if (that._click($(e.currentTarget))) {\n\t                        e.preventDefault();\n\t                    }\n\t                });\n\n\t            var selectedItems = that.tabGroup.children("li." + ACTIVESTATE),\n\t                content = that.contentHolder(selectedItems.index());\n\n\t            if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n\t                that.activateTab(selectedItems.eq(0));\n\t            }\n\n\t            that.element.attr("role", "tablist");\n\n\t            if (that.element[0].id) {\n\t                that._ariaId = that.element[0].id + "_ts_active";\n\t            }\n\t            that.value(value);\n\t            kendo.notify(that);\n\t        },\n\n\t        _active: function () {\n\t            var item = this.tabGroup.children().filter("." + ACTIVESTATE);\n\n\t            item = item[0] ? item : this._endItem("first");\n\t            if (item[0]) {\n\t                this._current(item);\n\t            }\n\t        },\n\n\t        _endItem: function(action) {\n\t            return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n\t        },\n\n\t        _getItem: function(action) {\n\t            return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n\t        },\n\n\t        _item: function(item, action) {\n\t            var endItem;\n\t            if (action === PREV) {\n\t                endItem = "last";\n\t            } else {\n\t                endItem = "first";\n\t            }\n\n\t            if (!item) {\n\t                return this._endItem(endItem);\n\t            }\n\n\t            item = item[action]();\n\n\t            if (!item[0]) {\n\t                item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n\t            }\n\n\t            if (item.hasClass(DISABLEDSTATE)) {\n\t                item.addClass(FOCUSEDSTATE);\n\t            }\n\t            if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n\t                this._focused = item;\n\t            }\n\n\t            return item;\n\t        },\n\n\t        _current: function (candidate) {\n\t            var that = this,\n\t                focused = that._focused,\n\t                id = that._ariaId;\n\n\t            if (candidate === undefined) {\n\t                return focused;\n\t            }\n\n\t            if (focused) {\n\t                that.tabGroup.children("#" + id).removeAttr("id");\n\t                focused.removeClass(FOCUSEDSTATE);\n\t            }\n\n\t            if (candidate) {\n\t                if (!candidate.hasClass(ACTIVESTATE)) {\n\t                    candidate.addClass(FOCUSEDSTATE);\n\t                }\n\n\t                that.element.removeAttr("aria-activedescendant");\n\n\t                id = candidate[0].id || id;\n\n\t                if (id) {\n\t                    candidate.attr("id", id);\n\t                    that.element.attr("aria-activedescendant", id);\n\t                }\n\t            }\n\n\t            that._focused = candidate;\n\t        },\n\n\t        _keydown: function(e) {\n\t            var that = this,\n\t                key = e.keyCode,\n\t                current = that._current(),\n\t                rtl = that._isRtl,\n\t                isHorizontal = /top|bottom/.test(that.options.tabPosition),\n\t                action;\n\n\t            if (e.target != e.currentTarget || !current) {\n\t                return;\n\t            }\n\n\t            if (key === keys.DOWN && !isHorizontal) {\n\t                action = NEXT;\n\t            } else if (key === keys.UP && !isHorizontal) {\n\t                action = PREV;\n\t            } else if (key === keys.RIGHT && isHorizontal) {\n\t                action = rtl ? PREV : NEXT;\n\t            } else if (key === keys.LEFT && isHorizontal) {\n\t                action = rtl ? NEXT : PREV;\n\t            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n\t                that._click(current);\n\t                e.preventDefault();\n\t            } else if (key == keys.HOME) {\n\t                that._click(that._getItem("first"));\n\t                e.preventDefault();\n\t                return;\n\t            } else if (key == keys.END) {\n\t                that._click(that._getItem("last"));\n\t                e.preventDefault();\n\t                return;\n\t            }\n\n\t            if (action) {\n\t                that._click(that._item(current, action));\n\t                e.preventDefault();\n\t            }\n\t        },\n\n\t        _dataSource: function() {\n\t            var that = this;\n\n\t            if (that.dataSource && that._refreshHandler) {\n\t                that.dataSource.unbind("change", that._refreshHandler);\n\t            } else {\n\t                that._refreshHandler = $.proxy(that.refresh, that);\n\t            }\n\n\t            that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n\t                                .bind("change", that._refreshHandler);\n\t        },\n\n\t        setDataSource: function(dataSource) {\n\t            var that = this;\n\n\t            that.options.dataSource = dataSource;\n\t            that._dataSource();\n\t            that.dataSource.fetch();\n\t        },\n\n\t        _animations: function(options) {\n\t            if (options && ("animation" in options) && !options.animation) {\n\t                options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n\t            }\n\t        },\n\n\t        refresh: function(e) {\n\t            var that = this,\n\t                options = that.options,\n\t                encoded = kendo.getter(options.dataEncodedField),\n\t                text = kendo.getter(options.dataTextField),\n\t                content = kendo.getter(options.dataContentField),\n\t                contentUrl = kendo.getter(options.dataContentUrlField),\n\t                image = kendo.getter(options.dataImageUrlField),\n\t                url = kendo.getter(options.dataUrlField),\n\t                sprite = kendo.getter(options.dataSpriteCssClass),\n\t                idx,\n\t                tabs = [],\n\t                tab,\n\t                action,\n\t                view = that.dataSource.view(),\n\t                length;\n\n\n\t            e = e || {};\n\t            action = e.action;\n\n\t            if (action) {\n\t               view = e.items;\n\t            }\n\n\t            for (idx = 0, length = view.length; idx < length; idx ++) {\n\t                tab = {\n\t                    text: text(view[idx])\n\t                };\n\n\t                if (options.dataEncodedField) {\n\t                    tab.encoded = encoded(view[idx]);\n\t                }\n\n\t                if (options.dataContentField) {\n\t                    tab.content = content(view[idx]);\n\t                }\n\n\t                if (options.dataContentUrlField) {\n\t                    tab.contentUrl = contentUrl(view[idx]);\n\t                }\n\n\t                if (options.dataUrlField) {\n\t                    tab.url = url(view[idx]);\n\t                }\n\n\t                if (options.dataImageUrlField) {\n\t                    tab.imageUrl = image(view[idx]);\n\t                }\n\n\t                if (options.dataSpriteCssClass) {\n\t                    tab.spriteCssClass = sprite(view[idx]);\n\t                }\n\n\t                tabs[idx] = tab;\n\t            }\n\n\t            if (e.action == "add") {\n\t                if (e.index < that.tabGroup.children().length) {\n\t                    that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n\t                } else {\n\t                    that.append(tabs);\n\t                }\n\t            } else if (e.action == "remove") {\n\t                for (idx = 0; idx < view.length; idx++) {\n\t                   that.remove(e.index);\n\t                }\n\t            } else if (e.action == "itemchange") {\n\t                idx = that.dataSource.view().indexOf(view[0]);\n\t                if (e.field === options.dataTextField) {\n\t                    that.tabGroup.children().eq(idx).find(".k-link").text(view[0].get(e.field));\n\t                }\n\n\t                if (e.field === options.dataUrlField) {\n\t                    that._contentUrls[idx] = view[0].get(e.field);\n\t                }\n\t            } else {\n\t                that.trigger("dataBinding");\n\t                that.remove("li");\n\t                that._contentUrls = [];\n\t                that.append(tabs);\n\t                that.trigger("dataBound");\n\t            }\n\t        },\n\n\t        value: function(value) {\n\t            var that = this;\n\n\t            if (value !== undefined) {\n\t                if (value != that.value()) {\n\t                   that.tabGroup.children().each(function() {\n\t                        if (kendo.trim($(this).text()) == value) {\n\t                            that.select(this);\n\t                        }\n\t                   });\n\t                }\n\t            } else {\n\t                return that.select().text();\n\t            }\n\t        },\n\n\t        items: function() {\n\t            return this.tabGroup[0].children;\n\t        },\n\n\t        setOptions: function(options) {\n\t            var that = this,\n\t                animation = that.options.animation;\n\n\t            that._animations(options);\n\n\t            if (options.contentUrls) {\n\t                that._contentUrls = options.contentUrls;\n\t            }\n\n\t            options.animation = extend(true, animation, options.animation);\n\n\t            if (options.navigatable) {\n\t                that.wrapper.on("keydown" + NS,  that._keyDownProxy);\n\t            } else {\n\t                that.wrapper.off("keydown" + NS,  that._keyDownProxy);\n\t            }\n\n\t            Widget.fn.setOptions.call(that, options);\n\t        },\n\n\t        events: [\n\t            SELECT,\n\t            ACTIVATE,\n\t            SHOW,\n\t            ERROR,\n\t            CONTENTLOAD,\n\t            "change",\n\t            "dataBinding",\n\t            "dataBound"\n\t        ],\n\n\t        options: {\n\t            name: "TabStrip",\n\t            dataEncodedField: "",\n\t            dataTextField: "",\n\t            dataContentField: "",\n\t            dataImageUrlField: "",\n\t            dataUrlField: "",\n\t            dataSpriteCssClass: "",\n\t            dataContentUrlField: "",\n\t            tabPosition: "top",\n\t            animation: {\n\t                open: {\n\t                    effects: "expand:vertical fadeIn",\n\t                    duration: 200\n\t                },\n\t                close: { // if close animation effects are defined, they will be used instead of open.reverse\n\t                    duration: 200\n\t                }\n\t            },\n\t            collapsible: false,\n\t            navigatable: true,\n\t            contentUrls: false,\n\t            scrollable: {\n\t                distance: DEFAULTDISTANCE\n\t            }\n\t        },\n\n\t        destroy: function() {\n\t            var that = this,\n\t            scrollWrap = that.scrollWrap;\n\n\t            Widget.fn.destroy.call(that);\n\n\t            if (that._refreshHandler) {\n\t                that.dataSource.unbind("change", that._refreshHandler);\n\t            }\n\n\t            that.wrapper.off(NS);\n\t            that.wrapper.children(".k-tabstrip-items").off(NS);\n\n\t            if (that._scrollableModeActive) {\n\t                that._scrollPrevButton.off().remove();\n\t                that._scrollNextButton.off().remove();\n\t            }\n\n\t            kendo.destroy(that.wrapper);\n\t            scrollWrap.children(".k-tabstrip").unwrap();\n\t        },\n\n\t        select: function (element) {\n\t            var that = this;\n\n\t            if (arguments.length === 0) {\n\t                return that.tabGroup.children("li." + ACTIVESTATE);\n\t            }\n\n\t            if (!isNaN(element)) {\n\t                element = that.tabGroup.children().get(element);\n\t            }\n\n\t            element = that.tabGroup.find(element);\n\t            $(element).each(function (index, item) {\n\t                item = $(item);\n\t                if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n\t                    that.activateTab(item);\n\t                }\n\t            });\n\n\t            return that;\n\t        },\n\n\t        enable: function (element, state) {\n\t            this._toggleDisabled(element, state !== false);\n\n\t            return this;\n\t        },\n\n\t        disable: function (element) {\n\t            this._toggleDisabled(element, false);\n\n\t            return this;\n\t        },\n\n\t          reload: function (element) {\n\t            element = this.tabGroup.find(element);\n\t            var that = this;\n\t            var contentUrls = that._contentUrls;\n\n\t            element.each(function () {\n\t                var item = $(this),\n\t                    contentUrl = item.find("." + LINK).data(CONTENTURL) || contentUrls[item.index()],\n\t                    content = that.contentHolder(item.index());\n\n\t                if (contentUrl) {\n\t                    that.ajaxRequest(item, content, null, contentUrl);\n\t                }\n\t            });\n\n\t            return that;\n\t        },\n\n\t        append: function (tab) {\n\t            var that = this,\n\t                inserted = that._create(tab);\n\n\t            each(inserted.tabs, function (idx) {\n\t                var contents = inserted.contents[idx];\n\t                that.tabGroup.append(this);\n\t                if (that.options.tabPosition == "bottom") {\n\t                    that.tabGroup.before(contents);\n\t                } else if (that._scrollableModeActive) {\n\t                    that._scrollPrevButton.before(contents);\n\t                } else {\n\t                    that.wrapper.append(contents);\n\t                }\n\t                that.angular("compile", function(){ return { elements: [ contents ] }; });\n\t            });\n\n\t            updateFirstLast(that.tabGroup);\n\t            that._updateContentElements();\n\t            that.resize(true);\n\n\t            return that;\n\t        },\n\n\t        _appendUrlItem: function(url) {\n\t            this._contentUrls.push(url);\n\t        },\n\n\t        _moveUrlItem: function(from, to) {\n\t            this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n\t        },\n\n\t        _removeUrlItem: function(index) {\n\t            this._contentUrls.splice(index, 1);\n\t        },\n\n\t        insertBefore: function (tab, referenceTab) {\n\t            if ($(tab).is($(referenceTab))) {\n\t                referenceTab = this.tabGroup.find(referenceTab).next();\n\t            } else {\n\t                referenceTab = this.tabGroup.find(referenceTab);\n\t            }\n\n\t            var that = this,\n\t                inserted = that._create(tab),\n\t                referenceContent = that.element.find("[id=\'" + referenceTab.attr("aria-controls") + "\']");\n\n\t            each(inserted.tabs, function (idx) {\n\t                var contents = inserted.contents[idx];\n\t                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n\t                referenceTab.before(this);\n\t                referenceContent.before(contents);\n\n\t                that._moveUrlItem(fromIndex, $(this).index());\n\t                that.angular("compile", function(){ return { elements: [ contents ] }; });\n\t            });\n\n\t            updateFirstLast(that.tabGroup);\n\t            that._updateContentElements(inserted.newTabsCreated);\n\t            that.resize(true);\n\n\t            return that;\n\t        },\n\n\t        insertAfter: function (tab, referenceTab) {\n\t            if ($(tab).is($(referenceTab))) {\n\t                referenceTab = this.tabGroup.find(referenceTab).prev();\n\t            } else {\n\t                referenceTab = this.tabGroup.find(referenceTab);\n\t            }\n\n\t            var that = this,\n\t                inserted = that._create(tab),\n\t                referenceContent = that.element.find("[id=\'" + referenceTab.attr("aria-controls") + "\']");\n\n\t            each(inserted.tabs, function (idx) {\n\t                var contents = inserted.contents[idx];\n\t                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n\t                referenceTab.after(this);\n\t                referenceContent.after(contents);\n\n\t                that._moveUrlItem(fromIndex, $(this).index());\n\t                that.angular("compile", function(){ return { elements: [ contents ] }; });\n\t            });\n\n\t            updateFirstLast(that.tabGroup);\n\t            that._updateContentElements(inserted.newTabsCreated);\n\t            that.resize(true);\n\n\t            return that;\n\t        },\n\n\t        remove: function (elements) {\n\t            var that = this;\n\t            var type = typeof elements;\n\t            var contents;\n\n\t            if (type === "string") {\n\t                elements = that.tabGroup.find(elements);\n\t            } else if (type === "number") {\n\t                elements = that.tabGroup.children().eq(elements);\n\t            }\n\n\t            contents = elements.map(function () {\n\t                var idx = $(this).index();\n\t                var content = that.contentElement(idx);\n\n\t                kendo.destroy(content);\n\t                that._removeUrlItem(idx);\n\n\t                return content;\n\t            });\n\n\t            elements.remove();\n\t            contents.empty();\n\t            contents.remove();\n\n\t            that._updateContentElements();\n\t            that.resize(true);\n\n\t            return that;\n\t        },\n\n\t        _create: function (tab) {\n\t            var that = this,\n\t            tabs,\n\t            contents,\n\t            content,\n\t            newTabsCreated = false;\n\n\t            tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n\t            if ($.isPlainObject(tab) || $.isArray(tab)) {\n\t                tab = $.isArray(tab) ? tab : [tab];\n\t                newTabsCreated = true;\n\n\t                tabs = map(tab, function (value, idx) {\n\t                            that._appendUrlItem(tab[idx].contentUrl || null);\n\n\t                            return $(TabStrip.renderItem({\n\t                                group: that.tabGroup,\n\t                                item: extend(value, { index: idx })\n\t                            }));\n\t                        });\n\n\t                contents = map( tab, function (value, idx) {\n\t                            if (typeof value.content == "string" || value.contentUrl) {\n\t                                return $(TabStrip.renderContent({\n\t                                    item: extend(value, { index: idx })\n\t                                }));\n\t                            }\n\t                        });\n\t            } else {\n\t                if (typeof tab == "string" && tab[0] != "<") {\n\t                    tabs = that.element.find(tab);\n\t                } else {\n\t                    tabs = $(tab);\n\t                }\n\t                contents = $();\n\t                tabs.each(function () {\n\t                    if (/k-tabstrip-items/.test(this.parentNode.className)) {\n\t                        var element = that.element.find("[id=\'" + this.getAttribute("aria-controls") + "\']");\n\t                        content = element;\n\t                    } else {\n\t                        content = $("<div class=\'" + CONTENT + "\'/>");\n\t                    }\n\n\t                    contents = contents.add(content);\n\t                });\n\n\t                updateTabClasses(tabs);\n\t            }\n\n\t            return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n\t        },\n\n\t        _toggleDisabled: function(element, enable) {\n\t            element = this.tabGroup.find(element);\n\t            element.each(function () {\n\t                $(this)\n\t                    .toggleClass(DEFAULTSTATE, enable)\n\t                    .toggleClass(DISABLEDSTATE, !enable)\n\t                    .attr("aria-disabled", !enable);\n\t            });\n\t        },\n\n\t        _updateClasses: function() {\n\t            var that = this,\n\t                tabs, activeItem, activeTab;\n\n\t            that.wrapper.addClass("k-widget k-header k-tabstrip");\n\n\t            that.tabGroup = that.wrapper.children("ul").addClass("k-tabstrip-items k-reset");\n\n\t            if (!that.tabGroup[0]) {\n\t                that.tabGroup = $("<ul class=\'k-tabstrip-items k-reset\'/>").appendTo(that.wrapper);\n\t            }\n\n\t            tabs = that.tabGroup.find("li").addClass("k-item");\n\n\t            if (tabs.length) {\n\t                activeItem = tabs.filter("." + ACTIVESTATE).index();\n\t                activeTab = activeItem >= 0 ? activeItem : undefined;\n\n\t                that.tabGroup // Remove empty text nodes\n\t                    .contents()\n\t                    .filter(function () { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n\t                    .remove();\n\t            }\n\n\t            if (activeItem >= 0) {\n\t                tabs.eq(activeItem).addClass(TABONTOP);\n\t            }\n\n\t            that.contentElements = that.wrapper.children("div");\n\n\t            that.contentElements\n\t                .addClass(CONTENT)\n\t                .eq(activeTab)\n\t                .addClass(ACTIVESTATE)\n\t                .css({ display: "block" });\n\n\t            if (tabs.length) {\n\t                updateTabClasses(tabs);\n\n\t                updateFirstLast(that.tabGroup);\n\t                that._updateContentElements(true);\n\t            }\n\t        },\n\n\t        _elementId: function(element, idx) {\n\t            var elementId = element.attr("id");\n\t            var wrapperId = this.element.attr("id");\n\n\t            if (!elementId || elementId.indexOf(wrapperId + "-") > -1) {\n\t                var tabStripID = (wrapperId || kendo.guid()) + "-";\n\n\t                return tabStripID + (idx + 1);\n\t            }\n\n\t            return elementId;\n\t        },\n\n\t        _updateContentElements: function(isInitialUpdate) {\n\t            var that = this,\n\t                contentUrls = that._contentUrls,\n\t                items = that.tabGroup.children(".k-item"),\n\t                contentElements = that.wrapper.children("div"),\n\t                _elementId = that._elementId.bind(that);\n\n\t            if (contentElements.length && (items.length > contentElements.length)) {\n\t                contentElements.each(function(idx) {\n\t                    var id = _elementId($(this), idx);\n\t                    var item = items.filter("[aria-controls=" + (this.id || 0) + "]")[0];\n\n\t                    if (!item && isInitialUpdate) {\n\t                         item = items[idx];\n\t                    }\n\n\t                    if (item) {\n\t                        item.setAttribute("aria-controls", id);\n\t                    }\n\n\t                    this.setAttribute("id", id);\n\t                });\n\t            } else {\n\t                items.each(function(idx) {\n\t                    var currentContent = contentElements.eq(idx);\n\t                    var id = _elementId(currentContent, idx);\n\n\t                    this.setAttribute("aria-controls", id);\n\n\t                    if (!currentContent.length && contentUrls[idx]) {\n\t                        $("<div class=\'" + CONTENT + "\'/>").appendTo(that.wrapper).attr("id", id);\n\t                    } else {\n\t                        currentContent.attr("id", id);\n\n\t                        if (!$(this).children(".k-loading")[0] && !contentUrls[idx]) {\n\t                            $("<span class=\'k-loading k-complete\'/>").prependTo(this);\n\t                        }\n\t                    }\n\t                    currentContent.attr("role", "tabpanel");\n\t                    currentContent.filter(":not(." + ACTIVESTATE + ")").attr("aria-hidden", true).attr("aria-expanded", false);\n\t                    currentContent.filter("." + ACTIVESTATE).attr("aria-expanded", true);\n\t                });\n\t            }\n\n\t            that.contentElements = that.contentAnimators = that.wrapper.children("div"); // refresh the contents\n\n\t            that.tabsHeight = outerHeight(that.tabGroup) +\n\t                              parseInt(that.wrapper.css("border-top-width"), 10) +\n\t                              parseInt(that.wrapper.css("border-bottom-width"), 10);\n\n\t            if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n\t                kendo.touchScroller(that.contentElements);\n\t                that.contentElements = that.contentElements.children(".km-scroll-container");\n\t            }\n\t        },\n\n\t        _wrapper: function() {\n\t            var that = this;\n\n\t            if (that.element.is("ul")) {\n\t                that.wrapper = that.element.wrapAll("<div />").parent();\n\t            } else {\n\t                that.wrapper = that.element;\n\t            }\n\n\t            that.scrollWrap = that.wrapper.parent(".k-tabstrip-wrapper");\n\n\t            if (!that.scrollWrap[0]) {\n\t                that.scrollWrap = that.wrapper.wrapAll("<div class=\'k-tabstrip-wrapper\' />").parent();\n\t            }\n\t        },\n\n\t        _tabPosition: function() {\n\t            var that = this,\n\t                tabPosition = that.options.tabPosition;\n\n\t            that.wrapper.addClass("k-floatwrap k-tabstrip-" + tabPosition);\n\n\t            if (tabPosition == "bottom") {\n\t                that.tabGroup.appendTo(that.wrapper);\n\t            }\n\n\t            that.resize(true);\n\t        },\n\n\t        _setContentElementsDimensions: function () {\n\t            var that = this,\n\t                tabPosition = that.options.tabPosition;\n\n\t            if (tabPosition == "left" || tabPosition == "right") {\n\t                var contentDivs = that.wrapper.children(".k-content"),\n\t                    activeDiv = contentDivs.filter(":visible"),\n\t                    marginStyleProperty = "margin-" + tabPosition,\n\t                    tabGroup = that.tabGroup,\n\t                    margin = outerWidth(tabGroup);\n\n\t                var minHeight = Math.ceil(tabGroup.height()) -\n\t                    parseInt(activeDiv.css("padding-top"), 10) -\n\t                    parseInt(activeDiv.css("padding-bottom"), 10) -\n\t                    parseInt(activeDiv.css("border-top-width"), 10) -\n\t                    parseInt(activeDiv.css("border-bottom-width"), 10);\n\n\t                setTimeout(function () {\n\t                    contentDivs.css(marginStyleProperty, margin).css("min-height", minHeight);\n\t                });\n\t            }\n\t        },\n\n\t        _resize: function() {\n\t            this._setContentElementsDimensions();\n\t            this._scrollable();\n\t        },\n\n\t        _sizeScrollWrap: function (element) {\n\t            if (element.is(":visible")) {\n\t                var tabPosition = this.options.tabPosition;\n\t                var h = Math.floor(outerHeight(element, true)) + (tabPosition === "left" || tabPosition === "right" ? 2 : this.tabsHeight);\n\n\t                this.scrollWrap.css("height", h).css("height");\n\t            }\n\t        },\n\n\t        _toggleHover: function(e) {\n\t            $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n\t        },\n\n\t        _click: function (item) {\n\t            var that = this,\n\t                link = item.find("." + LINK),\n\t                href = link.attr(HREF),\n\t                collapse = that.options.collapsible,\n\t                index = item.index(),\n\t                contentHolder = that.contentHolder(index),\n\t                prevent, isAnchor,\n\t                neighbours = item.parent().children(),\n\t                oldFocusedTab = neighbours.filter("." + FOCUSEDSTATE);\n\n\t            if (item.closest(".k-widget")[0] != that.wrapper[0]) {\n\t                return;\n\t            }\n\n\t            if (item.is("." + DISABLEDSTATE + (!collapse ? ",." + ACTIVESTATE : ""))) {\n\t                oldFocusedTab.removeClass(FOCUSEDSTATE);\n\t                that._focused = item;\n\n\t                item.addClass(FOCUSEDSTATE);\n\t                that._current(item);\n\n\t                if (that._scrollableModeActive) {\n\t                    that._scrollTabsToItem(item);\n\t                }\n\t                return true;\n\t            }\n\n\t            isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == "#" || href.indexOf("#" + that.element[0].id + "-") != -1));\n\t            prevent = !href || isAnchor;\n\n\t            if (that.tabGroup.children("[data-animating]").length) {\n\t                return prevent;\n\t            }\n\n\t            if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n\t                return true;\n\t            }\n\n\t            if (prevent === false) {\n\t                return;\n\t            }\n\n\t            if (collapse && item.is("." + ACTIVESTATE)) {\n\t                that.deactivateTab(item);\n\t                return true;\n\t            }\n\n\t            if (that.activateTab(item)) {\n\t                prevent = true;\n\t            }\n\n\t            return prevent;\n\t        },\n\n\t        _scrollable: function() {\n\t            var that = this,\n\t                options = that.options,\n\t                wrapperOffsetWidth,\n\t                tabGroupScrollWidth,\n\t                scrollPrevButton,\n\t                scrollNextButton;\n\n\t            if (that._scrollableAllowed()) {\n\n\t                that.wrapper.addClass("k-tabstrip-scrollable");\n\n\t                wrapperOffsetWidth = that.wrapper[0].offsetWidth;\n\t                tabGroupScrollWidth = that.tabGroup[0].scrollWidth;\n\n\t                if (tabGroupScrollWidth > wrapperOffsetWidth && !that._scrollableModeActive) {\n\t                    that._nowScrollingTabs = false;\n\t                    that._isRtl = kendo.support.isRtl(that.element);\n\t                    var mouseDown = kendo.support.touch ? "touchstart" : "mousedown";\n\t                    var mouseUp = kendo.support.touch ? "touchend" : "mouseup";\n\t                    var browser = kendo.support.browser;\n\t                    var isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n\n\t                    that.wrapper.append(scrollButtonHtml("prev", "k-i-arrow-60-left") + scrollButtonHtml("next", "k-i-arrow-60-right"));\n\n\t                    scrollPrevButton = that._scrollPrevButton = that.wrapper.children(".k-tabstrip-prev");\n\t                    scrollNextButton = that._scrollNextButton = that.wrapper.children(".k-tabstrip-next");\n\n\t                    that.tabGroup.css({ marginLeft: outerWidth(scrollPrevButton) + 9, marginRight: outerWidth(scrollNextButton) + 12 });\n\n\t                    scrollPrevButton.on(mouseDown + NS, function () {\n\t                        that._nowScrollingTabs = true;\n\t                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n\t                    });\n\n\t                    scrollNextButton.on(mouseDown + NS, function () {\n\t                        that._nowScrollingTabs = true;\n\t                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n\t                    });\n\n\t                    scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function () {\n\t                        that._nowScrollingTabs = false;\n\t                    });\n\n\t                    that._scrollableModeActive = true;\n\n\t                    that._toggleScrollButtons();\n\t                } else if (that._scrollableModeActive && tabGroupScrollWidth <= wrapperOffsetWidth) {\n\t                    that._scrollableModeActive = false;\n\n\t                    that.wrapper.removeClass("k-tabstrip-scrollable");\n\n\t                    that._scrollPrevButton.off().remove();\n\t                    that._scrollNextButton.off().remove();\n\t                    that.tabGroup.css({ marginLeft: "", marginRight: "" });\n\t                } else if (!that._scrollableModeActive) {\n\t                    that.wrapper.removeClass("k-tabstrip-scrollable");\n\t                } else {\n\t                    that._toggleScrollButtons();\n\t                }\n\t            }\n\t        },\n\n\t        _scrollableAllowed: function() {\n\t            var options = this.options;\n\n\t            if(options.scrollable && !options.scrollable.distance){\n\t                options.scrollable = {distance: DEFAULTDISTANCE};\n\t            }\n\n\t            return options.scrollable && !isNaN(options.scrollable.distance) && (options.tabPosition == "top" || options.tabPosition == "bottom");\n\t        },\n\n\t        _scrollTabsToItem: function (item) {\n\t            var that = this,\n\t                tabGroup = that.tabGroup,\n\t                currentScrollOffset = tabGroup.scrollLeft(),\n\t                itemWidth = outerWidth(item),\n\t                itemOffset = that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left,\n\t                tabGroupWidth = tabGroup[0].offsetWidth,\n\t                tabGroupPadding = Math.ceil(parseFloat(tabGroup.css("padding-left"))),\n\t                itemPosition;\n\n\t            if (that._isRtl) {\n\t                if (itemOffset < 0) {\n\t                    itemPosition = currentScrollOffset + itemOffset - (tabGroupWidth - currentScrollOffset) - tabGroupPadding;\n\t                } else if (itemOffset + itemWidth > tabGroupWidth) {\n\t                    itemPosition = currentScrollOffset + itemOffset - itemWidth + tabGroupPadding * 2;\n\t                }\n\t            } else {\n\t                if (currentScrollOffset + tabGroupWidth < itemOffset + itemWidth) {\n\t                    itemPosition = itemOffset + itemWidth - tabGroupWidth + tabGroupPadding * 2;\n\t                } else if (currentScrollOffset > itemOffset) {\n\t                    itemPosition = itemOffset - tabGroupPadding;\n\t                }\n\t            }\n\n\t            tabGroup.finish().animate({ "scrollLeft": itemPosition }, "fast", "linear", function () {\n\t                that._toggleScrollButtons();\n\t            });\n\t        },\n\n\t        _scrollTabsByDelta: function (delta) {\n\t            var that = this;\n\t            var tabGroup = that.tabGroup;\n\t            var scrLeft = tabGroup.scrollLeft();\n\n\t            tabGroup.finish().animate({ "scrollLeft": scrLeft + delta }, "fast", "linear", function () {\n\t                if (that._nowScrollingTabs && !jQuery.fx.off) {\n\t                    that._scrollTabsByDelta(delta);\n\t                } else {\n\t                    that._toggleScrollButtons();\n\t                }\n\t            });\n\t        },\n\n\t        _toggleScrollButtons: function () {\n\t            var that = this,\n\t                ul = that.tabGroup,\n\t                scrollLeft = kendo.scrollLeft(ul);\n\n\t                that._scrollPrevButton.toggle(scrollLeft !== 0);\n\t                that._scrollNextButton.toggle(scrollLeft < ul[0].scrollWidth - ul[0].offsetWidth - 1);\n\t        },\n\n\t        deactivateTab: function (item) {\n\t            var that = this,\n\t                animationSettings = that.options.animation,\n\t                animation = animationSettings.open,\n\t                close = extend({}, animationSettings.close),\n\t                hasCloseAnimation = close && "effects" in close;\n\t            item = that.tabGroup.find(item);\n\n\t            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n\t            if (kendo.size(animation.effects)) {\n\t                item.kendoAddClass(DEFAULTSTATE, { duration: animation.duration });\n\t                item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n\t            } else {\n\t                item.addClass(DEFAULTSTATE);\n\t                item.removeClass(ACTIVESTATE);\n\t            }\n\n\t            item.removeAttr("aria-selected");\n\n\t            that.contentAnimators\n\t                    .filter("." + ACTIVESTATE)\n\t                    .kendoStop(true, true)\n\t                    .kendoAnimate( close )\n\t                    .removeClass(ACTIVESTATE)\n\t                    .attr("aria-hidden", true);\n\t        },\n\n\t        activateTab: function (item) {\n\t            if (this.tabGroup.children("[data-animating]").length) { return; }\n\n\t            item = this.tabGroup.find(item);\n\n\t            var that = this,\n\t                animationSettings = that.options.animation,\n\t                animation = animationSettings.open,\n\t                close = extend({}, animationSettings.close),\n\t                hasCloseAnimation = close && "effects" in close,\n\t                neighbours = item.parent().children(),\n\t                oldTab = neighbours.filter("." + ACTIVESTATE),\n\t                itemIndex = neighbours.index(item),\n\t                isAnimationEnabled = animation && "duration" in animation && "effects" in animation;\n\n\t            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\t            // deactivate previously active tab\n\t            if (kendo.size(animation.effects)) {\n\t                oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n\t                item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n\t            } else {\n\t                oldTab.removeClass(ACTIVESTATE);\n\t                item.removeClass(HOVERSTATE);\n\t            }\n\n\t            // handle content elements\n\t            var contentAnimators = that.contentAnimators;\n\n\t            if (that.inRequest) {\n\t                that.xhr.abort();\n\t                that.inRequest = false;\n\t            }\n\n\t            if (contentAnimators.length === 0) {\n\t                that.tabGroup.find("." + TABONTOP).removeClass(TABONTOP);\n\t                item.addClass(TABONTOP) // change these directly to bring the tab on top.\n\t                    .css("z-index");\n\n\t                item.addClass(ACTIVESTATE);\n\t                that._current(item);\n\n\t                that.trigger("change");\n\n\t                if (that._scrollableModeActive) {\n\t                    that._scrollTabsToItem(item);\n\t                }\n\n\t                return false;\n\t            }\n\n\t            var visibleContents = contentAnimators.filter("." + ACTIVESTATE),\n\t                contentHolder = that.contentHolder(itemIndex),\n\t                contentElement = contentHolder.closest(".k-content");\n\n\t            that.tabsHeight = outerHeight(that.tabGroup) +\n\t                              parseInt(that.wrapper.css("border-top-width"), 10) +\n\t                              parseInt(that.wrapper.css("border-bottom-width"), 10);\n\n\t            that._sizeScrollWrap(visibleContents);\n\n\t            if (contentHolder.length === 0) {\n\t                visibleContents\n\t                    .removeClass( ACTIVESTATE )\n\t                    .attr("aria-hidden", true)\n\t                    .kendoStop(true, true)\n\t                    .kendoAnimate( close );\n\t                return false;\n\t            }\n\n\t            item.attr("data-animating", true);\n\n\t          var isAjaxContent = (item.children("." + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n\t                showContentElement = function () {\n\t                    oldTab.removeAttr("aria-selected");\n\t                    item.attr("aria-selected", true);\n\n\t                    that._current(item);\n\n\t                    that._sizeScrollWrap(contentElement);\n\n\t                    contentElement\n\t                        .addClass(ACTIVESTATE)\n\t                        .removeAttr("aria-hidden")\n\t                        .kendoStop(true, true)\n\t                        .attr("aria-expanded", true)\n\t                        .kendoAnimate( extend({ init: function () {\n\t                            that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n\t                            kendo.resize(contentHolder);\n\t                        } }, animation, {\n\t                            complete: function () {\n\t                                item.removeAttr("data-animating");\n\n\t                                that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n\t                                kendo.resize(contentHolder);\n\n\t                                that.scrollWrap.css("height", "").css("height");\n\n\t                                // Force IE and Edge rendering to fix visual glitches telerik/kendo-ui-core#2777.\n\t                                if (isAnimationEnabled && (kendo.support.browser.msie || kendo.support.browser.edge)) {\n\t                                    contentHolder.finish().animate({\n\t                                        opacity: 0.9\n\t                                    },"fast", "linear", function(){\n\t                                        contentHolder.finish().animate({\n\t                                            opacity: 1\n\t                                        },"fast", "linear");\n\t                                    });\n\t                                }\n\t                            }\n\t                        } ) );\n\t                },\n\t                showContent = function() {\n\t                    if (!isAjaxContent) {\n\t                        showContentElement();\n\t                        that.trigger("change");\n\t                    } else {\n\t                        item.removeAttr("data-animating");\n\t                        that.ajaxRequest(item, contentHolder, function () {\n\t                            item.attr("data-animating", true);\n\t                            showContentElement();\n\t                            that.trigger("change");\n\t                        });\n\t                    }\n\n\t                    if (that._scrollableModeActive) {\n\t                        that._scrollTabsToItem(item);\n\t                    }\n\n\t                };\n\n\t            visibleContents\n\t                    .removeClass(ACTIVESTATE);\n\n\t            that.tabGroup.find("." + TABONTOP).removeClass(TABONTOP);\n\t                    item.addClass(TABONTOP) // change these directly to bring the tab on top.\n\t                        .css("z-index");\n\n\t            if (kendo.size(animation.effects)) {\n\t                oldTab.kendoAddClass(DEFAULTSTATE, { duration: animation.duration });\n\t                item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n\t            } else {\n\t                oldTab.addClass(DEFAULTSTATE);\n\t                item.addClass(ACTIVESTATE);\n\t            }\n\n\t            visibleContents.attr("aria-hidden", true);\n\t            visibleContents.attr("aria-expanded", false);\n\n\t            if (visibleContents.length) {\n\t                visibleContents\n\t                    .kendoStop(true, true)\n\t                    .kendoAnimate(extend( {\n\t                        complete: showContent\n\t                   }, close ));\n\t            } else {\n\t                showContent();\n\t            }\n\n\t            return true;\n\t        },\n\n\t        contentElement: function (itemIndex) {\n\t            if (isNaN(itemIndex - 0)) {\n\t                return undefined;\n\t            }\n\n\t            var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n\t            var id = $(this.tabGroup.children()[itemIndex]).attr("aria-controls");\n\n\t            if (contentElements) {\n\t                for (var i = 0, len = contentElements.length; i < len; i++) {\n\t                    if (contentElements.eq(i).closest(".k-content")[0].id == id) {\n\t                        return contentElements[i];\n\t                    }\n\t                }\n\t            }\n\n\t            return undefined;\n\t        },\n\n\t        contentHolder: function (itemIndex) {\n\t            var contentElement = $(this.contentElement(itemIndex)),\n\t                scrollContainer = contentElement.children(".km-scroll-container");\n\n\t            return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n\t        },\n\n\t        ajaxRequest: function (element, content, complete, url) {\n\t            element = this.tabGroup.find(element);\n\n\t            var that = this,\n\t                xhr = $.ajaxSettings.xhr,\n\t                link = element.find("." + LINK),\n\t                data = {},\n\t                halfWidth = element.width() / 2,\n\t                fakeProgress = false,\n\t                statusIcon = element.find(".k-loading").removeClass("k-complete");\n\n\t            if (!statusIcon[0]) {\n\t                statusIcon = $("<span class=\'k-loading\'/>").prependTo(element);\n\t            }\n\n\t            var endState = halfWidth * 2 - statusIcon.width();\n\n\t            var oldProgressAnimation = function() {\n\t                statusIcon.animate({ marginLeft: (parseInt(statusIcon.css("marginLeft"), 10) || 0) < halfWidth ? endState : 0 }, 500, oldProgressAnimation);\n\t            };\n\n\t            if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n\t                setTimeout(oldProgressAnimation, 40);\n\t            }\n\n\t             url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n\t            that.inRequest = true;\n\n\t            var ajaxOptions = {\n\t                type: "GET",\n\t                cache: false,\n\t                url: url,\n\t                dataType: "html",\n\t                data: data,\n\t                xhr: function() {\n\t                    var current = this,\n\t                        request = xhr(),\n\t                        event = current.progressUpload ? "progressUpload" : current.progress ? "progress" : false;\n\n\t                    if (request) {\n\t                        $.each([ request, request.upload ], function () {\n\t                            if (this.addEventListener) {\n\t                                this.addEventListener("progress", function(evt) {\n\t                                    if (event) {\n\t                                        current[event](evt);\n\t                                    }\n\t                                }, false);\n\t                            }\n\t                        });\n\t                    }\n\n\t                    current.noProgress = !(window.XMLHttpRequest && (\'upload\' in new XMLHttpRequest()));\n\t                    return request;\n\t                },\n\n\t                progress: function(evt) {\n\t                    if (evt.lengthComputable) {\n\t                        var percent = parseInt((evt.loaded / evt.total * 100), 10) + "%";\n\t                        statusIcon\n\t                            .stop(true)\n\t                            .addClass("k-progress")\n\t                            .css({\n\t                                "width": percent,\n\t                                "marginLeft": 0\n\t                            });\n\t                    }\n\t                },\n\n\t                error: function (xhr, status) {\n\t                    if (that.trigger("error", { xhr: xhr, status: status })) {\n\t                        this.complete();\n\t                    }\n\t                },\n\n\t                stopProgress: function () {\n\t                    clearInterval(fakeProgress);\n\t                    statusIcon\n\t                        .stop(true)\n\t                        .addClass("k-progress")\n\t                        [0].style.cssText = "";\n\t                },\n\n\t                complete: function (xhr) {\n\t                    that.inRequest = false;\n\t                    if (this.noProgress) {\n\t                        setTimeout(this.stopProgress, 500);\n\t                    } else {\n\t                        this.stopProgress();\n\t                    }\n\n\t                    if (xhr.statusText == "abort") {\n\t                        statusIcon.remove();\n\t                    }\n\t                },\n\n\t                success: function (data) {\n\t                    statusIcon.addClass("k-complete");\n\t                    try {\n\t                        var current = this,\n\t                            loaded = 10;\n\n\t                        if (current.noProgress) {\n\t                            statusIcon.width(loaded+"%");\n\t                            fakeProgress = setInterval(function () {\n\t                                current.progress({ lengthComputable: true, loaded: Math.min(loaded, 100), total: 100 });\n\t                                loaded += 10;\n\t                            }, 40);\n\t                        }\n\n\t                        that.angular("cleanup", function () { return { elements: content.get() }; });\n\t                        kendo.destroy(content);\n\t                        content.html(data);\n\t                    } catch (e) {\n\t                        var console = window.console;\n\n\t                        if (console && console.error) {\n\t                            console.error(e.name + ": " + e.message + " in " + url);\n\t                        }\n\t                        this.error(this.xhr, "error");\n\t                    }\n\n\t                    if (complete) {\n\t                        complete.call(that, content);\n\t                    }\n\n\t                    that.angular("compile", function(){ return { elements: content.get() }; });\n\n\t                    that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n\t                }\n\t            };\n\n\t            if (typeof url === "object") {\n\t                ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n\t                if (isFunction(ajaxOptions.url)) {\n\t                    ajaxOptions.url = ajaxOptions.url();\n\t                }\n\t            }\n\n\t            that.xhr = $.ajax(ajaxOptions);\n\t        }\n\t    });\n\n\t    // client-side rendering\n\t    extend(TabStrip, {\n\t        renderItem: function (options) {\n\t            options = extend({ tabStrip: {}, group: {} }, options);\n\n\t            var empty = templates.empty,\n\t                item = options.item;\n\n\t            return templates.item(extend(options, {\n\t                image: item.imageUrl ? templates.image : empty,\n\t                sprite: item.spriteCssClass ? templates.sprite : empty,\n\t                itemWrapper: templates.itemWrapper\n\t            }, rendering));\n\t        },\n\n\t        renderContent: function (options) {\n\t            return templates.content(extend(options, rendering));\n\t        }\n\t    });\n\n\t    kendo.ui.plugin(TabStrip);\n\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1017)))\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.tabstrip.js?')},"./node_modules/@progress/kendo-ui/js/kendo.textbox.js":
/*!*************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.textbox.js ***!
  \*************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1384);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1247:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.floatinglabel */ "./node_modules/@progress/kendo-ui/js/kendo.floatinglabel.js");\n\n/***/ }),\n\n/***/ 1384:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (f, define) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1018), __webpack_require__(1247)], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function () {\n\n\tvar __meta__ = {// jshint ignore:line\n\t    id: "textbox",\n\t    name: "TextBox",\n\t    category: "web",\n\t    description: "The TextBox widget enables you to style and provide a floating label functionality to input elements",\n\t    depends: ["core", "floatinglabel"]\n\t};\n\n\t(function ($, undefined) {\n\t    var kendo = window.kendo,\n\t        Widget = kendo.ui.Widget,\n\t        ui = kendo.ui,\n\t        isPlainObject = $.isPlainObject,\n\t        NS = ".kendoTextBox",\n\t        CHANGE = "change",\n\t        DISABLED = "disabled",\n\t        READONLY = "readonly",\n\t        INPUT = "k-input",\n\t        FOCUSED = "k-state-focused",\n\t        LABELCLASSES = "k-label k-input-label",\n\t        STATEDISABLED = "k-state-disabled",\n\t        NOCLICKCLASS = "k-no-click",\n\t        ARIA_DISABLED = "aria-disabled",\n\t        proxy = $.proxy;\n\n\t    var TextBox = Widget.extend({\n\t        init: function (element, options) {\n\t            var that = this;\n\n\t            Widget.fn.init.call(that, element, options);\n\t            options = $.extend(true, {}, options);\n\n\t            that.options.value = options.value || that.element.val();\n\t            that.options.readonly = options.readonly !== undefined ? options.readonly : Boolean(that.element.attr("readonly"));\n\t            that.options.enable = options.enable !== undefined ? options.enable : !(Boolean(that.element.attr("disabled")));\n\t            that.options.placeholder = options.placeholder || that.element.attr("placeholder");\n\n\t            that.value(that.options.value);\n\t            that._wrapper();\n\t            that._label();\n\t            that._editable({\n\t                readonly: that.options.readonly,\n\t                disable: !(that.options.enable)\n\t            });\n\n\t            that.element\n\t                .addClass(INPUT)\n\t                .attr("placeholder", that.options.placeholder)\n\t                .attr("autocomplete", "off");\n\n\t            kendo.notify(that);\n\t        },\n\n\t        events: [\n\t            CHANGE\n\t        ],\n\n\t        options: {\n\t            name: \'TextBox\',\n\t            value: \'\',\n\t            readonly: false,\n\t            enable: true,\n\t            placeholder: \'\',\n\t            label: null\n\t        },\n\n\t        value: function(value) {\n\t            var that = this;\n\n\t            if (value === undefined) {\n\t                return that._value;\n\t            }\n\n\t            that._value = value;\n\t            that.element.val(value);\n\t        },\n\n\t        readonly: function(readonly) {\n\t            var that = this;\n\n\t            this._editable({\n\t                readonly: readonly === undefined ? true : readonly,\n\t                disable: false\n\t            });\n\n\t            if (that.floatingLabel) {\n\t                that.floatingLabel.readonly(readonly === undefined ? true : readonly);\n\t            }\n\t        },\n\n\t        enable: function(enable) {\n\t            var that = this;\n\n\t            this._editable({\n\t                readonly: false,\n\t                disable: !(enable = enable === undefined ? true : enable)\n\t            });\n\n\t            if (that.floatingLabel) {\n\t                that.floatingLabel.enable(enable = enable === undefined ? true : enable);\n\t            }\n\t        },\n\n\t        focus: function() {\n\t            var that = this;\n\n\t            that.element[0].focus();\n\t        },\n\n\t        destroy: function() {\n\t            var that = this;\n\n\t            if (that.floatingLabel) {\n\t                that.floatingLabel.destroy();\n\t            }\n\n\t            that.element.off(NS);\n\t            Widget.fn.destroy.call(that);\n\t        },\n\n\t        _editable: function(options) {\n\t            var that = this;\n\t            var element = that.element;\n\t            var wrapper = that.wrapper;\n\t            var disable = options.disable;\n\t            var readonly = options.readonly;\n\n\t            element.off(NS);\n\n\t            if (!readonly && !disable) {\n\t                element.removeAttr(DISABLED)\n\t                       .removeAttr(READONLY)\n\t                       .attr(ARIA_DISABLED, false);\n\n\t                wrapper.removeClass(STATEDISABLED)\n\t                        .removeClass(NOCLICKCLASS);\n\n\t                element.on("focusin" + NS, proxy(that._focusin, that));\n\t                element.on("focusout" + NS, proxy(that._focusout, that));\n\t            } else {\n\t                element.attr(DISABLED, disable)\n\t                       .attr(READONLY, readonly)\n\t                       .attr(ARIA_DISABLED, disable);\n\n\t                wrapper.toggleClass(STATEDISABLED, disable)\n\t                        .toggleClass(NOCLICKCLASS, readonly);\n\t            }\n\t        },\n\n\t        _label: function() {\n\t            var that = this;\n\t            var element = that.element;\n\t            var options = that.options;\n\t            var id = element.attr("id");\n\t            var floating;\n\t            var labelText;\n\n\t            if (options.label !== null) {\n\t                floating = isPlainObject(options.label) ? options.label.floating : false;\n\t                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n\t                if (floating) {\n\t                    that._floatingLabelContainer = that.wrapper.wrap("<span></span>").parent();\n\t                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n\t                }\n\n\t                if (kendo.isFunction(labelText)) {\n\t                    labelText = labelText.call(that);\n\t                }\n\n\t                if (!labelText) {\n\t                    labelText = "";\n\t                }\n\n\t                if (!id) {\n\t                    id = options.name + "_" + kendo.guid();\n\t                    element.attr("id", id);\n\t                }\n\n\t                that._inputLabel = $("<label class=\'" + LABELCLASSES + "\' for=\'" + id + "\'>" + labelText + "</label>\'").insertBefore(that.wrapper);\n\t            }\n\t        },\n\n\t        _focusin: function() {\n\t            var that = this;\n\n\t            that.wrapper.addClass(FOCUSED);\n\t        },\n\n\t        _focusout: function() {\n\t            var that = this;\n\t            var value = that._value;\n\t            var newValue = that.element.val();\n\n\t            that.wrapper.removeClass(FOCUSED);\n\n\t            if (value !== newValue) {\n\t                that._value = newValue;\n\n\t                that.trigger(CHANGE);\n\t            }\n\t        },\n\n\t        _wrapper: function () {\n\t            var that = this;\n\t            var element = that.element;\n\t            var DOMElement = element[0];\n\t            var wrapper;\n\n\t            wrapper = element.wrap("<span class=\'k-widget k-textbox\'></span>").parent();\n\t            wrapper[0].style.cssText = DOMElement.style.cssText;\n\t            DOMElement.style.width = "100%";\n\t            that._inputWrapper = that.wrapper = wrapper.addClass(DOMElement.className).removeClass(\'input-validation-error\');\n\t        }\n\t    });\n\t    ui.plugin(TextBox);\n\t})(window.kendo.jQuery);\n\n\treturn window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.textbox.js?')}}]);