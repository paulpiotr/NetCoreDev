(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{"./node_modules/@progress/kendo-ui/js/editor/main.js":
/*!***********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/editor/main.js ***!
  \***********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(941);\n\tmodule.exports = __webpack_require__(941);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.combobox */ "./node_modules/@progress/kendo-ui/js/kendo.combobox.js");\n\n/***/ }),\n\n/***/ 941:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*jshint scripturl: true */\n\t(function(f, define){\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t        __webpack_require__(942),\n\t        __webpack_require__(6),\n\t        __webpack_require__(943),\n\t        __webpack_require__(944),\n\t        __webpack_require__(945)\n\t    ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function(){\n\n\t(function($,undefined) {\n\n\t    // Imports ================================================================\n\t    var kendo = window.kendo,\n\t        Class = kendo.Class,\n\t        Widget = kendo.ui.Widget,\n\t        os = kendo.support.mobileOS,\n\t        browser = kendo.support.browser,\n\t        extend = $.extend,\n\t        proxy = $.proxy,\n\t        deepExtend = kendo.deepExtend,\n\t        keys = kendo.keys;\n\n\t    var SELECT = "select";\n\t    var SELECT_OVERLAY_SELECTOR = "select.k-select-overlay";\n\t    var PLACEHOLDER_CLASS= "k-placeholder";\n\t    var PLACEHOLDER_TAG_ID = "placeholder";\n\t    var REFRESH_INTERVAL = 200;\n\t    var DEFAULT_LANGUAGE = "en";\n\n\t    // options can be: template (as string), cssClass, title, defaultValue\n\t    var ToolTemplate = Class.extend({\n\t        init: function(options) {\n\t            this.options = options;\n\t        },\n\n\t        getHtml: function() {\n\t            var options = this.options;\n\t            return kendo.template(options.template, {useWithBlock:false})(options);\n\t        }\n\t    });\n\n\t    var EditorUtils = {\n\t        editorWrapperTemplate:\n\t            \'<table cellspacing="0" cellpadding="0" class="k-widget k-editor" role="presentation">\' +\n\t                \'<tbody>\' +\n\t                    \'<tr role="presentation"><td class="k-editor-toolbar-wrap" role="presentation"><ul class="k-toolbar k-editor-toolbar" role="toolbar"></ul></td></tr>\' +\n\t                    \'<tr><td class="k-editable-area"></td></tr>\' +\n\t                \'</tbody>\' +\n\t            \'</table>\',\n\n\t        buttonTemplate:\n\t            \'# var iconCssClass = "k-icon k-i-" + kendo.toHyphens(data.cssClass.replace("k-", ""));#\' +\n\t            \'# var dataPopup = data.popup ? "data-popup" : "";#\' +\n\t            \'<button tabindex="0" role="button" class="k-button k-tool" #= dataPopup # title="#= data.title #" aria-label="#= data.title #">\' +\n\t                \'<span class="#= iconCssClass #"></span>\' +\n\t                \'<span class="k-tool-text k-button-text">#= data.title #</span>\' +\n\t            \'</button>\',\n\n\t        tableWizardButtonTemplate:\n\t            \'# var iconCssClass = "k-icon k-i-" + kendo.toHyphens(data.cssClass.replace("k-", ""));#\' +\n\t            \'# var dataPopup = data.popup ? "data-popup" : "";#\' +\n\t            \'<button tabindex="0" role="button" class="k-tool k-button" #= dataPopup # title="#= data.title #" aria-label="#= data.title #">\'+\n\t                \'<span class="#= iconCssClass #"></span>\' +\n\t                \'<span class="k-tool-text">#= data.title #</span>\'+\n\t            \'</button>\',\n\n\t        colorPickerTemplate:\n\t            \'<input class="k-colorpicker k-icon k-i-#= data.cssClass.replace("k-", "") #" />\',\n\n\t        comboBoxTemplate:\n\t            \'<select title="#= data.title #" aria-label="#= data.title #" class="#= data.cssClass #"></select>\',\n\n\t        dropDownListTemplate:\n\t            \'<span class="k-editor-dropdown"><select title="#= data.title #" aria-label="#= data.title #" class="#= data.cssClass #"></select></span>\',\n\n\t        separatorTemplate:\n\t            \'<span class="k-separator"></span>\',\n\n\t        overflowAnchorTemplate:\n\t            \'<button tabindex="0" role="button" class="k-button k-tool k-overflow-anchor" data-popup\' +\n\t                \' title="#= data.title #" aria-label="#= data.title #" aria-haspopup="true" aria-expanded="false">\' +\n\t                \'<span class="k-icon k-i-more-vertical"></span>\' +\n\t            \'</button>\',\n\n\t        formatByName: function(name, format) {\n\t            for (var i = 0; i < format.length; i++) {\n\t                if ($.inArray(name, format[i].tags) >= 0) {\n\t                    return format[i];\n\t                }\n\t            }\n\t        },\n\n\t        getToolCssClass: function (name) {\n\t            var toolCssClassNames = {\n\n\t                superscript: "sup-script",\n\t                subscript: "sub-script",\n\t                justifyLeft: "align-left",\n\t                justifyCenter: "align-center",\n\t                justifyRight: "align-right",\n\t                justifyFull: "align-justify",\n\t                insertUnorderedList: "list-unordered",\n\t                insertOrderedList: "list-ordered",\n\t                "import": "login",\n\t                indent: "indent-increase",\n\t                outdent: "indent-decrease",\n\t                createLink: "link-horizontal",\n\t                unlink: "unlink-horizontal",\n\t                insertImage: "image",\n\t                insertFile: "file-add",\n\t                viewHtml: "html",\n\t                foreColor: "foreground-color",\n\t                backColor: "paint",\n\t                createTable: "table-insert",\n\t                addColumnLeft: "table-column-insert-left",\n\t                addColumnRight: "table-column-insert-right",\n\t                addRowAbove: "table-row-insert-above",\n\t                addRowBelow: "table-row-insert-below",\n\t                deleteRow: "table-row-delete",\n\t                deleteColumn: "table-column-delete",\n\t                mergeCellsHorizontally: "cells-merge-horizontally",\n\t                mergeCellsVertically: "cells-merge-vertically",\n\t                splitCellHorizontally: "cell-split-horizontally",\n\t                splitCellVertically: "cell-split-vertically",\n\t                tableWizard: "table-properties",\n\t                tableWizardInsert: "table-wizard",\n\t                cleanFormatting: "clear-css",\n\t                copyFormat: "copy-format",\n\t                applyFormat: "apply-format"\n\t            };\n\n\t            var cssClass = toolCssClassNames[name];\n\t            if(cssClass) {\n\t                return cssClass;\n\t            }\n\t            return name;\n\t        },\n\n\t        registerTool: function(toolName, tool) {\n\t            var toolOptions = tool.options;\n\t            if (toolOptions && toolOptions.template) {\n\t                toolOptions.template.options.cssClass = "k-" + EditorUtils.getToolCssClass(toolName);\n\t            }\n\n\t            if (!tool.name) {\n\t                tool.options.name = toolName;\n\t                tool.name = toolName.toLowerCase();\n\t            }\n\n\t            Editor.defaultTools[toolName] = tool;\n\t        },\n\n\t        registerFormat: function(formatName, format) {\n\t            Editor.fn.options.formats[formatName] = format;\n\t        },\n\n\t        cacheComments: function (content, comments) {\n\t            for(var index in comments){\n\t                content = content.replace(comments[index], "{" + index + "}");\n\t            }\n\t            return content;\n\t        },\n\n\t        retrieveComments: function (content, comments) {\n\t            for(var index in comments){\n\t                content = content.replace("{" + index + "}", comments[index]);\n\t            }\n\t            return content;\n\t        }\n\t    };\n\n\t    var messages = {\n\t        bold: "Bold",\n\t        italic: "Italic",\n\t        underline: "Underline",\n\t        strikethrough: "Strikethrough",\n\t        superscript: "Superscript",\n\t        subscript: "Subscript",\n\t        justifyCenter: "Center text",\n\t        justifyLeft: "Align text left",\n\t        justifyRight: "Align text right",\n\t        justifyFull: "Justify",\n\t        insertUnorderedList: "Insert unordered list",\n\t        insertOrderedList: "Insert ordered list",\n\t        indent: "Indent",\n\t        outdent: "Outdent",\n\t        createLink: "Insert hyperlink",\n\t        unlink: "Remove hyperlink",\n\t        insertImage: "Insert image",\n\t        insertFile: "Insert file",\n\t        insertHtml: "Insert HTML",\n\t        viewHtml: "View HTML",\n\t        fontName: "Select font family",\n\t        fontNameInherit: "(inherited font)",\n\t        fontSize: "Select font size",\n\t        fontSizeInherit: "(inherited size)",\n\t        formatBlock: "Format",\n\t        formatting: "Format",\n\t        foreColor: "Color",\n\t        backColor: "Background color",\n\t        style: "Styles",\n\t        emptyFolder: "Empty Folder",\n\t        editAreaTitle: "Editable area. Press F10 for toolbar.",\n\t        uploadFile: "Upload",\n\t        overflowAnchor: "More tools",\n\t        orderBy: "Arrange by:",\n\t        orderBySize: "Size",\n\t        orderByName: "Name",\n\t        invalidFileType: "The selected file \\"{0}\\" is not valid. Supported file types are {1}.",\n\t        deleteFile: \'Are you sure you want to delete "{0}"?\',\n\t        overwriteFile: \'A file with name "{0}" already exists in the current directory. Do you want to overwrite it?\',\n\t        directoryNotFound: "A directory with this name was not found.",\n\t        imageWebAddress: "Web address",\n\t        imageAltText: "Alternate text",\n\t        imageWidth: "Width (px)",\n\t        imageHeight: "Height (px)",\n\t        fileWebAddress: "Web address",\n\t        fileTitle: "Title",\n\t        fileText: "Text",\n\t        linkWebAddress: "Web address",\n\t        linkText: "Text",\n\t        linkToolTip: "ToolTip",\n\t        linkOpenInNewWindow: "Open link in new window",\n\t        dialogUpdate: "Update",\n\t        dialogInsert: "Insert",\n\t        dialogOk: "Ok",\n\t        dialogCancel: "Cancel",\n\t        cleanFormatting: "Clean formatting",\n\t        createTable: "Create a table",\n\t        createTableHint: "Create a {0} x {1} table",\n\t        addColumnLeft: "Add column on the left",\n\t        addColumnRight: "Add column on the right",\n\t        addRowAbove: "Add row above",\n\t        addRowBelow: "Add row below",\n\t        deleteRow: "Delete row",\n\t        deleteColumn: "Delete column",\n\t        mergeCellsHorizontally: "Merge cells horizontally",\n\t        mergeCellsVertically: "Merge cells vertically",\n\t        splitCellHorizontally: "Split cells horizontally",\n\t        splitCellVertically: "Split cells vertically",\n\t        tableWizard: "Table Wizard",\n\t        tableTab: "Table",\n\t        cellTab: "Cell",\n\t        accessibilityTab: "Accessibility",\n\t        caption: "Caption",\n\t        summary: "Summary",\n\t        width: "Width",\n\t        height: "Height",\n\t        units: "Units",\n\t        cellSpacing: "Cell Spacing",\n\t        cellPadding: "Cell Padding",\n\t        cellMargin: "Cell Margin",\n\t        alignment: "Alignment",\n\t        background: "Background",\n\t        cssClass: "CSS Class",\n\t        id: "ID",\n\t        border: "Border",\n\t        borderStyle: "Border Style",\n\t        collapseBorders: "Collapse borders",\n\t        wrapText: "Wrap text",\n\t        associateCellsWithHeaders: "Associate headers",\n\t        alignLeft: "Align Left",\n\t        alignCenter: "Align Center",\n\t        alignRight: "Align Right",\n\t        alignLeftTop: "Align Left Top",\n\t        alignCenterTop: "Align Center Top",\n\t        alignRightTop: "Align Right Top",\n\t        alignLeftMiddle: "Align Left Middle",\n\t        alignCenterMiddle: "Align Center Middle",\n\t        alignRightMiddle: "Align Right Middle",\n\t        alignLeftBottom: "Align Left Bottom",\n\t        alignCenterBottom: "Align Center Bottom",\n\t        alignRightBottom: "Align Right Bottom",\n\t        alignRemove: "Remove Alignment",\n\t        columns: "Columns",\n\t        rows: "Rows",\n\t        selectAllCells: "Select All Cells",\n\t        exportAs: "Export As",\n\t        "import": "Import",\n\t        print: "Print",\n\t        headerRows: "Header Rows",\n\t        headerColumns: "Header Cols",\n\t        tableSummaryPlaceholder: "Summary attribute is not HTML5 compatible.",\n\t        associateNone: "None",\n\t        associateScope: "Associate using \'scope\' attribute",\n\t        associateIds: "Associate using Ids",\n\t        copyFormat: "Copy format",\n\t        applyFormat: "Apply format"\n\t    };\n\n\t    var supportedBrowser = !os || (os.ios && os.flatVersion >= 500) || (!os.ios && typeof(document.documentElement.contentEditable) != \'undefined\');\n\n\t    var toolGroups = {\n\t        basic: [ "bold", "italic", "underline" ],\n\t        alignment: [ "justifyLeft", "justifyCenter", "justifyRight" ],\n\t        lists: [ "insertUnorderedList", "insertOrderedList" ],\n\t        indenting: [ "indent", "outdent" ],\n\t        formatPainter: [ "copyFormat", "applyFormat" ],\n\t        links: [ "createLink", "unlink" ],\n\t        tables: [ "tableWizard", "createTable", "addColumnLeft", "addColumnRight", "addRowAbove", "addRowBelow", "deleteRow", "deleteColumn", "mergeCellsHorizontally", "mergeCellsVertically", "splitCellHorizontally", "splitCellVertically" ]\n\t    };\n\n\t    var Editor = Widget.extend({\n\t        init: function (element, options) {\n\t            var that = this,\n\t                value,\n\t                editorNS = kendo.ui.editor,\n\t                toolbarContainer,\n\t                toolbarOptions,\n\t                type, comments;\n\t            var domElement;\n\t            var dom = editorNS.Dom;\n\n\t            /* suppress initialization in mobile webkit devices (w/o proper contenteditable support) */\n\t            if (!supportedBrowser) {\n\t                return;\n\t            }\n\n\t            Widget.fn.init.call(that, element, options);\n\n\t            that.options = deepExtend({}, that.options, options);\n\t            that.options.tools = that.options.tools.slice();\n\n\t            element = that.element;\n\t            domElement = element[0];\n\n\t            type = dom.name(domElement);\n\n\t            this._registerHandler(\n\t                element.closest("form"), "submit", proxy(that.update, that, undefined)\n\t            );\n\n\t            toolbarOptions = extend({}, that.options);\n\t            toolbarOptions.editor = that;\n\n\t            if (type == "textarea") {\n\t                that._wrapTextarea();\n\n\t                toolbarContainer = that.wrapper.find(".k-editor-toolbar");\n\n\t                if (domElement.id) {\n\t                    toolbarContainer.attr("aria-controls", domElement.id);\n\t                }\n\t            } else {\n\t                that.element.attr("contenteditable", true).addClass("k-widget k-editor k-editor-inline");\n\n\t                toolbarOptions.popup = true;\n\n\t                toolbarContainer = $(\'<ul class="k-toolbar k-editor-toolbar" role="toolbar" />\').insertBefore(element);\n\t            }\n\n\t            that.toolbar = new editorNS.Toolbar(toolbarContainer[0], toolbarOptions);\n\n\t            that.toolbar.bindTo(that);\n\n\t            if (type == "textarea") {\n\t                setTimeout(function () {\n\t                    var heightStyle = that.wrapper[0].style.height;\n\t                    var expectedHeight = parseInt(heightStyle, 10);\n\t                    var actualHeight = that.wrapper.height();\n\t                    if (heightStyle.indexOf("px") > 0 && !isNaN(expectedHeight) && actualHeight > expectedHeight) {\n\t                        that.wrapper.height(expectedHeight - (actualHeight - expectedHeight));\n\t                    }\n\t                });\n\t            }\n\n\t            that._resizable();\n\t            that._initializeContentElement(that);\n\n\t            that.keyboard = new editorNS.Keyboard([\n\t                new editorNS.BackspaceHandler(that),\n\t                new editorNS.TypingHandler(that),\n\t                new editorNS.SystemHandler(that),\n\t                new editorNS.SelectAllHandler(that)\n\t            ]);\n\n\t            that.clipboard = new editorNS.Clipboard(this);\n\n\t            that.undoRedoStack = new kendo.util.UndoRedoStack();\n\n\t            if (options && options.value) {\n\t                value = options.value;\n\t            } else if (that.textarea) {\n\t                // indented HTML introduces problematic ranges in IE\n\t                value = domElement.value;\n\n\t                // revert encoding of value when content is fetched from cache\n\t                if (that.options.encoded && domElement.defaultValue && domElement.defaultValue.trim().length) {\n\t                    value = domElement.defaultValue;\n\t                }\n\n\t                comments = dom.getAllComments($("<div></div>").html(value)[0]);\n\t                value = EditorUtils.cacheComments(value, comments);\n\t                value = value.replace(/[\\r\\n\\v\\f\\t ]+/ig, " ");\n\t                value = EditorUtils.retrieveComments(value, comments);\n\t            } else {\n\t                value = domElement.innerHTML;\n\t            }\n\n\t            that.value(value || \'\\ufeff\');\n\n\t            // using $.proxy here will break #5337\n\t            this._registerHandler(document, {\n\t                "mousedown": function() { that._endTyping(); },\n\t                "mouseup": function(e) { that._mouseup(e); }\n\t            });\n\n\t            that._initializeImmutables();\n\n\t            that.toolbar.resize();\n\n\t            kendo.notify(that);\n\t        },\n\n\t        setOptions: function(options) {\n\t            var editor = this;\n\n\t            Widget.fn.setOptions.call(editor, options);\n\t            if (options.tools) {\n\t                editor.toolbar.bindTo(editor);\n\t            }\n\n\t            this._initializePlaceholder();\n\t        },\n\n\t        _togglePlaceholder: function(show) {\n\t            var that = this,\n\t                body = that.body,\n\t                $body = $(body),\n\t                placeholder = that.options.placeholder;\n\n\t            if(!that.textarea || !placeholder) {\n\t                return;\n\t            }\n\n\t            $body.attr(\'aria-label\', function() {\n\t                return  show ? placeholder : "";\n\t            });\n\n\t            $body.toggleClass(PLACEHOLDER_CLASS, show);\n\t        },\n\n\t        _endTyping: function() {\n\t            var keyboard = this.keyboard;\n\n\t            try {\n\t                if (keyboard.isTypingInProgress()) {\n\t                    keyboard.endTyping(true);\n\t                    this.saveSelection();\n\t                }\n\t            } catch (e) { }\n\t        },\n\n\t        _selectionChange: function() {\n\t            this._selectionStarted = false;\n\t            this.saveSelection();\n\t            this.trigger("select", {});\n\t        },\n\n\t        _resizable: function() {\n\t            var resizable = this.options.resizable;\n\t            var isResizable = $.isPlainObject(resizable) ? (resizable.content === undefined || resizable.content === true) : resizable;\n\n\t            if (isResizable && this.textarea) {\n\t                var draggableElement = $("<div class=\'k-resize-handle\'><span class=\'k-icon k-i-arrow-45-down-right\'></span></div>")\n\t                    .insertAfter(this.textarea);\n\n\t                this.wrapper.addClass(\'k-resizable\');\n\n\t                this.wrapper.kendoResizable(extend({}, this.options.resizable, {\n\t                    draggableElement: draggableElement,\n\t                    start: function(e) {\n\t                        var editor = this.editor = $(e.currentTarget).closest(".k-editor");\n\t                        this.initialSize = editor.height();\n\t                        editor.find("td:last").append("<div class=\'k-overlay\' />");\n\t                    },\n\t                    resize: function(e) {\n\t                        var delta = e.y.initialDelta;\n\t                        var newSize = this.initialSize + delta;\n\t                        var min = this.options.min || 0;\n\t                        var max = this.options.max || Infinity;\n\n\t                        newSize = Math.min(max, Math.max(min, newSize));\n\n\t                        this.editor.height(newSize);\n\t                    },\n\t                    resizeend: function() {\n\t                        this.editor.find(".k-overlay").remove();\n\t                        this.editor = null;\n\t                    }\n\t                }));\n\n\t                if (kendo.support.mobileOS.ios) {\n\t                    var resizableWidget = this.wrapper.getKendoResizable();\n\t                    resizableWidget.draggable.options.ignore = SELECT_OVERLAY_SELECTOR;\n\t                }\n\t            }\n\t        },\n\n\t        _initializeTableResizing: function() {\n\t            var editor = this;\n\n\t            kendo.ui.editor.TableResizing.create(editor);\n\n\t            editor._showTableResizeHandlesProxy = proxy(editor._showTableResizeHandles, editor);\n\t            editor.bind(SELECT, editor._showTableResizeHandlesProxy);\n\t        },\n\n\t        _destroyTableResizing: function() {\n\t            var editor = this;\n\t            var tableResizing = editor.tableResizing;\n\n\t            if (tableResizing) {\n\t                tableResizing.destroy();\n\t                editor.tableResizing = null;\n\t            }\n\n\t            if (editor._showTableResizeHandlesProxy) {\n\t                editor.unbind(SELECT, editor._showTableResizeHandlesProxy);\n\t            }\n\t        },\n\n\t        _showTableResizeHandles: function() {\n\t            var editor = this;\n\t            var tableResizing = editor.tableResizing;\n\n\t            if (tableResizing) {\n\t                tableResizing.showResizeHandles();\n\t            }\n\t        },\n\n\t        _initializeColumnResizing: function() {\n\t            kendo.ui.editor.ColumnResizing.create(this);\n\t        },\n\n\t        _destroyColumnResizing: function() {\n\t            var editor = this;\n\n\t            if (editor.columnResizing) {\n\t                editor.columnResizing.destroy();\n\t                editor.columnResizing = null;\n\t            }\n\t        },\n\n\t        _initializeRowResizing: function() {\n\t            kendo.ui.editor.RowResizing.create(this);\n\t        },\n\n\t        _destroyRowResizing: function() {\n\t            var editor = this;\n\n\t            if (editor.rowResizing) {\n\t                editor.rowResizing.destroy();\n\t                editor.rowResizing = null;\n\t            }\n\t        },\n\n\t        _wrapTextarea: function() {\n\t            var that = this,\n\t                textarea = that.element,\n\t                w = textarea[0].style.width,\n\t                h = textarea[0].style.height,\n\t                template = EditorUtils.editorWrapperTemplate,\n\t                editorWrap = $(template).insertBefore(textarea).width(w).height(h),\n\t                editArea = editorWrap.find(".k-editable-area");\n\n\t            textarea.attr("autocomplete", "off")\n\t                .appendTo(editArea).addClass("k-content k-raw-content").css("display", "none");\n\n\t            that.textarea = textarea;\n\t            that.wrapper = editorWrap;\n\t        },\n\n\t        _createContentElement: function(stylesheets) {\n\t            var editor = this;\n\t            var iframe, wnd, doc;\n\t            var textarea = editor.textarea;\n\t            var specifiedDomain = editor.options.domain;\n\t            var domain = specifiedDomain || document.domain;\n\t            var domainScript = "";\n\t            var src = \'javascript:""\';\n\t            var lang ="";\n\n\t            textarea.hide();\n\n\t            iframe = $("<iframe />", { title: editor.options.messages.editAreaTitle, frameBorder: "0" })[0];\n\n\t            $(iframe)\n\t                .css("display", "")\n\t                .addClass("k-content")\n\t                .attr("tabindex", textarea[0].tabIndex)\n\t                .insertBefore(textarea);\n\n\t            // automatically relax same-origin policy if document.domain != location.hostname,\n\t            // or forcefully relax if options.domain is specified (for document.domain = document.domain scenario)\n\t            if (specifiedDomain || domain != location.hostname) {\n\t                // relax same-origin policy\n\t                domainScript = "<script>document.domain=\\"" + domain + "\\"<\/script>";\n\t                src = "javascript:document.write(\'" + domainScript + "\')";\n\t                iframe.src = src;\n\t            }\n\n\t            wnd = iframe.contentWindow || iframe;\n\t            doc = wnd.document || iframe.contentDocument;\n\n\t            $(iframe).one("load", function() {\n\t                editor.toolbar.decorateFrom(doc.body);\n\t            });\n\n\t            lang = document.getElementsByTagName("html")[0].getAttribute("lang") || DEFAULT_LANGUAGE;\n\n\t            doc.open();\n\t            doc.write(\n\t                "<!DOCTYPE html><html lang=\'" + lang + "\'><head>" +\n\t                "<meta charset=\'utf-8\' />" +\n\t                "<title>Kendo UI Editor content</title>" +\n\t                "<style>" +\n\t                    "html{padding:0;margin:0;height:100%;min-height:100%;cursor:text;}" +\n\t                    "body{padding:0;margin:0;}" +\n\t                    "body{box-sizing:border-box;font-size:12px;font-family:Verdana,Geneva,sans-serif;margin-top:-1px;padding:5px .4em 0;" +\n\t                    "word-wrap: break-word;-webkit-nbsp-mode: space;-webkit-line-break: after-white-space;" +\n\t                    (kendo.support.isRtl(textarea) ? "direction:rtl;" : "") +\n\t                    (os.ios ? "word-break:keep-all;" : "") +\n\t                    "}" +\n\t                    "h1{font-size:2em;margin:.67em 0}h2{font-size:1.5em}h3{font-size:1.16em}h4{font-size:1em}h5{font-size:.83em}h6{font-size:.7em}" +\n\t                    "p{margin:0 0 1em;}.k-marker{display:none;}.k-paste-container,.Apple-style-span{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}" +\n\t                    "ul,ol{padding-left:2.5em}" +\n\t                    "span{-ms-high-contrast-adjust:none;}" +\n\t                    "a{color:#00a}" +\n\t                    "code{font-size:1.23em}" +\n\t                    "telerik\\\\3Ascript{display: none;}" +\n\t                    ".k-table{width:100%;border-spacing:0;margin: 0 0 1em;}" +\n\t                    ".k-table td{min-width:1px;padding:.2em .3em;}" +\n\t                    ".k-table,.k-table td{outline:0;border: 1px dotted #ccc;}" +\n\t                    ".k-table th{outline:0;border: 1px dotted #999;}" +\n\t                    ".k-table p{margin:0;padding:0;}" +\n\t                    ".k-column-resize-handle-wrapper {position: absolute; height: 10px; width:10px; cursor: col-resize; z-index: 2;}" +\n\t                    ".k-column-resize-handle {width: 100%; height: 100%;}" +\n\t                    ".k-column-resize-handle > .k-column-resize-marker {width:2px; height:100%; margin:0 auto; background-color:#00b0ff; display:none; opacity:0.8;}" +\n\t                    ".k-row-resize-handle-wrapper {position: absolute; cursor: row-resize; z-index:2; width: 10px; height: 10px;}" +\n\t                    ".k-row-resize-handle {display: table; width: 100%; height: 100%;}" +\n\t                    ".k-row-resize-marker-wrapper{display: table-cell; height:100%; width:100%; margin:0; padding:0; vertical-align: middle;}" +\n\t                    ".k-row-resize-marker{margin: 0; padding:0; width:100%; height:2px; background-color: #00b0ff; opacity:0.8; display:none;}" +\n\t                    ".k-table-resize-handle-wrapper {position: absolute; background-color: #fff; border: 1px solid #000; z-index: 100; width: 5px; height: 5px;}" +\n\t                    ".k-table-resize-handle {width: 100%; height: 100%;}" +\n\t                    ".k-table-resize-handle.k-resize-east{cursor:e-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-north{cursor:n-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-northeast{cursor:ne-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-northwest{cursor:nw-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-south{cursor:s-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-southeast{cursor:se-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-southwest{cursor:sw-resize;}" +\n\t                    ".k-table-resize-handle.k-resize-west{cursor:w-resize;}" +\n\t                    ".k-table.k-table-resizing{opacity:0.6;}" +\n\t                    ".k-placeholder{color:grey}" +\n\t                    "k\\\\:script{display:none;}" +\n\t                "</style>" +\n\t                domainScript +\n\t                $.map(stylesheets, function(href){\n\t                    return "<link rel=\'stylesheet\' href=\'" + href + "\'>";\n\t                }).join("") +\n\t                "</head><body autocorrect=\'off\' contenteditable=\'true\'></body></html>"\n\t            );\n\t            doc.close();\n\n\t            return wnd;\n\t        },\n\n\t        _blur: function() {\n\t            var textarea = this.textarea;\n\t            var old = textarea ? textarea.val() : this._oldValue;\n\t            var value = this.options.encoded ? this.encodedValue() : this.value();\n\n\t            this.update();\n\n\t            if (textarea) {\n\t                textarea.trigger("blur");\n\t            }\n\n\t            if (value != old) {\n\t                this.trigger("change");\n\t                if(textarea) {\n\t                    textarea.trigger("change");\n\t                }\n\t            }\n\t        },\n\n\t        _spellCorrect: function(editor) {\n\t            var beforeCorrection;\n\t            var falseTrigger = false;\n\n\t            this._registerHandler(editor.body, {\n\t                "contextmenu": function() {\n\t                    editor.one("select", function() {\n\t                        beforeCorrection = null;\n\t                    });\n\n\t                    editor._spellCorrectTimeout = setTimeout(function() {\n\t                        beforeCorrection = new kendo.ui.editor.RestorePoint(editor.getRange(), editor.body);\n\t                        falseTrigger = false;\n\t                    }, 10);\n\t                },\n\t                "input": function() {\n\t                    if (!beforeCorrection) {\n\t                        return;\n\t                    }\n\n\t                    if (kendo.support.browser.mozilla && !falseTrigger) {\n\t                        falseTrigger = true;\n\t                        return;\n\t                    }\n\n\t                    kendo.ui.editor._finishUpdate(editor, beforeCorrection);\n\t                }\n\t            });\n\t        },\n\n\t        _registerHandler: function(element, type, handler) {\n\t            var editor = this;\n\t            var NS = ".kendoEditor";\n\t            var eventNames;\n\t            var i;\n\n\t            element = $(element);\n\n\t            if (!this._handlers) {\n\t                this._handlers = [];\n\t            }\n\n\t            if (element.length) {\n\t                if ($.isPlainObject(type)) {\n\t                    for (var t in type) {\n\t                        if (type.hasOwnProperty(t)) {\n\t                            this._registerHandler(element, t, type[t]);\n\t                        }\n\t                    }\n\t                } else {\n\t                    //map the original event to handle interaction on mobile platforms\n\t                    eventNames = kendo.applyEventMap(type).split(" ");\n\n\t                    for (i = 0; i < eventNames.length; i++) {\n\t                        editor._handlers.push({\n\t                            element: element,\n\t                            type: eventNames[i] + NS,\n\t                            handler: handler\n\t                        });\n\n\t                        element.on(eventNames[i] + NS, handler);\n\t                    }\n\t                }\n\t            }\n\t        },\n\n\t        _deregisterHandlers: function() {\n\t            var handlers = this._handlers;\n\n\t            for (var i = 0; i < handlers.length; i++) {\n\t                var h = handlers[i];\n\t                h.element.off(h.type, h.handler);\n\t            }\n\n\t            this._handlers = [];\n\t        },\n\n\t        _initializeContentElement: function() {\n\t            var editor = this;\n\t            var doc;\n\t            var blurTrigger;\n\t            var mousedownTrigger;\n\n\t            if (editor.textarea) {\n\t                editor.window = editor._createContentElement(editor.options.stylesheets);\n\t                doc = editor.document = editor.window.contentDocument || editor.window.document;\n\n\t                // Ensure that body exists as various Firefox plugins can cause a delay of the body creation\n\t                // https://github.com/telerik/kendo-ui-core/issues/3515\n\t                if (!doc.body) {\n\t                    var body = doc.createElement("body");\n\t                    body.setAttribute("contenteditable", "true");\n\t                    body.setAttribute("autocorrect", "off");\n\t                    doc.getElementsByTagName("html")[0].appendChild(body);\n\n\t                    var interval = setInterval(function (){\n\t                        if ($(editor.document).find("body").length > 1) {\n\t                            $(editor.document).find("body:last").remove();\n\t                            window.clearInterval(interval);\n\t                        }\n\t                    },10);\n\t                }\n\n\t                editor.body = doc.body;\n\n\t                blurTrigger = editor.window;\n\t                mousedownTrigger = doc;\n\n\t                this._registerHandler(doc, "mouseup", proxy(this._mouseup, this));\n\t            } else {\n\t                editor.window = window;\n\t                doc = editor.document = document;\n\t                editor.body = editor.element[0];\n\n\t                blurTrigger = editor.body;\n\t                mousedownTrigger = editor.body;\n\n\t                editor.toolbar.decorateFrom(editor.body);\n\t            }\n\n\t            this._registerHandler(blurTrigger, "blur", proxy(this._blur, this));\n\t            editor._registerHandler(mousedownTrigger, "down", proxy(editor._mousedown, editor));\n\n\t            try {\n\t                doc.execCommand("enableInlineTableEditing", null, false);\n\t            } catch(e) { }\n\n\t            if (kendo.support.touch) {\n\t                this._registerHandler(doc, {\n\t                    "keydown": function() {\n\t                        // necessary in iOS when touch events are bound to the page\n\t                        if (kendo._activeElement() != doc.body) {\n\t                            editor.window.focus();\n\t                        }\n\t                    }\n\t                });\n\t            }\n\n\t            this._initializePlaceholder();\n\n\t            this._spellCorrect(editor);\n\n\t            this._registerHandler(editor.document, {\n\t                "mouseover dragenter": function(e){\n\t                    var height = $(editor.body).height();\n\t                    var htmlHeight = $(editor.body.parentElement).height();\n\n\t                    if (htmlHeight > height && e.target.nodeName.toLowerCase() === "html") {\n\t                        editor._cachedHeight = "" + editor.body.style.height;\n\t                        editor.body.style.height = "100%";\n\t                    }\n\t                },\n\t                "mouseout dragleave drop contextmenu": function(e){\n\t                    var restoreHeight = function(){\n\t                        if (editor._cachedHeight !== undefined && e.target === editor.body) {\n\t                            editor.body.style.height = editor._cachedHeight;\n\t                            delete editor._cachedHeight;\n\t                        }\n\t                    };\n\n\t                    if (e.type === "contextmenu") {\n\t                        setTimeout(function(){\n\t                            restoreHeight();\n\t                        }, 10);\n\t                    } else {\n\t                        restoreHeight();\n\t                    }\n\n\t                }\n\t            });\n\n\t            this._registerHandler(editor.body, {\n\t                "keydown": function (e) {\n\t                    var range;\n\n\t                    if ((e.keyCode === keys.BACKSPACE || e.keyCode === keys.DELETE) && editor.body.getAttribute("contenteditable") !== "true") {\n\t                        return false;\n\t                    }\n\n\t                    if (e.keyCode === keys.F10) {\n\t                        // Handling with timeout to avoid the default IE menu\n\t                        setTimeout(proxy(editor.toolbar.focus, editor.toolbar), 100);\n\t                        editor.toolbar.preventPopupHide = true;\n\t                        e.preventDefault();\n\t                        return;\n\t                    } else if (e.keyCode == keys.LEFT || e.keyCode == keys.RIGHT) {\n\t                        // skip bom nodes when navigating with arrows\n\t                        range = editor.getRange();\n\t                        var left = e.keyCode == keys.LEFT;\n\t                        var container = range[left ? "startContainer" : "endContainer"];\n\t                        var offset = range[left ? "startOffset" : "endOffset"];\n\t                        var direction = left ? -1 : 1;\n\n\t                        var next = offset + direction;\n\t                        var nextChar = left ? next : offset;\n\n\t                        if (container.nodeType == 3 && container.nodeValue[nextChar] == "\\ufeff") {\n\t                            range.setStart(container, next);\n\t                            range.collapse(true);\n\t                            editor.selectRange(range);\n\t                        }\n\t                    }\n\n\t                    var tools = editor.toolbar.tools;\n\t                    var toolName = editor.keyboard.toolFromShortcut(tools, e);\n\t                    var toolOptions = toolName ? tools[toolName].options : {};\n\t                    if (toolName && !toolOptions.keyPressCommand) {\n\t                        e.preventDefault();\n\n\t                        if (!/^(undo|redo)$/.test(toolName)) {\n\t                            editor.keyboard.endTyping(true);\n\t                        }\n\n\t                        editor.trigger("keydown", e);\n\t                        editor.exec(toolName);\n\t                        editor._runPostContentKeyCommands(e);\n\n\t                        return false;\n\t                    }\n\n\t                    editor.keyboard.clearTimeout();\n\n\t                    editor.keyboard.keydown(e);\n\t                },\n\t                "keypress": function(e) {\n\t                    setTimeout(function () {\n\t                        editor._runPostContentKeyCommands(e);\n\t                        editor._showTableResizeHandles();\n\t                    }, 0);\n\t                },\n\t                "keyup": function (e) {\n\t                    var selectionCodes = [\n\t                       keys.BACKSPACE,\n\t                       keys.TAB,\n\t                       keys.PAGEUP,\n\t                       keys.PAGEDOWN,\n\t                       keys.END,\n\t                       keys.HOME,\n\t                       keys.LEFT,\n\t                       keys.UP,\n\t                       keys.RIGHT,\n\t                       keys.DOWN,\n\t                       keys.INSERT,\n\t                       keys.DELETE\n\t                    ];\n\n\t                    if ($.inArray(e.keyCode, selectionCodes) > -1 || (e.keyCode == 65 && e.ctrlKey && !e.altKey && !e.shiftKey)) {\n\t                        window.clearTimeout(this._refreshInterval);\n\t                        this._refreshInterval = window.setTimeout(function(){\n\t                            editor._selectionChange();\n\t                        }, REFRESH_INTERVAL);\n\t                    }\n\n\t                    editor.keyboard.keyup(e);\n\t                },\n\t                "click": function(e) {\n\t                    var dom = kendo.ui.editor.Dom, range;\n\n\t                    if (dom.name(e.target) === "img") {\n\t                        range = editor.createRange();\n\t                        range.selectNode(e.target);\n\t                        editor.selectRange(range);\n\t                    }\n\t                },\n\t                "cut copy paste drop dragover": function (e) {\n\t                    editor.clipboard["on" + e.type](e);\n\t                },\n\t                "focusin": function () {\n\t                    if (editor.body.hasAttribute("contenteditable")) {\n\t                        $(this).addClass("k-state-active");\n\t                        editor.toolbar.show();\n\t                        editor._togglePlaceholder(false);\n\t                    }\n\t                },\n\t                "focusout": function() {\n\t                    setTimeout(function() {\n\t                        var active = kendo._activeElement();\n\t                        var body = editor.body;\n\t                        var toolbar = editor.toolbar;\n\t                        if (toolbar.options.popup) {\n\t                            var toolbarContainerElement = toolbar.window.element.get(0);\n\t                            if (toolbarContainerElement && !($.contains(toolbarContainerElement, active) || toolbarContainerElement == active)) {\n\t                                toolbar.preventPopupHide = false;\n\t                            }\n\t                        }\n\t                        if (active != body && !$.contains(body, active) && !$(active).is(".k-editortoolbar-dragHandle") && !toolbar.focused()) {\n\t                            $(body).removeClass("k-state-active");\n\t                            toolbar.hide();\n\t                        }\n\n\t                        editor._togglePlaceholder(!editor.value().trim());\n\t                    }, 10);\n\t                }\n\t            });\n\n\t            editor._initializeColumnResizing();\n\t            editor._initializeRowResizing();\n\t            editor._initializeTableResizing();\n\t        },\n\n\t        _initializePlaceholder: function() {\n\t            var that = this,\n\t                placeholder = that.options.placeholder,\n\t                style, $head;\n\n\t            if(!that.textarea || !placeholder) {\n\t                return;\n\t            }\n\n\t            style = "<style id=\'"+ PLACEHOLDER_TAG_ID +"\'>." +\n\t                        PLACEHOLDER_CLASS +  ":before { content: \'"+ placeholder + "\'; }" +\n\t                    "</style>";\n\n\t            $head = $(that.document.head);\n\t            $head.find("#" + PLACEHOLDER_TAG_ID).remove();\n\t            $head.append(style);\n\n\t            that._togglePlaceholder(!that.value().trim());\n\t        },\n\n\t        _initializeImmutables: function(){\n\t            var that = this,\n\t                editorNS = kendo.ui.editor;\n\n\t            if (that.options.immutables){\n\t                that.immutables = new editorNS.Immutables(that);\n\t            }\n\t        },\n\n\t        _mousedown: function (e) {\n\t            var editor = this;\n\t            editor._selectionStarted = true;\n\n\t            if ($(editor.body).parents(\'.k-window\').length) {\n\t                e.stopPropagation();\n\t            }\n\n\t            // handle middle-click and ctrl-click on links\n\t            if (browser.gecko) {\n\t                return;\n\t            }\n\n\t            var target = $(e.target).closest("a[href]");\n\n\t            if ((e.which == 2 || (e.which == 1 && e.ctrlKey)) && target &&  target.is("a[href]")) {\n\t                window.open(target.attr("href"), "_new");\n\t            }\n\n\t            if(e.target.tagName && e.target.tagName.toLowerCase() === "html") {\n\t                setTimeout(function(){\n\t                    editor.body.focus();\n\t                }, 0);\n\t            }\n\t        },\n\n\t        _mouseup: function(e) {\n\t            var that = this;\n\n\t            if (kendo.support.mobileOS.ios && e && $(e.target).is(SELECT_OVERLAY_SELECTOR)) {\n\t                return;\n\t            }\n\n\t            if (that._selectionStarted) {\n\t                setTimeout(function() {\n\t                    that._selectionChange();\n\t                }, 1);\n\t            }\n\t        },\n\n\t        _runPostContentKeyCommands: function (e) {\n\t            var range = this.getRange();\n\t            var tools = this.keyboard.toolsFromShortcut(this.toolbar.tools, e);\n\n\t            for (var i = 0; i < tools.length; i++) {\n\t                var tool = tools[i];\n\t                var o = tool.options;\n\t                if (!o.keyPressCommand) {\n\t                    continue;\n\t                }\n\n\t                var cmd = new o.command({range: range});\n\t                if (cmd.changesContent()) {\n\t                    this.keyboard.endTyping(true);\n\t                    this.exec(tool.name);\n\t                }\n\t            }\n\t        },\n\n\t        refresh: function() {\n\t            var that = this;\n\n\t            if (that.textarea) {\n\t                that._destroyResizings();\n\t                // preserve updated value before re-initializing\n\t                // don\'t use update() to prevent the editor from encoding the content too early\n\t                var value = that.value();\n\t                that.textarea.val(value);\n\t                that.wrapper.find("iframe").remove();\n\t                that._initializeContentElement(that);\n\t                that.value(value);\n\t            }\n\t        },\n\n\t        events: [\n\t            "select",\n\t            "change",\n\t            "execute",\n\t            "error",\n\t            "paste",\n\t            "keydown",\n\t            "keyup"\n\t        ],\n\n\t        options: {\n\t            name: "Editor",\n\t            messages: messages,\n\t            placeholder: "",\n\t            formats: {},\n\t            encoded: true,\n\t            domain: null,\n\t            resizable: false,\n\t            deserialization: {\n\t                custom: null\n\t            },\n\t            serialization: {\n\t                entities: true,\n\t                semantic: true,\n\t                scripts: false\n\t            },\n\t            pasteCleanup: {\n\t                all: false,\n\t                css: false,\n\t                custom: null,\n\t                keepNewLines: false,\n\t                msAllFormatting: false,\n\t                msConvertLists: true,\n\t                msTags: true,\n\t                none: false,\n\t                span: false\n\t            },\n\t            stylesheets: [],\n\t            dialogOptions: {\n\t                modal: true, resizable: false, draggable: true,\n\t                animation: false\n\t            },\n\t            imageBrowser: null,\n\t            fileBrowser: null,\n\t            fontName: [\n\t                { text: "Arial", value: "Arial, Helvetica, sans-serif" },\n\t                { text: "Courier New", value: "\\"Courier New\\", Courier, monospace" },\n\t                { text: "Georgia", value: "Georgia, serif" },\n\t                { text: "Impact", value: "Impact, Charcoal, sans-serif" },\n\t                { text: "Lucida Console", value: "\\"Lucida Console\\", Monaco, monospace" },\n\t                { text: "Tahoma", value: "Tahoma, Geneva, sans-serif" },\n\t                { text: "Times New Roman", value: "\\"Times New Roman\\", Times, serif" },\n\t                { text: "Trebuchet MS", value: "\\"Trebuchet MS\\", Helvetica, sans-serif" },\n\t                { text: "Verdana", value: "Verdana, Geneva, sans-serif" }\n\t            ],\n\t            fontSize: [\n\t                { text: "1 (8pt)",  value: "xx-small" },\n\t                { text: "2 (10pt)", value: "x-small" },\n\t                { text: "3 (12pt)", value: "small" },\n\t                { text: "4 (14pt)", value: "medium" },\n\t                { text: "5 (18pt)", value: "large" },\n\t                { text: "6 (24pt)", value: "x-large" },\n\t                { text: "7 (36pt)", value: "xx-large" }\n\t            ],\n\t            formatBlock: [\n\t                { text: "Paragraph", value: "p" },\n\t                { text: "Quotation", value: "blockquote" },\n\t                { text: "Heading 1", value: "h1" },\n\t                { text: "Heading 2", value: "h2" },\n\t                { text: "Heading 3", value: "h3" },\n\t                { text: "Heading 4", value: "h4" },\n\t                { text: "Heading 5", value: "h5" },\n\t                { text: "Heading 6", value: "h6" }\n\t            ],\n\t            tools: [].concat.call(\n\t                ["formatting"],\n\t                toolGroups.basic,\n\t                toolGroups.alignment,\n\t                toolGroups.formatPainter,\n\t                toolGroups.lists,\n\t                toolGroups.indenting,\n\t                toolGroups.links,\n\t                ["insertImage"],\n\t                toolGroups.tables\n\t            )\n\t        },\n\n\t        destroy: function() {\n\t            var editor = this;\n\n\t            Widget.fn.destroy.call(this);\n\n\t            this._endTyping(true);\n\n\t            this._deregisterHandlers();\n\n\t            clearTimeout(this._spellCorrectTimeout);\n\n\t            this._focusOutside();\n\n\t            this.toolbar.destroy();\n\n\t            editor._destroyUploadWidget();\n\n\t            editor._destroyResizings();\n\n\t            kendo.destroy(this.wrapper);\n\t        },\n\n\t        _destroyResizings: function() {\n\t            var editor = this;\n\n\t            editor._destroyTableResizing();\n\t            kendo.ui.editor.TableResizing.dispose(editor);\n\t            editor._destroyRowResizing();\n\t            kendo.ui.editor.RowResizing.dispose(editor);\n\t            editor._destroyColumnResizing();\n\t            kendo.ui.editor.ColumnResizing.dispose(editor);\n\t        },\n\n\t        _focusOutside: function () {\n\t            // move focus outside the Editor, see https://github.com/telerik/kendo/issues/3673\n\t            if (kendo.support.browser.msie && this.textarea) {\n\t                var tempInput = $("<input style=\'position:fixed;left:1px;top:1px;width:1px;height:1px;font-size:0;border:0;opacity:0\' />").appendTo(document.body).focus();\n\t                tempInput.blur().remove();\n\t            }\n\t        },\n\n\t        _destroyUploadWidget: function(){\n\t            var editor = this;\n\t            if (editor._uploadWidget) {\n\t                editor._uploadWidget.destroy();\n\t                editor._uploadWidget = null;\n\t            }\n\t        },\n\n\t        state: function(toolName) {\n\t            var tool = Editor.defaultTools[toolName];\n\t            var finder = tool && (tool.options.finder || tool.finder);\n\t            var RangeUtils = kendo.ui.editor.RangeUtils;\n\t            var range, textNodes;\n\n\t            if (finder) {\n\t                range = this.getRange();\n\n\t                textNodes = RangeUtils.textNodes(range);\n\n\t                if (!textNodes.length && range.collapsed) {\n\t                    textNodes = [range.startContainer];\n\t                }\n\n\t                return finder.getFormat ? finder.getFormat(textNodes) : finder.isFormatted(textNodes);\n\t            }\n\n\t            return false;\n\t        },\n\n\t        value: function (html) {\n\t            var body = this.body,\n\t                editorNS = kendo.ui.editor,\n\t                options = this.options,\n\t                currentHtml = editorNS.Serializer.domToXhtml(body, options.serialization);\n\n\t            if (html === undefined) {\n\t                return currentHtml;\n\t            }\n\n\t            if (html == currentHtml) {\n\t                return;\n\t            }\n\n\t            editorNS.Serializer.htmlToDom(html, body, options.deserialization);\n\n\t            this.selectionRestorePoint = null;\n\t            this.update();\n\n\t            this.toolbar.refreshTools();\n\t        },\n\n\t        saveSelection: function(range) {\n\t            range = range || this.getRange();\n\t            var container = range.commonAncestorContainer,\n\t                body = this.body;\n\n\t            if (container == body || $.contains(body, container)) {\n\t                this.selectionRestorePoint = new kendo.ui.editor.RestorePoint(range, body);\n\t            }\n\t        },\n\n\t        _focusBody: function() {\n\t            var body = this.body;\n\t            var iframe = this.wrapper && this.wrapper.find("iframe")[0];\n\t            var documentElement = this.document.documentElement;\n\t            var activeElement = kendo._activeElement();\n\t            var scrollTop;\n\n\n\t            if(!iframe && body.scrollHeight > body.clientHeight) {\n\t                scrollTop = body.scrollTop;\n\t                body.focus();\n\t                body.scrollTop = scrollTop;\n\n\t            } else if(activeElement != body && activeElement != iframe) {\n\t                scrollTop = documentElement.scrollTop;\n\t                body.focus();\n\t                documentElement.scrollTop = scrollTop;\n\t            }\n\t        },\n\n\t        restoreSelection: function() {\n\t            this._focusBody();\n\n\t            if (this.selectionRestorePoint) {\n\t                this.selectRange(this.selectionRestorePoint.toRange());\n\t            }\n\t        },\n\n\t        focus: function () {\n\t            this.restoreSelection();\n\t        },\n\n\t        update: function (value) {\n\t            value = value || this.options.encoded ? this.encodedValue() : this.value();\n\n\t            if (this.textarea) {\n\t                this.textarea.val(value);\n\t                this._togglePlaceholder(!value.trim());\n\t            } else {\n\t                this._oldValue = value;\n\t            }\n\t        },\n\n\t        encodedValue: function () {\n\t            return kendo.ui.editor.Dom.encode(this.value());\n\t        },\n\n\t        createRange: function (document) {\n\t            return kendo.ui.editor.RangeUtils.createRange(document || this.document);\n\t        },\n\n\t        getSelection: function () {\n\t            return kendo.ui.editor.SelectionUtils.selectionFromDocument(this.document);\n\t        },\n\n\t        selectRange: function(range) {\n\t            this._focusBody();\n\t            var selection = this.getSelection();\n\t            selection.removeAllRanges();\n\t            selection.addRange(range);\n\t            this.saveSelection(range);\n\t        },\n\n\t        getRange: function () {\n\t            var selection = this.getSelection(),\n\t                range = selection && selection.rangeCount > 0 ? selection.getRangeAt(0) : this.createRange(),\n\t                doc = this.document;\n\n\t            if (range.startContainer == doc && range.endContainer == doc && !range.startOffset && !range.endOffset) {\n\t                range.setStart(this.body, 0);\n\t                range.collapse(true);\n\t            }\n\n\t            return range;\n\t        },\n\n\t        _containsRange: function (range) {\n\t            var dom = kendo.ui.editor.Dom;\n\t            var body = this.body;\n\t            return range && dom.isAncestorOrSelf(body, range.startContainer) &&\n\t                dom.isAncestorOrSelf(body, range.endContainer);\n\t        },\n\n\t        _deleteSavedRange: function () {\n\t            if ("_range" in this) {\n\t                delete this._range;\n\t            }\n\t        },\n\n\t        selectedHtml: function() {\n\t            return kendo.ui.editor.Serializer.domToXhtml(this.getRange().cloneContents());\n\t        },\n\n\t        paste: function (html, options) {\n\t            this.focus();\n\n\t            var command = new kendo.ui.editor.InsertHtmlCommand($.extend({\n\t                range: this.getRange(),\n\t                html: html\n\t            }, options));\n\n\t            command.editor = this;\n\n\t            command.exec();\n\t        },\n\n\t        exec: function (name, params) {\n\t            var that = this;\n\t            var command = null;\n\t            var range, tool, prevented;\n\n\t            if (!name) {\n\t                throw new Error("kendoEditor.exec(): `name` parameter cannot be empty");\n\t            }\n\n\t            if (that.body.getAttribute("contenteditable") !== "true" &&\n\t                name !== "print" &&\n\t                name !== "pdf" &&\n\t                name !== "exportAs") {\n\t                return false;\n\t            }\n\n\t            name = name.toLowerCase();\n\n\t            if (!that.keyboard.isTypingInProgress()) {\n\t                that._focusBody();\n\t                that.selectRange(that._range || that.getRange());\n\t            }\n\n\t            tool = that.toolbar.toolById(name);\n\n\t            if (!tool) {\n\t                // execute non-toolbar tool\n\t                for (var id in Editor.defaultTools) {\n\t                    if (id.toLowerCase() == name) {\n\t                        tool = Editor.defaultTools[id];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\n\t            if (tool) {\n\t                range = that.getRange();\n\n\t                if (tool.command) {\n\t                    command = tool.command(extend({ range: range, body: that.body, immutables: !!that.immutables }, params));\n\t                }\n\n\t                prevented = that.trigger("execute", { name: name, command: command });\n\n\t                if (prevented) {\n\t                    return;\n\t                }\n\n\t                if (/^(undo|redo)$/i.test(name)) {\n\t                    that.undoRedoStack[name]();\n\t                } else if (command) {\n\t                    that.execCommand(command);\n\n\t                    if (command.async) {\n\t                        command.change = proxy(that._selectionChange, that);\n\t                        return;\n\t                    }\n\t                }\n\n\t                that._selectionChange();\n\t            }\n\t        },\n\n\t        execCommand: function(command) {\n\t            if (!command.managesUndoRedo) {\n\t                this.undoRedoStack.push(command);\n\t            }\n\n\t            command.editor = this;\n\t            command.exec();\n\t        }\n\t    });\n\n\t    Editor.defaultTools = {\n\t        undo: { options: { key: "Z", ctrl: true } },\n\t        redo: { options: { key: "Y", ctrl: true } }\n\t    };\n\n\t    kendo.ui.plugin(Editor);\n\n\t    var Tool = Class.extend({\n\t        init: function(options) {\n\t            this.options = options;\n\t        },\n\n\t        initialize: function(ui, options) {\n\t            ui.attr({ unselectable: "on", title: options.title, "aria-label": options.title });\n\t        },\n\n\t        command: function (commandArguments) {\n\t            return new this.options.command(commandArguments);\n\t        },\n\n\t        update: $.noop\n\t    });\n\n\t    Tool.exec = function (editor, name, value) {\n\t        editor.exec(name, { value: value });\n\t    };\n\n\t    EditorUtils.registerTool("separator", new Tool({ template: new ToolTemplate({template: EditorUtils.separatorTemplate})}));\n\n\t    // Exports ================================================================\n\n\t    var bomFill = browser.msie && browser.version < 9 ? \'\\ufeff\' : \'\';\n\t    var emptyElementContent = \'\\ufeff\';\n\t    var emptyTableCellContent = emptyElementContent;\n\n\t    if(browser.msie || browser.edge) {\n\t        emptyTableCellContent = emptyElementContent = "&nbsp;";\n\t    }\n\n\t    extend(kendo.ui, {\n\t        editor: {\n\t            ToolTemplate: ToolTemplate,\n\t            EditorUtils: EditorUtils,\n\t            Tool: Tool,\n\t            _bomFill: bomFill,\n\t            emptyElementContent: emptyElementContent,\n\t            emptyTableCellContent: emptyTableCellContent\n\t        }\n\t    });\n\n\t    if (kendo.PDFMixin) {\n\t        kendo.PDFMixin.extend(Editor.prototype);\n\t        Editor.prototype._drawPDF = function() {\n\t            return kendo.drawing.drawDOM(this.body, this.options.pdf);\n\t        };\n\t        Editor.prototype.saveAsPDF = function() {\n\t            var progress = new $.Deferred();\n\t            var promise = progress.promise();\n\t            var args = { promise: promise };\n\n\t            if (this.trigger("pdfExport", args)) {\n\t                return;\n\t            }\n\n\t            var options = this.options.pdf;\n\n\t            this._drawPDF(progress)\n\t            .then(function(root) {\n\t                return kendo.drawing.exportPDF(root, options);\n\t            })\n\t            .done(function(dataURI) {\n\t                kendo.saveAs({\n\t                    dataURI: dataURI,\n\t                    fileName: options.fileName,\n\t                    proxyURL: options.proxyURL,\n\t                    proxyTarget: options.proxyTarget,\n\t                    forceProxy: options.forceProxy\n\t                });\n\t                progress.resolve();\n\t            })\n\t            .fail(function(err) {\n\t                progress.reject(err);\n\t            });\n\n\t            return promise;\n\t        };\n\t    }\n\n\t})(window.kendo.jQuery);\n\n\t}, __webpack_require__(3));\n\n\n/***/ }),\n\n/***/ 942:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../util/undoredostack */ "./node_modules/@progress/kendo-ui/js/util/undoredostack.js");\n\n/***/ }),\n\n/***/ 943:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.dropdownlist */ "./node_modules/@progress/kendo-ui/js/kendo.dropdownlist.js");\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.window */ "./node_modules/@progress/kendo-ui/js/kendo.window.js");\n\n/***/ }),\n\n/***/ 945:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ../kendo.colorpicker */ "./node_modules/@progress/kendo-ui/js/kendo.colorpicker.js");\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/editor/main.js?')}}]);