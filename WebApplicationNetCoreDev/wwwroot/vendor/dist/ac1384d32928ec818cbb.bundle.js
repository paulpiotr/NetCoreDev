(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{"./node_modules/@progress/kendo-ui/js/kendo.dialog.js":
/*!************************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.dialog.js ***!
  \************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1173);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.popup */ "./node_modules/@progress/kendo-ui/js/kendo.popup.js");\n\n/***/ }),\n\n/***/ 1173:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1049), __webpack_require__(1086)], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t})(function() {\n\n\t    var __meta__ = { // jshint ignore:line\n\t        id: "dialog",\n\t        name: "Dialog",\n\t        category: "web", // suite\n\t        description: "The dialog widget is a modal popup that brings information to the user.",\n\t        depends: ["core", "popup"] // dependencies\n\t    };\n\n\t    (function($, undefined) {\n\t        var kendo = window.kendo,\n\t            Widget = kendo.ui.Widget,\n\t            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n\t            proxy = $.proxy,\n\t            template = kendo.template,\n\t            keys = kendo.keys,\n\t            isFunction = $.isFunction,\n\t            NS = "kendoWindow",\n\t            KDIALOG = ".k-dialog",\n\t            KWINDOW = ".k-window",\n\t            KICONCLOSE = ".k-dialog-close",\n\t            KCONTENTCLASS = "k-window-content k-dialog-content",\n\t            KCONTENTSELECTOR = ".k-window-content",\n\t            KSCROLL = "k-scroll",\n\t            KTITLELESS = "k-dialog-titleless",\n\t            KDIALOGTITLE = ".k-dialog-title",\n\t            KDIALOGTITLEBAR = KDIALOGTITLE + "bar",\n\t            KBUTTONGROUP = ".k-dialog-buttongroup",\n\t            KBUTTON = ".k-button",\n\t            KALERT = "k-alert",\n\t            KCONFIRM = "k-confirm",\n\t            KPROMPT = "k-prompt",\n\t            KTEXTBOX = ".k-textbox",\n\t            KOVERLAY = ".k-overlay",\n\t            VISIBLE = ":visible",\n\t            ZINDEX = "zIndex",\n\t            BODY = "body",\n\t            INITOPEN = "initOpen",\n\t            TOUCHSTART = "touchstart",\n\t            TOUCHMOVE = "touchmove",\n\t            OPEN = "open",\n\t            CLOSE = "close",\n\t            SHOW = "show",\n\t            HIDE = "hide",\n\t            SIZE = {\n\t                small: "k-window-sm",\n\t                medium: "k-window-md",\n\t                large: "k-window-lg"\n\t            },\n\t            HIDDEN = "hidden",\n\t            OVERFLOW = "overflow",\n\t            DATADOCOVERFLOWRULE = "original-overflow-rule",\n\t            DATAHTMLTAPYRULE = "tap-y",\n\t            messages = {\n\t                okText  : "OK",\n\t                cancel : "Cancel",\n\t                promptInput: "Input"\n\t            },\n\t            ceil = Math.ceil,\n\t            templates,\n\t            overlaySelector = ":not(link,meta,script,style)";\n\n\t        function defined(x) {\n\t            return (typeof x != "undefined");\n\t        }\n\n\t        function constrain(value, low, high) {\n\t            return Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), parseInt(low, 10));\n\t        }\n\n\t        function buttonKeyTrigger(e) {\n\t            return e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR;\n\t        }\n\n\t        var DialogBase = Widget.extend({\n\t            init: function(element, options) {\n\t                var that = this;\n\t                Widget.fn.init.call(that, element, options);\n\t                that._init(that.element, that.options);\n\t                kendo.notify(that);\n\t            },\n\n\t            _init: function(element, options) {\n\t                var that = this,\n\t                    wrapper;\n\n\t                that._centerCallback = proxy(that._center, that);\n\n\t                that.appendTo = $(BODY);\n\t                if (!defined(options.visible) || options.visible === null) {\n\t                    options.visible = element.is(VISIBLE);\n\t                }\n\n\t                if (that.wrapperTemplate === undefined) {\n\t                    that.wrapperTemplate = templates.wrapper;\n\t                }\n\n\t                that._createDialog();\n\t                wrapper = that.wrapper = element.closest(KDIALOG);\n\n\t                if (options._defaultFocus === undefined) {\n\t                    that._defaultFocus = element[0];\n\t                }\n\n\t                that._tabindex(element);\n\t                that._dimensions();\n\n\t                this._tabKeyTrap = new TabKeyTrap(wrapper);\n\n\t                if (!that.options.visible) {\n\t                    that.wrapper.hide();\n\t                } else {\n\t                    that._triggerOpen();\n\t                }\n\t            },\n\n\t            setOptions: function(options) {\n\t                var that = this;\n\t                var sizeClass = that.options.size;\n\n\t                options = $.extend(that.options, options);\n\n\t                Widget.fn.setOptions.call(that, options);\n\n\t                if (options.title !== undefined) {\n\t                    that.title(options.title);\n\t                }\n\n\t                if (options.content) {\n\t                    kendo.destroy(that.element.children());\n\t                    that.element.html(options.content);\n\t                }\n\n\t                if (options.actions) {\n\t                    that.wrapper.children(KBUTTONGROUP).remove();\n\t                    that._createActionbar(that.wrapper);\n\t                }\n\n\t                that.wrapper.show();\n\t                that._closable(that.wrapper);\n\n\t                that.wrapper.removeClass(SIZE[sizeClass]);\n\t                that._dimensions();\n\n\t                if (!options.visible) {\n\t                    that.wrapper.hide();\n\t                } else {\n\t                    that._triggerOpen();\n\t                }\n\n\t                if (typeof options.modal !== "undefined") {\n\t                    var visible = that.options.visible !== false;\n\t                    that._enableDocumentScrolling();\n\t                    that._overlay(options.modal && visible);\n\t                }\n\t            },\n\n\t            _dimensions: function() {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    options = that.options,\n\t                    width = options.width,\n\t                    height = options.height,\n\t                    sizeClass = options.size,\n\t                    dimensions = ["minWidth", "minHeight", "maxWidth", "maxHeight"];\n\n\t                for (var i = 0; i < dimensions.length; i++) {\n\t                    var value = options[dimensions[i]];\n\t                    if (value && value != Infinity) {\n\t                        wrapper.css(dimensions[i], value);\n\t                    }\n\t                }\n\n\t                this._setElementMaxHeight();\n\n\t                if (width) {\n\t                    if (width.toString().indexOf("%") > 0) {\n\t                        wrapper.width(width);\n\t                    } else {\n\t                        wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n\t                    }\n\t                }\n\n\t                if (height) {\n\t                    if (height.toString().indexOf("%") > 0) {\n\t                        wrapper.height(height);\n\t                    } else {\n\t                        wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n\t                    }\n\n\t                    this._setElementHeight();\n\t                }\n\n\t                if (sizeClass && SIZE[sizeClass]) {\n\t                    wrapper.addClass(SIZE[sizeClass]);\n\t                }\n\t            },\n\n\t            _setElementMaxHeight: function() {\n\t                var that = this,\n\t                    element = that.element,\n\t                    maxHeight = that.options.maxHeight,\n\t                    elementMaxHeight;\n\n\t                if (maxHeight != Infinity) {\n\t                    elementMaxHeight = parseFloat(maxHeight, 10) - that._uiHeight();\n\t                    if (elementMaxHeight > 0) {\n\t                        element.css({\n\t                            maxHeight: ceil(elementMaxHeight) + "px"\n\t                        });\n\t                    }\n\t                }\n\n\t            },\n\n\t            _setElementHeight: function() {\n\t                var that = this,\n\t                    element = that.element,\n\t                    height = that.wrapper.outerHeight(true),\n\t                    elementHeight = parseFloat(height, 10) - that._uiHeight();\n\n\t                if (elementHeight < 0) {\n\t                    elementHeight = 0;\n\t                }\n\n\t                element.css({\n\t                    height: ceil(elementHeight) + "px"\n\t                });\n\n\t                this._applyScrollClassName(element);\n\n\t            },\n\n\t            _applyScrollClassName: function(element) {\n\t                    var hasScroll = element.get(0).scrollHeight > element.outerHeight();\n\n\t                    if (hasScroll){\n\t                        element.addClass(KSCROLL);\n\t                    } else {\n\t                        element.removeClass(KSCROLL);\n\t                    }\n\t            },\n\n\t            _uiHeight: function() {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    actionbar = wrapper.children(KBUTTONGROUP),\n\t                    actionbarHeight = actionbar[0] && actionbar[0].offsetHeight || 0,\n\t                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n\t                    titlebarHeight = titlebar[0] && titlebar[0].offsetHeight || 0;\n\n\t                return actionbarHeight + titlebarHeight;\n\t            },\n\n\t            _overlay: function(visible) {\n\t                var overlay = this.appendTo.children(KOVERLAY),\n\t                    wrapper = this.wrapper;\n\n\n\t                if (!overlay.length) {\n\t                    overlay = $(templates.overlay);\n\t                }\n\n\t                overlay\n\t                    .insertBefore(wrapper[0])\n\t                    .toggle(visible)\n\t                    .css(ZINDEX, parseInt(wrapper.css(ZINDEX), 10) - 1);\n\n\t                if (visible) {\n\t                    this._waiAriaOverlay();\n\t                }\n\t                else {\n\t                    this._removeWaiAriaOverlay();\n\t                }\n\n\t                if (this.options.modal.preventScroll) {\n\t                    this._stopDocumentScrolling();\n\t                }\n\n\t                return overlay;\n\t            },\n\n\t            _waiAriaOverlay: function() {\n\t                var node = this.wrapper;\n\n\t                this._overlayedNodes = node.prevAll(overlaySelector).add(node.nextAll(overlaySelector))\n\t                    .each(function() {\n\t                        var jthis = $(this);\n\t                        jthis.data("ariaHidden", jthis.attr("aria-hidden"));\n\t                        jthis.attr("aria-hidden", "true");\n\t                    });\n\t            },\n\n\t            _removeWaiAriaOverlay: function() {\n\t                return this._overlayedNodes && this._overlayedNodes.each(function() {\n\t                    var node = $(this);\n\t                    var hiddenValue = node.data("ariaHidden");\n\t                    if (hiddenValue) {\n\t                        node.attr("aria-hidden", hiddenValue);\n\t                    }\n\t                    else {\n\t                        node.removeAttr("aria-hidden");\n\t                    }\n\t                });\n\t            },\n\n\t            _closeClick: function(e) {\n\t                e.preventDefault();\n\t                this.close(false);\n\t            },\n\n\t            _closeKeyHandler: function(e) {\n\t                if (buttonKeyTrigger(e) || e.keyCode == keys.ESC) {\n\t                    this.close(false);\n\t                }\n\t            },\n\n\t            _keydown: function(e) {\n\t                var that = this,\n\t                    options = that.options,\n\t                    keyCode = e.keyCode;\n\n\t                if (keyCode == keys.ESC && !that._closing && options.closable) {\n\t                    that.close(false);\n\t                }\n\t            },\n\n\t            _createDialog: function() {\n\t                var that = this,\n\t                    content = that.element,\n\t                    options = that.options,\n\t                    isRtl = kendo.support.isRtl(content),\n\t                    titlebar = $(templates.titlebar(options)),\n\t                    titleId = (content.id || kendo.guid()) + "_title",\n\t                    wrapper = $(that.wrapperTemplate(options));\n\n\t                wrapper.toggleClass("k-rtl", isRtl);\n\n\t                content.addClass(KCONTENTCLASS);\n\t                that.appendTo.append(wrapper);\n\n\t                if (options.title !== false) {\n\t                    wrapper.append(titlebar);\n\t                    titlebar.attr("id", titleId);\n\t                    wrapper.attr("aria-labelledby", titleId);\n\t                } else {\n\t                    wrapper.addClass(KTITLELESS);\n\t                }\n\n\t                that._closable(wrapper);\n\n\t                wrapper.append(content);\n\n\t                if (options.content) {\n\t                    kendo.destroy(content.children());\n\t                    content.html(options.content);\n\t                }\n\n\t                if (options.actions.length) {\n\t                    that._createActionbar(wrapper);\n\t                }\n\t            },\n\n\t            _closable: function (wrapper) {\n\t                var that = this;\n\t                var options = that.options;\n\t                var titlebar = wrapper.children(KDIALOGTITLEBAR);\n\t                var titlebarActions = titlebar.find(".k-window-actions");\n\t                var closeAction = titlebarActions.length ? titlebarActions.find(".k-dialog-close") : wrapper.find(".k-dialog-close");\n\n\t                closeAction.remove();\n\n\t                if (options.closable !== false) {\n\t                    if (options.title !== false && titlebarActions.length) {\n\t                        titlebarActions.append(templates.close(options));\n\t                    }\n\t                    else {\n\t                        wrapper.prepend(templates.close(options));\n\t                    }\n\n\t                    wrapper.autoApplyNS(NS);\n\t                    that.element.autoApplyNS(NS);\n\n\t                    wrapper.find(KICONCLOSE)\n\t                        .on("click", proxy(that._closeClick, that))\n\t                        .on("keydown", proxy(that._closeKeyHandler, that));\n\n\t                    that.element.on("keydown", proxy(that._keydown, that));\n\t                }\n\t            },\n\n\t            _createActionbar: function(wrapper) {\n\t                var isStretchedLayout = (this.options.buttonLayout === "stretched");\n\t                var buttonLayout = isStretchedLayout ? "stretched" : "normal";\n\t                var actionbar = $(templates.actionbar({ buttonLayout: buttonLayout }));\n\n\t                this._addButtons(actionbar);\n\t                wrapper.append(actionbar);\n\t            },\n\n\t            _addButtons: function(actionbar) {\n\t                var that = this,\n\t                    actionClick = proxy(that._actionClick, that),\n\t                    actionKeyHandler = proxy(that._actionKeyHandler, that),\n\t                    actions = that.options.actions,\n\t                    length = actions.length,\n\t                    action,\n\t                    text;\n\n\t                for (var i = 0; i < length; i++) {\n\t                    action = actions[i];\n\t                    text = that._mergeTextWithOptions(action);\n\n\t                    $(templates.action(action))\n\t                        .autoApplyNS(NS)\n\t                        .html(text)\n\t                        .appendTo(actionbar)\n\t                        .addClass(action.cssClass)\n\t                        .data("action", action.action)\n\t                        .on("click", actionClick)\n\t                        .on("keydown", actionKeyHandler);\n\t                }\n\t            },\n\n\t            _mergeTextWithOptions : function(action) {\n\t                var text = action.text;\n\t                return text ? template(text)(this.options) : "";\n\t            },\n\n\t            _tabindex: function(target) {\n\t                var that = this;\n\t                var wrapper = that.wrapper;\n\t                var closeBtn = wrapper.find(KICONCLOSE);\n\t                var actionButtons = wrapper.find(KBUTTONGROUP + " " + KBUTTON);\n\n\t                Widget.fn._tabindex.call(this, target);\n\n\t                var tabIndex = target.attr("tabindex");\n\n\t                closeBtn.attr("tabIndex", tabIndex);\n\t                actionButtons.attr("tabIndex", tabIndex);\n\t            },\n\n\t            _actionClick: function(e) {\n\t                if (this.wrapper.is(VISIBLE)) {\n\t                    this._runActionBtn(e.currentTarget);\n\t                }\n\t            },\n\n\t            _actionKeyHandler: function(e) {\n\t                if (buttonKeyTrigger(e)) {\n\t                    e.preventDefault();\n\t                    this._runActionBtn(e.currentTarget);\n\t                } else if (e.keyCode == keys.ESC) {\n\t                    this.close(false);\n\t                }\n\t            },\n\n\t            _runActionBtn: function(target) {\n\t                var that = this;\n\t                if (that._closing) {\n\t                    return;\n\t                }\n\n\t                var action = $(target).data("action"),\n\t                    preventClose = (isFunction(action) && action({ sender: that }) === false);\n\n\t                if (!preventClose) {\n\t                    that.close(false);\n\t                }\n\t            },\n\n\t            _triggerOpen: function() {\n\t                var that = this;\n\t                var options = that.options;\n\t                var wrapper = that.wrapper;\n\n\t                that.toFront();\n\t                that._triggerInitOpen();\n\t                that.trigger(OPEN);\n\t                if (options.modal) {\n\t                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n\t                    that._focusDialog();\n\t                }\n\t            },\n\n\t            open: function() {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    showOptions = this._animationOptions(OPEN),\n\t                    options = that.options,\n\t                    overlay, otherModalsVisible;\n\n\t                this._triggerInitOpen();\n\n\t                if (!that.trigger(OPEN)) {\n\t                    if (that._closing) {\n\t                        wrapper.kendoStop(true, true);\n\t                    }\n\n\t                    that._closing = false;\n\n\t                    that.toFront();\n\t                    options.visible = true;\n\t                    if (options.modal) {\n\t                        otherModalsVisible = !!that._modals().length;\n\t                        overlay = that._overlay(otherModalsVisible);\n\n\t                        overlay.kendoStop(true, true);\n\n\t                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n\t                            var overlayFx = kendo.fx(overlay).fadeIn();\n\t                            overlayFx.duration(showOptions.duration || 0);\n\t                            overlayFx.endValue(0.5);\n\t                            overlayFx.play();\n\t                        } else {\n\t                            overlay.css("opacity", 0.5);\n\t                        }\n\n\t                        overlay.show();\n\t                    }\n\n\t                    wrapper.show().kendoStop().kendoAnimate({\n\t                        effects: showOptions.effects,\n\t                        duration: showOptions.duration,\n\t                        complete: proxy(that._openAnimationEnd, that)\n\t                    });\n\t                    wrapper.show();\n\n\t                }\n\n\t                return that;\n\t            },\n\n\t            _animationOptions: function(id) {\n\t                var animation = this.options.animation;\n\t                var basicAnimation = {\n\t                    open: { effects: {} },\n\t                    close: { hide: true, effects: {} }\n\t                };\n\n\t                return animation && animation[id] || basicAnimation[id];\n\t            },\n\n\t            _openAnimationEnd: function() {\n\t                if (this.options.modal) {\n\t                    this._focusDialog();\n\t                }\n\t                this.trigger(SHOW);\n\t            },\n\n\t            _triggerInitOpen: function() {\n\t                if (!defined(this._initOpenTriggered)) {\n\t                    this._initOpenTriggered = true;\n\t                    this.trigger(INITOPEN);\n\t                }\n\t            },\n\n\t            toFront: function() {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    zIndex = +wrapper.css(ZINDEX),\n\t                    originalZIndex = zIndex;\n\n\t                that.center();\n\n\t                $(KWINDOW).each(function(i, element) {\n\t                    var windowObject = $(element),\n\t                        zIndexNew = windowObject.css(ZINDEX);\n\n\t                    if (!isNaN(zIndexNew)) {\n\t                        zIndex = Math.max(+zIndexNew, zIndex);\n\t                    }\n\t                });\n\n\t                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n\t                    wrapper.css(ZINDEX, zIndex + 2);\n\t                }\n\n\t                that.element.find("> .k-overlay").remove();\n\t                wrapper = null;\n\n\t                return that;\n\t            },\n\n\t            close: function(systemTriggered) {\n\t                if(!arguments.length) {\n\t                    systemTriggered = true;\n\t                }\n\n\t                this._close(systemTriggered);\n\t                this._stopCenterOnResize();\n\t                return this;\n\t            },\n\n\t            _close: function(systemTriggered) {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    options = that.options,\n\t                    showOptions = this._animationOptions("open"),\n\t                    hideOptions = this._animationOptions("close");\n\n\t                if (wrapper.is(VISIBLE) && !that.trigger(CLOSE, { userTriggered: !systemTriggered })) {\n\t                    if (that._closing) {\n\t                        return;\n\t                    }\n\t                    that._closing = true;\n\n\t                    options.visible = false;\n\t                    this._removeOverlay();\n\n\t                    wrapper.kendoStop().kendoAnimate({\n\t                        effects: hideOptions.effects || showOptions.effects,\n\t                        reverse: hideOptions.reverse === true,\n\t                        duration: hideOptions.duration,\n\t                        complete: proxy(this._closeAnimationEnd, this)\n\t                    });\n\t                }\n\n\t                return that;\n\t            },\n\n\t            center: function() {\n\t                this._center();\n\t                this._centerOnResize();\n\t            },\n\n\t            _center: function() {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    documentWindow = $(window),\n\t                    scrollTop = 0,\n\t                    scrollLeft = 0,\n\t                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.width()) / 2),\n\t                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.height() - parseInt(wrapper.css("paddingTop"), 10)) / 2);\n\n\t                wrapper.css({\n\t                    left: newLeft,\n\t                    top: newTop\n\t                });\n\n\t                return that;\n\t            },\n\n\t            _centerOnResize: function() {\n\t                if (this._trackResize) {\n\t                    return;\n\t                }\n\n\t                kendo.onResize(this._centerCallback);\n\t                this._trackResize = true;\n\t            },\n\n\t            _stopCenterOnResize: function() {\n\t                kendo.unbindResize(this._centerCallback);\n\t                this._trackResize = false;\n\t            },\n\n\t            _removeOverlay: function() {\n\t                var modals = this._modals();\n\t                var options = this.options;\n\t                var hideOverlay = options.modal && !modals.length;\n\n\t                if (hideOverlay) {\n\t                    this._overlay(false).remove();\n\n\t                    if (options.modal.preventScroll) {\n\t                        this._enableDocumentScrolling();\n\t                    }\n\t                } else if (modals.length) {\n\t                    this._object(modals.last())._overlay(true);\n\n\t                    if (options.modal.preventScroll) {\n\t                        this._stopDocumentScrolling();\n\t                    }\n\t                }\n\t            },\n\n\t            _stopDocumentScrolling: function(){\n\t                var that = this;\n\n\t                var $body = $("body");\n\t                that._storeOverflowRule($body);\n\t                $body.css(OVERFLOW, HIDDEN);\n\n\t                var $html = $("html");\n\t                var html = $html[0];\n\t                that._storeOverflowRule($html);\n\t                $html.css(OVERFLOW, HIDDEN);\n\n\t                // prevent touch due to bug in ios\n\t                if (kendo.support.mobileOS.ios) {\n\t                    html.addEventListener(TOUCHSTART, that._touchStart, { passive: false });\n\t                    html.addEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n\t                }\n\t            },\n\n\t            _touchStart: function (e) {\n\t                $(this).data(DATAHTMLTAPYRULE, e.changedTouches[0].pageY);\n\t            },\n\n\t            _touchMove: function (e) {\n\t                var target = e.target;\n\t                var $target = $(e.target);\n\t                var upScroll = e.changedTouches[0].pageY - $(this).data(DATAHTMLTAPYRULE) > 0;\n\t                var preventYScroll = $target.is(KCONTENTSELECTOR) &&\n\t                    (upScroll && $target.scrollTop() === 0) ||\n\t                    (!upScroll && $target.scrollTop() === target.scrollHeight - target.clientHeight);\n\t                if (!$target.is(KCONTENTSELECTOR) || preventYScroll) {\n\t                    e.preventDefault();\n\t                }\n\t            },\n\n\t            _enableDocumentScrolling: function(){\n\t                var that = this;\n\t                var $body = $(document.body);\n\t                var $html = $("html");\n\t                var html = $html[0];\n\n\t                that._restoreOverflowRule($body);\n\t                that._restoreOverflowRule($html);\n\n\t                if (kendo.support.mobileOS.ios) {\n\t                    $html.removeData(DATAHTMLTAPYRULE);\n\t                    html.removeEventListener(TOUCHSTART, that._touchStart, { passive: false });\n\t                    html.removeEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n\t                }\n\t            },\n\n\t            _storeOverflowRule: function($element){\n\t                if(this._isOverflowStored($element)){\n\t                    return;\n\t                }\n\n\t                var overflowRule = $element.get(0).style.overflow;\n\n\t                if(typeof overflowRule === "string"){\n\t                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n\t                }\n\t            },\n\n\t            _isOverflowStored: function ($element){\n\t                return typeof $element.data(DATADOCOVERFLOWRULE) === "string";\n\t            },\n\n\t            _restoreOverflowRule: function($element){\n\t                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n\t                if(overflowRule !== null && overflowRule !== undefined){\n\t                    $element.css(OVERFLOW, overflowRule);\n\t                    $element.removeData(DATADOCOVERFLOWRULE);\n\t                } else {\n\t                    $element.css(OVERFLOW, "");\n\t                }\n\t            },\n\n\t            _closeAnimationEnd: function() {\n\t                var that = this;\n\n\t                that._closing = false;\n\t                that.wrapper.hide().css("opacity", "");\n\t                that.trigger(HIDE);\n\n\t                if (that.options.modal) {\n\t                    var lastModal = that._object(that._modals().last());\n\t                    if (lastModal) {\n\t                        lastModal.toFront();\n\t                    }\n\t                }\n\t            },\n\n\t            _modals: function() {\n\t                var that = this;\n\n\t                var zStack = $(KWINDOW).filter(function() {\n\t                    var dom = $(this);\n\t                    var object = that._object(dom);\n\t                    var options = object && object.options;\n\n\t                    return options && options.modal && that.options.appendTo == options.appendTo && options.visible && dom.is(VISIBLE);\n\t                }).sort(function(a, b) {\n\t                    return +$(a).css("zIndex") - +$(b).css("zIndex");\n\t                });\n\n\t                that = null;\n\n\t                return zStack;\n\t            },\n\n\t            _object: function(element) {\n\t                var content = element.children(KCONTENTSELECTOR);\n\t                var widget = kendo.widgetInstance(content);\n\n\t                if (widget) {\n\t                    return widget;\n\t                }\n\n\t                return undefined;\n\t            },\n\n\t            destroy: function() {\n\t                var that = this;\n\t                that._destroy();\n\n\t                Widget.fn.destroy.call(that);\n\n\t                kendo.destroy(that.wrapper);\n\n\t                that.wrapper.remove();\n\t                that.wrapper = that.element = $();\n\t            },\n\n\t            _destroy: function() {\n\t                var that = this;\n\t                var ns = "." + NS;\n\n\t                that.wrapper.off(ns);\n\t                that.element.off(ns);\n\t                that.wrapper.find(KICONCLOSE + "," + KBUTTONGROUP + " > " + KBUTTON).off(ns);\n\t                that._stopCenterOnResize();\n\t            },\n\n\t            title: function(html) {\n\t                var that = this,\n\t                    wrapper = that.wrapper,\n\t                    options = that.options,\n\t                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n\t                    title = titlebar.children(KDIALOGTITLE),\n\t                    encodedHtml = kendo.htmlEncode(html);\n\n\t                if (!arguments.length) {\n\t                    return title.html();\n\t                }\n\n\t                if (html === false) {\n\t                    titlebar.remove();\n\t                    wrapper.addClass(KTITLELESS);\n\t                } else {\n\t                    if (!titlebar.length) {\n\t                        titlebar = $(templates.titlebar(options)).prependTo(wrapper);\n\t                        title = titlebar.children(KDIALOGTITLE);\n\t                        wrapper.removeClass(KTITLELESS);\n\t                    }\n\t                    title.html(encodedHtml);\n\t                }\n\n\t                that.options.title = encodedHtml;\n\n\t                return that;\n\t            },\n\n\t            content: function(html, data) {\n\t                var that = this,\n\t                    content = that.wrapper.children(KCONTENTSELECTOR);\n\n\t                if (!defined(html)) {\n\t                    return content.html();\n\t                }\n\n\t                this.angular("cleanup", function(){\n\t                    return { elements: content.children() };\n\t                });\n\n\t                kendo.destroy(content.children());\n\t                content.html(html);\n\n\t                this.angular("compile", function(){\n\t                    var a = [];\n\t                    for (var i = content.length; --i >= 0;) {\n\t                        a.push({ dataItem: data });\n\t                    }\n\t                    return {\n\t                        elements: content.children(),\n\t                        data: a\n\t                    };\n\t                });\n\n\t                that.options.content = html;\n\n\t                return that;\n\t            },\n\n\t            _focusDialog: function() {\n\t                if (this._defaultFocus) {\n\t                    this._focus(this._defaultFocus);\n\t                }\n\t                this._tabKeyTrap.trap();\n\t            },\n\n\t            _focus: function(node) {\n\t                if (node) {\n\t                    node.focus();\n\t                }\n\t            },\n\n\t            events: [\n\t                INITOPEN,\n\t                OPEN,\n\t                CLOSE,\n\t                SHOW,\n\t                HIDE\n\t            ],\n\n\t            options: {\n\t                title: "",\n\t                buttonLayout: "stretched",\n\t                actions: [],\n\t                modal: true,\n\t                size: "auto",\n\t                width: null,\n\t                height: null,\n\t                minWidth: 0,\n\t                minHeight: 0,\n\t                maxWidth: Infinity,\n\t                maxHeight: Infinity,\n\t                content: null,\n\t                visible: null,\n\t                appendTo: BODY,\n\t                closable: true\n\t            }\n\t        });\n\n\t        var Dialog = DialogBase.extend({\n\t            options: {\n\t                name: "Dialog",\n\t                messages: {\n\t                    close: "Close"\n\t                }\n\t            }\n\t        });\n\n\t        kendo.ui.plugin(Dialog);\n\n\t        var PopupBox = DialogBase.extend({\n\t            _init: function(element, options) {\n\t                var that = this;\n\n\t                that.wrapperTemplate = templates.alertWrapper;\n\t                options._defaultFocus = null;\n\t                that._ensureContentId(element);\n\n\t                DialogBase.fn._init.call(that, element, options);\n\n\t                that.bind(HIDE, proxy(that.destroy, that));\n\n\t                that._ariaDescribedBy();\n\t                that._initFocus();\n\t            },\n\n\t            _ensureContentId: function(element) {\n\t                var node = $(element);\n\t                if(!node.attr("id")) {\n\t                    node.attr("id", kendo.guid() + "_k-popup");\n\t                }\n\t            },\n\n\t            _ariaDescribedBy: function() {\n\t                this.wrapper.attr("aria-describedby", this.element.attr("id"));\n\t            },\n\n\t            _initFocus: function() {\n\t                var o = this.options;\n\n\t                this._defaultFocus = this._chooseEntryFocus();\n\t                if (this._defaultFocus && o.visible && o.modal) {\n\t                    this._focusDialog();\n\t                }\n\t            },\n\n\t            _chooseEntryFocus: function() {\n\t                return this.wrapper.find(KBUTTONGROUP + " > " + KBUTTON)[0];\n\t            },\n\n\t            options: {\n\t                title: window.location.host,\n\t                closable: false,\n\t                messages: messages\n\t            }\n\t        });\n\n\t        var Alert = PopupBox.extend({\n\t            _init: function(element, options) {\n\t                var that = this;\n\t                PopupBox.fn._init.call(that, element, options);\n\t                that.wrapper.addClass(KALERT);\n\t            },\n\n\t            options: {\n\t                name: "Alert",\n\t                modal: true,\n\t                actions: [{\n\t                    text: "#: messages.okText #"\n\t                }]\n\t            }\n\t        });\n\n\t        kendo.ui.plugin(Alert);\n\n\t        var kendoAlert = function(text) {\n\t            return $(templates.alert).kendoAlert({ content: text }).data("kendoAlert").open();\n\t        };\n\n\t        var Confirm = PopupBox.extend({\n\t            _init: function(element, options) {\n\t                var that = this;\n\t                PopupBox.fn._init.call(that, element, options);\n\t                that.wrapper.addClass(KCONFIRM);\n\t                that.result = $.Deferred();\n\t            },\n\n\t            options: {\n\t                name: "Confirm",\n\t                modal: true,\n\t                actions: [{\n\t                    text: "#: messages.okText #",\n\t                    primary: true,\n\t                    action: function(e) {\n\t                        e.sender.result.resolve();\n\t                    }\n\t                }, {\n\t                    text: "#: messages.cancel #",\n\t                    action: function(e) {\n\t                        e.sender.result.reject();\n\t                    }\n\t                }]\n\t            }\n\t        });\n\n\t        kendo.ui.plugin(Confirm);\n\n\t        var kendoConfirm = function(text) {\n\t            var confirmDialog = $(templates.confirm).kendoConfirm({ content: text }).data("kendoConfirm").open();\n\t            return confirmDialog.result;\n\t        };\n\n\t        var Prompt = PopupBox.extend({\n\t            _init: function(element, options) {\n\t                var that = this;\n\t                PopupBox.fn._init.call(that, element, options);\n\t                that.wrapper.addClass(KPROMPT);\n\t                that._createPrompt();\n\t                that.result = $.Deferred();\n\t            },\n\n\t            _createPrompt: function() {\n\t                var value = this.options.value,\n\t                    promptContainer = $(templates.promptInputContainer(this.options)).insertAfter(this.element);\n\n\t                if (value) {\n\t                    promptContainer.children(KTEXTBOX).val(value);\n\t                }\n\n\t                this._defaultFocus = this._chooseEntryFocus();\n\t                this._focusDialog();\n\t            },\n\n\t            _chooseEntryFocus: function() {\n\t                return this.wrapper.find(KTEXTBOX)[0];\n\t            },\n\n\t            options: {\n\t                name: "Prompt",\n\t                modal: true,\n\t                value: "",\n\t                actions: [{\n\t                    text: "#: messages.okText #",\n\t                    primary: true,\n\t                    action: function(e) {\n\t                        var sender = e.sender,\n\t                            value = sender.wrapper.find(KTEXTBOX).val();\n\n\t                        sender.result.resolve(value);\n\t                    }\n\t                }, {\n\t                    text: "#: messages.cancel #",\n\t                    action: function(e) {\n\t                        var sender = e.sender,\n\t                            value = sender.wrapper.find(KTEXTBOX).val();\n\n\t                        e.sender.result.reject(value);\n\t                    }\n\t                }]\n\t            }\n\t        });\n\n\t        kendo.ui.plugin(Prompt);\n\n\t        var kendoPrompt = function(text, value) {\n\t            var promptDialog = $(templates.prompt).kendoPrompt({\n\t                content: text,\n\t                value: value\n\t            }).data("kendoPrompt").open();\n\n\t            return promptDialog.result;\n\t        };\n\n\t        templates = {\n\t            wrapper: template("<div class=\'k-widget k-window k-dialog\' role=\'dialog\'></div>"),\n\t            action: template("<button type=\'button\' class=\'k-button# if (data.primary) { # k-primary# } role=\'button\' #\'></button>"),\n\t            titlebar: template(\n\t                "<div class=\'k-window-titlebar k-dialog-titlebar\'>" +\n\t                    "<span class=\'k-window-title k-dialog-title\'>#: title #</span>" +\n\t                    "<div class=\'k-window-actions k-dialog-actions\'></div>" +\n\t                "</div>"\n\t            ),\n\t            close: template("<a role=\'button\' href=\'\\\\#\' class=\'k-button k-flat k-button-icon k-window-action k-dialog-action k-dialog-close\' title=\'#: messages.close #\' aria-label=\'#: messages.close #\' tabindex=\'-1\'><span class=\'k-icon k-i-close\'></span></a>"),\n\t            actionbar: template("<div class=\'k-dialog-buttongroup k-dialog-button-layout-#: buttonLayout #\' role=\'toolbar\'></div>"),\n\t            overlay: "<div class=\'k-overlay\'></div>",\n\t            alertWrapper: template("<div class=\'k-widget k-window k-dialog\' role=\'alertdialog\'></div>"),\n\t            alert: "<div></div>",\n\t            confirm: "<div></div>",\n\t            prompt: "<div></div>",\n\t            promptInputContainer: template("<div class=\'k-prompt-container\'><input type=\'text\' class=\'k-textbox\' title=\'#: messages.promptInput #\' aria-label=\'#: messages.promptInput #\' /></div>")\n\t        };\n\n\t        kendo.alert = kendoAlert;\n\t        kendo.confirm = kendoConfirm;\n\t        kendo.prompt = kendoPrompt;\n\n\t    })(window.kendo.jQuery);\n\n\t    return window.kendo;\n\n\t}, __webpack_require__(3));\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.dialog.js?')},"./node_modules/@progress/kendo-ui/js/kendo.dom.js":
/*!*********************************************************!*\
  !*** ./node_modules/@progress/kendo-ui/js/kendo.dom.js ***!
  \*********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1174);\n\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n\tmodule.exports = function() { throw new Error("define cannot be used indirect"); };\r\n\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! ./kendo.core */ "./node_modules/@progress/kendo-ui/js/kendo.core.js");\n\n/***/ }),\n\n/***/ 1174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(f, define){\r\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(1049) ], __WEBPACK_AMD_DEFINE_FACTORY__ = (f), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t})(function(){\r\n\r\n\tvar __meta__ = { // jshint ignore:line\r\n\t    id: "dom",\r\n\t    name: "Virtual DOM",\r\n\t    category: "framework",\r\n\t    depends: [ "core" ],\r\n\t    advanced: true\r\n\t};\r\n\r\n\t(function(kendo) {\r\n\t    function Node() {\r\n\t        this.node = null;\r\n\t    }\r\n\r\n\t    Node.prototype = {\r\n\t        remove: function() {\r\n\t            if (this.node.parentNode) {\r\n\t                this.node.parentNode.removeChild(this.node);\r\n\t            }\r\n\t            this.attr = {};\r\n\t        },\r\n\t        attr: {},\r\n\t        text: function() {\r\n\t            return "";\r\n\t        }\r\n\t    };\r\n\r\n\t    function NullNode() {\r\n\t    }\r\n\r\n\t    NullNode.prototype = {\r\n\t        nodeName: "#null",\r\n\t        attr: { style: {} },\r\n\t        children: [],\r\n\t        remove: function() {\r\n\t        }\r\n\t    };\r\n\r\n\t    var NULL_NODE = new NullNode();\r\n\r\n\t    function Element(nodeName, attr, children) {\r\n\t        this.nodeName = nodeName;\r\n\r\n\t        this.attr = attr || {};\r\n\r\n\t        this.children = children || [];\r\n\t    }\r\n\r\n\t    Element.prototype = new Node();\r\n\r\n\t    Element.prototype.appendTo = function(parent) {\r\n\t        var node = document.createElement(this.nodeName);\r\n\r\n\t        var children = this.children;\r\n\r\n\t        for (var index = 0; index < children.length; index++) {\r\n\t            children[index].render(node, NULL_NODE);\r\n\t        }\r\n\r\n\t        parent.appendChild(node);\r\n\r\n\t        return node;\r\n\t    };\r\n\r\n\t    Element.prototype.render = function(parent, cached) {\r\n\t        var node;\r\n\r\n\t        if (cached.nodeName !== this.nodeName) {\r\n\t            cached.remove();\r\n\r\n\t            node = this.appendTo(parent);\r\n\t        } else {\r\n\t            node = cached.node;\r\n\r\n\t            var index;\r\n\r\n\t            var children = this.children;\r\n\r\n\t            var length = children.length;\r\n\r\n\t            var cachedChildren = cached.children;\r\n\r\n\t            var cachedLength = cachedChildren.length;\r\n\r\n\t            if (Math.abs(cachedLength - length) > 2) {\r\n\t                this.render({\r\n\t                    appendChild: function(node) {\r\n\t                        parent.replaceChild(node, cached.node);\r\n\t                    }\r\n\t                }, NULL_NODE);\r\n\r\n\t                return;\r\n\t            }\r\n\r\n\t            for (index = 0; index < length; index++) {\r\n\t                children[index].render(node, cachedChildren[index] || NULL_NODE);\r\n\t            }\r\n\r\n\t            for (index = length; index < cachedLength; index++) {\r\n\t                cachedChildren[index].remove();\r\n\t            }\r\n\t        }\r\n\r\n\t        this.node = node;\r\n\r\n\t        this.syncAttributes(cached.attr);\r\n\r\n\t        this.removeAttributes(cached.attr);\r\n\t    };\r\n\r\n\t    Element.prototype.syncAttributes = function(cachedAttr) {\r\n\t        var attr = this.attr;\r\n\r\n\t        for (var name in attr) {\r\n\t            var value = attr[name];\r\n\r\n\t            var cachedValue = cachedAttr[name];\r\n\r\n\t            if (name === "style") {\r\n\t                this.setStyle(value, cachedValue);\r\n\t            } else if (value !== cachedValue) {\r\n\t                this.setAttribute(name, value, cachedValue);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.setStyle = function(style, cachedValue) {\r\n\t        var node = this.node;\r\n\t        var key;\r\n\r\n\t        if (cachedValue) {\r\n\t            for (key in style) {\r\n\t                if (style[key] !== cachedValue[key]) {\r\n\t                    node.style[key] = style[key];\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            for (key in style) {\r\n\t                node.style[key] = style[key];\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.removeStyle = function(cachedStyle) {\r\n\t        var style = this.attr.style || {};\r\n\t        var node = this.node;\r\n\r\n\t        for (var key in cachedStyle) {\r\n\t            if (style[key] === undefined) {\r\n\t                node.style[key] = "";\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.removeAttributes = function(cachedAttr) {\r\n\t        var attr = this.attr;\r\n\r\n\t        for (var name in cachedAttr) {\r\n\t            if (name === "style") {\r\n\t                this.removeStyle(cachedAttr.style);\r\n\t            } else if (attr[name] === undefined) {\r\n\t                this.removeAttribute(name);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.removeAttribute = function(name) {\r\n\t        var node = this.node;\r\n\r\n\t        if (name === "style") {\r\n\t            node.style.cssText = "";\r\n\t        } else if (name === "className") {\r\n\t            node.className = "";\r\n\t        } else {\r\n\t            node.removeAttribute(name);\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.setAttribute = function(name, value) {\r\n\t        var node = this.node;\r\n\r\n\t        if (node[name] !== undefined) {\r\n\t            node[name] = value;\r\n\t        } else {\r\n\t            node.setAttribute(name, value);\r\n\t        }\r\n\t    };\r\n\r\n\t    Element.prototype.text = function() {\r\n\t        var str = "";\r\n\t        for (var i = 0; i < this.children.length; ++i) {\r\n\t            str += this.children[i].text();\r\n\t        }\r\n\t        return str;\r\n\t    };\r\n\r\n\t    function TextNode(nodeValue) {\r\n\t        this.nodeValue = String(nodeValue);\r\n\t    }\r\n\r\n\t    TextNode.prototype = new Node();\r\n\r\n\t    TextNode.prototype.nodeName = "#text";\r\n\r\n\t    TextNode.prototype.render = function(parent, cached) {\r\n\t        var node;\r\n\r\n\t        if (cached.nodeName !== this.nodeName) {\r\n\t            cached.remove();\r\n\r\n\t            node = document.createTextNode(this.nodeValue);\r\n\r\n\t            parent.appendChild(node);\r\n\t        } else {\r\n\t            node = cached.node;\r\n\r\n\t            if (this.nodeValue !== cached.nodeValue) {\r\n\t                if (node.parentNode) {\r\n\t                    // sometimes in IE parentNode is null (reason unknown),\r\n\t                    // and IE throws an error when you try to set a\r\n\t                    // parentless\' nodeValue, because why not.\r\n\t                    node.nodeValue = this.nodeValue;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\r\n\t        this.node = node;\r\n\t    };\r\n\r\n\t    TextNode.prototype.text = function() {\r\n\t        return this.nodeValue;\r\n\t    };\r\n\r\n\t    function HtmlNode(html) {\r\n\t        this.html = html;\r\n\t    }\r\n\r\n\t    HtmlNode.prototype = {\r\n\t       nodeName: "#html",\r\n\t       attr: {},\r\n\t       remove: function() {\r\n\t           for (var index = 0; index < this.nodes.length; index++) {\r\n\t               var el = this.nodes[index];\r\n\t               if (el.parentNode) {\r\n\t                   el.parentNode.removeChild(el);\r\n\t               }\r\n\t           }\r\n\t       },\r\n\t       render: function(parent, cached) {\r\n\t           if (cached.nodeName !== this.nodeName || cached.html !== this.html) {\r\n\t               cached.remove();\r\n\r\n\t               var lastChild = parent.lastChild;\r\n\r\n\t               insertHtml(parent, this.html);\r\n\r\n\t               this.nodes = [];\r\n\r\n\t               for (var child = lastChild ? lastChild.nextSibling : parent.firstChild; child; child = child.nextSibling) {\r\n\t                   this.nodes.push(child);\r\n\t               }\r\n\t           } else {\r\n\t               this.nodes = cached.nodes.slice(0);\r\n\t           }\r\n\t       }\r\n\t    };\r\n\r\n\t    var HTML_CONTAINER = document.createElement("div");\r\n\r\n\t    function insertHtml(node, html) {\r\n\t        HTML_CONTAINER.innerHTML = html;\r\n\r\n\t        while (HTML_CONTAINER.firstChild) {\r\n\t            node.appendChild(HTML_CONTAINER.firstChild);\r\n\t        }\r\n\t    }\r\n\r\n\t    function html(value) {\r\n\t        return new HtmlNode(value);\r\n\t    }\r\n\r\n\t    function element(nodeName, attrs, children) {\r\n\t        return new Element(nodeName, attrs, children);\r\n\t    }\r\n\r\n\t    function text(value) {\r\n\t        return new TextNode(value);\r\n\t    }\r\n\r\n\t    function Tree(root) {\r\n\t       this.root = root;\r\n\t       this.children = [];\r\n\t    }\r\n\r\n\t    Tree.prototype = {\r\n\t        html: html,\r\n\t        element: element,\r\n\t        text: text,\r\n\t        render: function(children) {\r\n\t            var cachedChildren = this.children;\r\n\r\n\t            var index;\r\n\r\n\t            var length;\r\n\r\n\t            for (index = 0, length = children.length; index < length; index++) {\r\n\t                var cached = cachedChildren[index];\r\n\t                if (!cached) {\r\n\t                    cached = NULL_NODE;\r\n\t                } else if (!cached.node || !cached.node.parentNode) {\r\n\t                    cached.remove();\r\n\t                    cached = NULL_NODE;\r\n\t                }\r\n\t                children[index].render(this.root, cached);\r\n\t            }\r\n\r\n\t            for (index = length; index < cachedChildren.length; index++) {\r\n\t                cachedChildren[index].remove();\r\n\t            }\r\n\r\n\t            this.children = children;\r\n\t        }\r\n\t    };\r\n\r\n\t    kendo.dom = {\r\n\t        html: html,\r\n\t        text: text,\r\n\t        element: element,\r\n\t        Tree: Tree,\r\n\t        Node: Node\r\n\t    };\r\n\t})(window.kendo);\r\n\r\n\treturn window.kendo;\r\n\r\n\t}, __webpack_require__(3));\r\n\n\n/***/ })\n\n/******/ });\n\n//# sourceURL=webpack:///./node_modules/@progress/kendo-ui/js/kendo.dom.js?')}}]);